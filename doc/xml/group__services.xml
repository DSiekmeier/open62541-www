<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="group__services" kind="group">
    <compoundname>services</compoundname>
    <title>Services</title>
      <sectiondef kind="user-defined">
      <header>Discovery Service Set</header>
      <description><para>This Service Set defines Services used to discover the Endpoints implemented by a Server and to read the security configuration for those Endpoints. </para></description>
      <memberdef kind="function" id="group__services_1ga7e5083836bf95b8ab1c017ae043d1314" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Service_FindServers</definition>
        <argsstring>(UA_Server *server, const UA_FindServersRequest *request, UA_FindServersResponse *response)</argsstring>
        <name>Service_FindServers</name>
        <param>
          <type><ref refid="structUA__Server" kindref="compound">UA_Server</ref> *</type>
          <declname>server</declname>
        </param>
        <param>
          <type>const <ref refid="structUA__FindServersRequest" kindref="compound">UA_FindServersRequest</ref> *</type>
          <declname>request</declname>
        </param>
        <param>
          <type><ref refid="structUA__FindServersResponse" kindref="compound">UA_FindServersResponse</ref> *</type>
          <declname>response</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/src/server/ua_services.h" line="29"/>
      </memberdef>
      <memberdef kind="function" id="group__services_1ga810b8cc0243476e5267e34c40e149140" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Service_GetEndpoints</definition>
        <argsstring>(UA_Server *server, const UA_GetEndpointsRequest *request, UA_GetEndpointsResponse *response)</argsstring>
        <name>Service_GetEndpoints</name>
        <param>
          <type><ref refid="structUA__Server" kindref="compound">UA_Server</ref> *</type>
          <declname>server</declname>
        </param>
        <param>
          <type>const <ref refid="structUA__GetEndpointsRequest" kindref="compound">UA_GetEndpointsRequest</ref> *</type>
          <declname>request</declname>
        </param>
        <param>
          <type><ref refid="structUA__GetEndpointsResponse" kindref="compound">UA_GetEndpointsResponse</ref> *</type>
          <declname>response</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the Endpoints supported by a Server and all of the configuration information required to establish a SecureChannel and a Session. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/src/server/ua_services.h" line="35"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>SecureChannel Service Set</header>
      <description><para>This Service Set defines Services used to open a communication channel that ensures the confidentiality and Integrity of all Messages exchanged with the Server. </para></description>
      <memberdef kind="function" id="group__services_1gae09db04d5a376fde439436847b9944a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Service_OpenSecureChannel</definition>
        <argsstring>(UA_Server *server, UA_Connection *connection, const UA_OpenSecureChannelRequest *request, UA_OpenSecureChannelResponse *response)</argsstring>
        <name>Service_OpenSecureChannel</name>
        <param>
          <type><ref refid="structUA__Server" kindref="compound">UA_Server</ref> *</type>
          <declname>server</declname>
        </param>
        <param>
          <type><ref refid="structUA__Connection" kindref="compound">UA_Connection</ref> *</type>
          <declname>connection</declname>
        </param>
        <param>
          <type>const <ref refid="structUA__OpenSecureChannelRequest" kindref="compound">UA_OpenSecureChannelRequest</ref> *</type>
          <declname>request</declname>
        </param>
        <param>
          <type><ref refid="structUA__OpenSecureChannelResponse" kindref="compound">UA_OpenSecureChannelResponse</ref> *</type>
          <declname>response</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Open or renew a SecureChannel that can be used to ensure Confidentiality and Integrity for Message exchange during a Session. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/src/server/ua_services.h" line="55"/>
      </memberdef>
      <memberdef kind="function" id="group__services_1gada4a32f803c004389b94fbaf4566b120" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Service_CloseSecureChannel</definition>
        <argsstring>(UA_Server *server, UA_Int32 channelId)</argsstring>
        <name>Service_CloseSecureChannel</name>
        <param>
          <type><ref refid="structUA__Server" kindref="compound">UA_Server</ref> *</type>
          <declname>server</declname>
        </param>
        <param>
          <type><ref refid="ua__types_8h_1a01ce3c3b2fb34ef81c97c313f516004e" kindref="member">UA_Int32</ref></type>
          <declname>channelId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Used to terminate a SecureChannel. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/src/server/ua_services.h" line="58"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Session Service Set</header>
      <description><para>This Service Set defines Services for an application layer connection establishment in the context of a Session. </para></description>
      <memberdef kind="function" id="group__services_1gaf58a784fc3879a160d257139af18caa9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Service_CreateSession</definition>
        <argsstring>(UA_Server *server, UA_SecureChannel *channel, const UA_CreateSessionRequest *request, UA_CreateSessionResponse *response)</argsstring>
        <name>Service_CreateSession</name>
        <param>
          <type><ref refid="structUA__Server" kindref="compound">UA_Server</ref> *</type>
          <declname>server</declname>
        </param>
        <param>
          <type><ref refid="structUA__SecureChannel" kindref="compound">UA_SecureChannel</ref> *</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="structUA__CreateSessionRequest" kindref="compound">UA_CreateSessionRequest</ref> *</type>
          <declname>request</declname>
        </param>
        <param>
          <type><ref refid="structUA__CreateSessionResponse" kindref="compound">UA_CreateSessionResponse</ref> *</type>
          <declname>response</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Used by an OPC UA Client to create a Session and the Server returns two values which uniquely identify the Session. The first value is the sessionId which is used to identify the Session in the audit logs and in the Server&apos;s address space. The second is the authenticationToken which is used to associate an incoming request with a Session. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/src/server/ua_services.h" line="79"/>
      </memberdef>
      <memberdef kind="function" id="group__services_1gaf965e1b90c35c901efdae40bcdc235e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Service_ActivateSession</definition>
        <argsstring>(UA_Server *server, UA_SecureChannel *channel, const UA_ActivateSessionRequest *request, UA_ActivateSessionResponse *response)</argsstring>
        <name>Service_ActivateSession</name>
        <param>
          <type><ref refid="structUA__Server" kindref="compound">UA_Server</ref> *</type>
          <declname>server</declname>
        </param>
        <param>
          <type><ref refid="structUA__SecureChannel" kindref="compound">UA_SecureChannel</ref> *</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="structUA__ActivateSessionRequest" kindref="compound">UA_ActivateSessionRequest</ref> *</type>
          <declname>request</declname>
        </param>
        <param>
          <type><ref refid="structUA__ActivateSessionResponse" kindref="compound">UA_ActivateSessionResponse</ref> *</type>
          <declname>response</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Used by the Client to submit its SoftwareCertificates to the Server for validation and to specify the identity of the user associated with the Session. This Service request shall be issued by the Client before it issues any other Service request after CreateSession. Failure to do so shall cause the Server to close the Session. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/src/server/ua_services.h" line="89"/>
      </memberdef>
      <memberdef kind="function" id="group__services_1ga0fbc9a3db1074fd51324f8bd2f690656" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Service_CloseSession</definition>
        <argsstring>(UA_Server *server, UA_Session *session, const UA_CloseSessionRequest *request, UA_CloseSessionResponse *response)</argsstring>
        <name>Service_CloseSession</name>
        <param>
          <type><ref refid="structUA__Server" kindref="compound">UA_Server</ref> *</type>
          <declname>server</declname>
        </param>
        <param>
          <type><ref refid="structUA__Session" kindref="compound">UA_Session</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>const <ref refid="structUA__CloseSessionRequest" kindref="compound">UA_CloseSessionRequest</ref> *</type>
          <declname>request</declname>
        </param>
        <param>
          <type><ref refid="structUA__CloseSessionResponse" kindref="compound">UA_CloseSessionResponse</ref> *</type>
          <declname>response</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Used to terminate a Session. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/src/server/ua_services.h" line="93"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>NodeManagement Service Set</header>
      <description><para>This Service Set defines Services to add and delete AddressSpace Nodes and References between them. All added Nodes continue to exist in the AddressSpace even if the Client that created them disconnects from the Server. </para></description>
      <memberdef kind="function" id="group__services_1gac2803a739b87365afe4a7fee26cf6916" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Service_AddNodes</definition>
        <argsstring>(UA_Server *server, UA_Session *session, const UA_AddNodesRequest *request, UA_AddNodesResponse *response)</argsstring>
        <name>Service_AddNodes</name>
        <param>
          <type><ref refid="structUA__Server" kindref="compound">UA_Server</ref> *</type>
          <declname>server</declname>
        </param>
        <param>
          <type><ref refid="structUA__Session" kindref="compound">UA_Session</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>const <ref refid="structUA__AddNodesRequest" kindref="compound">UA_AddNodesRequest</ref> *</type>
          <declname>request</declname>
        </param>
        <param>
          <type><ref refid="structUA__AddNodesResponse" kindref="compound">UA_AddNodesResponse</ref> *</type>
          <declname>response</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Used to add one or more Nodes into the AddressSpace hierarchy. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/src/server/ua_services.h" line="109"/>
      </memberdef>
      <memberdef kind="function" id="group__services_1ga93217b9e4a5d40b1688836029a0cf4a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Service_AddReferences</definition>
        <argsstring>(UA_Server *server, UA_Session *session, const UA_AddReferencesRequest *request, UA_AddReferencesResponse *response)</argsstring>
        <name>Service_AddReferences</name>
        <param>
          <type><ref refid="structUA__Server" kindref="compound">UA_Server</ref> *</type>
          <declname>server</declname>
        </param>
        <param>
          <type><ref refid="structUA__Session" kindref="compound">UA_Session</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>const <ref refid="structUA__AddReferencesRequest" kindref="compound">UA_AddReferencesRequest</ref> *</type>
          <declname>request</declname>
        </param>
        <param>
          <type><ref refid="structUA__AddReferencesResponse" kindref="compound">UA_AddReferencesResponse</ref> *</type>
          <declname>response</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Used to add one or more References to one or more Nodes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/src/server/ua_services.h" line="113"/>
      </memberdef>
      <memberdef kind="function" id="group__services_1ga3edd0836866507c05ea7188b8df23740" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Service_DeleteNodes</definition>
        <argsstring>(UA_Server *server, UA_Session *session, const UA_DeleteNodesRequest *request, UA_DeleteNodesResponse *response)</argsstring>
        <name>Service_DeleteNodes</name>
        <param>
          <type><ref refid="structUA__Server" kindref="compound">UA_Server</ref> *</type>
          <declname>server</declname>
        </param>
        <param>
          <type><ref refid="structUA__Session" kindref="compound">UA_Session</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>const <ref refid="structUA__DeleteNodesRequest" kindref="compound">UA_DeleteNodesRequest</ref> *</type>
          <declname>request</declname>
        </param>
        <param>
          <type><ref refid="structUA__DeleteNodesResponse" kindref="compound">UA_DeleteNodesResponse</ref> *</type>
          <declname>response</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Used to delete one or more Nodes from the AddressSpace. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/src/server/ua_services.h" line="117"/>
      </memberdef>
      <memberdef kind="function" id="group__services_1ga0bdd3664fc730103d9245daa5429e5b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Service_DeleteReferences</definition>
        <argsstring>(UA_Server *server, UA_Session *session, const UA_DeleteReferencesRequest *request, UA_DeleteReferencesResponse *response)</argsstring>
        <name>Service_DeleteReferences</name>
        <param>
          <type><ref refid="structUA__Server" kindref="compound">UA_Server</ref> *</type>
          <declname>server</declname>
        </param>
        <param>
          <type><ref refid="structUA__Session" kindref="compound">UA_Session</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>const <ref refid="structUA__DeleteReferencesRequest" kindref="compound">UA_DeleteReferencesRequest</ref> *</type>
          <declname>request</declname>
        </param>
        <param>
          <type><ref refid="structUA__DeleteReferencesResponse" kindref="compound">UA_DeleteReferencesResponse</ref> *</type>
          <declname>response</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Used to delete one or more References of a Node. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/src/server/ua_services.h" line="121"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>View Service Set</header>
      <description><para>Clients use the browse Services of the View Service Set to navigate through the AddressSpace or through a View which is a subset of the AddressSpace. </para></description>
      <memberdef kind="function" id="group__services_1ga50877906caf2f8d31993038c7e131265" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Service_Browse</definition>
        <argsstring>(UA_Server *server, UA_Session *session, const UA_BrowseRequest *request, UA_BrowseResponse *response)</argsstring>
        <name>Service_Browse</name>
        <param>
          <type><ref refid="structUA__Server" kindref="compound">UA_Server</ref> *</type>
          <declname>server</declname>
        </param>
        <param>
          <type><ref refid="structUA__Session" kindref="compound">UA_Session</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>const <ref refid="structUA__BrowseRequest" kindref="compound">UA_BrowseRequest</ref> *</type>
          <declname>request</declname>
        </param>
        <param>
          <type><ref refid="structUA__BrowseResponse" kindref="compound">UA_BrowseResponse</ref> *</type>
          <declname>response</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Used to discover the References of a specified Node. The browse can be further limited by the use of a View. This Browse Service also supports a primitive filtering capability. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/src/server/ua_services.h" line="140"/>
      </memberdef>
      <memberdef kind="function" id="group__services_1ga99bb35f206c517bf84f31a37a846582d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Service_BrowseNext</definition>
        <argsstring>(UA_Server *server, UA_Session *session, const UA_BrowseNextRequest *request, UA_BrowseNextResponse *response)</argsstring>
        <name>Service_BrowseNext</name>
        <param>
          <type><ref refid="structUA__Server" kindref="compound">UA_Server</ref> *</type>
          <declname>server</declname>
        </param>
        <param>
          <type><ref refid="structUA__Session" kindref="compound">UA_Session</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>const <ref refid="structUA__BrowseNextRequest" kindref="compound">UA_BrowseNextRequest</ref> *</type>
          <declname>request</declname>
        </param>
        <param>
          <type><ref refid="structUA__BrowseNextResponse" kindref="compound">UA_BrowseNextResponse</ref> *</type>
          <declname>response</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Used to request the next set of Browse or BrowseNext response information that is too large to be sent in a single response. &quot;Too large&quot; in this context means that the Server is not able to return a larger response or that the number of results to return exceeds the maximum number of results to return that was specified by the Client in the original Browse request. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/src/server/ua_services.h" line="150"/>
      </memberdef>
      <memberdef kind="function" id="group__services_1gab012f718870f7740eb511c28ede6a017" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Service_TranslateBrowsePathsToNodeIds</definition>
        <argsstring>(UA_Server *server, UA_Session *session, const UA_TranslateBrowsePathsToNodeIdsRequest *request, UA_TranslateBrowsePathsToNodeIdsResponse *response)</argsstring>
        <name>Service_TranslateBrowsePathsToNodeIds</name>
        <param>
          <type><ref refid="structUA__Server" kindref="compound">UA_Server</ref> *</type>
          <declname>server</declname>
        </param>
        <param>
          <type><ref refid="structUA__Session" kindref="compound">UA_Session</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>const <ref refid="structUA__TranslateBrowsePathsToNodeIdsRequest" kindref="compound">UA_TranslateBrowsePathsToNodeIdsRequest</ref> *</type>
          <declname>request</declname>
        </param>
        <param>
          <type><ref refid="structUA__TranslateBrowsePathsToNodeIdsResponse" kindref="compound">UA_TranslateBrowsePathsToNodeIdsResponse</ref> *</type>
          <declname>response</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Used to translate textual node paths to their respective ids. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/src/server/ua_services.h" line="155"/>
      </memberdef>
      <memberdef kind="function" id="group__services_1ga91c6ec83d24212e496c13a24d314db87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Service_RegisterNodes</definition>
        <argsstring>(UA_Server *server, UA_Session *session, const UA_RegisterNodesRequest *request, UA_RegisterNodesResponse *response)</argsstring>
        <name>Service_RegisterNodes</name>
        <param>
          <type><ref refid="structUA__Server" kindref="compound">UA_Server</ref> *</type>
          <declname>server</declname>
        </param>
        <param>
          <type><ref refid="structUA__Session" kindref="compound">UA_Session</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>const <ref refid="structUA__RegisterNodesRequest" kindref="compound">UA_RegisterNodesRequest</ref> *</type>
          <declname>request</declname>
        </param>
        <param>
          <type><ref refid="structUA__RegisterNodesResponse" kindref="compound">UA_RegisterNodesResponse</ref> *</type>
          <declname>response</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/src/server/ua_services.h" line="159"/>
      </memberdef>
      <memberdef kind="function" id="group__services_1gab00b0288409c9497fd6991594d1f7f0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Service_UnregisterNodes</definition>
        <argsstring>(UA_Server *server, UA_Session *session, const UA_UnregisterNodesRequest *request, UA_UnregisterNodesResponse *response)</argsstring>
        <name>Service_UnregisterNodes</name>
        <param>
          <type><ref refid="structUA__Server" kindref="compound">UA_Server</ref> *</type>
          <declname>server</declname>
        </param>
        <param>
          <type><ref refid="structUA__Session" kindref="compound">UA_Session</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>const <ref refid="structUA__UnregisterNodesRequest" kindref="compound">UA_UnregisterNodesRequest</ref> *</type>
          <declname>request</declname>
        </param>
        <param>
          <type><ref refid="structUA__UnregisterNodesResponse" kindref="compound">UA_UnregisterNodesResponse</ref> *</type>
          <declname>response</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/src/server/ua_services.h" line="162"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Attribute Service Set</header>
      <description><para>This Service Set provides Services to access Attributes that are part of Nodes. </para></description>
      <memberdef kind="function" id="group__services_1gafca6b56ad57d5bbf7be71face8426496" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Service_Read</definition>
        <argsstring>(UA_Server *server, UA_Session *session, const UA_ReadRequest *request, UA_ReadResponse *response)</argsstring>
        <name>Service_Read</name>
        <param>
          <type><ref refid="structUA__Server" kindref="compound">UA_Server</ref> *</type>
          <declname>server</declname>
        </param>
        <param>
          <type><ref refid="structUA__Session" kindref="compound">UA_Session</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>const <ref refid="structUA__ReadRequest" kindref="compound">UA_ReadRequest</ref> *</type>
          <declname>request</declname>
        </param>
        <param>
          <type><ref refid="structUA__ReadResponse" kindref="compound">UA_ReadResponse</ref> *</type>
          <declname>response</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Used to read one or more Attributes of one or more Nodes. For constructed Attribute values whose elements are indexed, such as an array, this Service allows Clients to read the entire set of indexed values as a composite, to read individual elements or to read ranges of elements of the composite. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/src/server/ua_services.h" line="198"/>
      </memberdef>
      <memberdef kind="function" id="group__services_1ga5be44d3595fccfcea6d64785d25c2868" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Service_Write</definition>
        <argsstring>(UA_Server *server, UA_Session *session, const UA_WriteRequest *request, UA_WriteResponse *response)</argsstring>
        <name>Service_Write</name>
        <param>
          <type><ref refid="structUA__Server" kindref="compound">UA_Server</ref> *</type>
          <declname>server</declname>
        </param>
        <param>
          <type><ref refid="structUA__Session" kindref="compound">UA_Session</ref> *</type>
          <declname>session</declname>
        </param>
        <param>
          <type>const <ref refid="structUA__WriteRequest" kindref="compound">UA_WriteRequest</ref> *</type>
          <declname>request</declname>
        </param>
        <param>
          <type><ref refid="structUA__WriteResponse" kindref="compound">UA_WriteResponse</ref> *</type>
          <declname>response</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Used to write one or more Attributes of one or more Nodes. For constructed Attribute values whose elements are indexed, such as an array, this Service allows Clients to write the entire set of indexed values as a composite, to write individual elements or to write ranges of elements of the composite. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/src/server/ua_services.h" line="214"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The UA services that can be called from a remote user. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
