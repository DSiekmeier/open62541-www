<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="ua__async_8h" kind="file">
    <compoundname>ua_async.h</compoundname>
    <includes local="yes">ua_jobs.h</includes>
    <incdepgraph>
      <node id="805">
        <label>ua_jobs.h</label>
      </node>
      <node id="804">
        <label>/home/travis/build/acplt/open62541/src/ua_async.h</label>
        <link refid="ua_async.h"/>
        <childnode refid="805" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structUA__RepeatedJobs" prot="public">UA_RepeatedJobs</innerclass>
    <innerclass refid="structUA__DispatchLoop" prot="public">UA_DispatchLoop</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="ua__async_8h_1a081791fc6d94c8c206094b8bea314139" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ua__statuscodes_8h_1a82f92964aaa5dd1c5a1c5d7e9099883c" kindref="member">UA_StatusCode</ref></type>
        <definition>UA_StatusCode UA_DispatchLoop_addRepeatedJob</definition>
        <argsstring>(UA_DispatchLoop *dl, UA_Job job, UA_UInt32 interval, UA_Guid *jobId)</argsstring>
        <name>UA_DispatchLoop_addRepeatedJob</name>
        <param>
          <type><ref refid="structUA__DispatchLoop" kindref="compound">UA_DispatchLoop</ref> *</type>
          <declname>dl</declname>
        </param>
        <param>
          <type><ref refid="structUA__Job" kindref="compound">UA_Job</ref></type>
          <declname>job</declname>
        </param>
        <param>
          <type><ref refid="ua__types_8h_1a5f0721b034e4c44a7f81589b15ba1baf" kindref="member">UA_UInt32</ref></type>
          <declname>interval</declname>
        </param>
        <param>
          <type><ref refid="structUA__Guid" kindref="compound">UA_Guid</ref> *</type>
          <declname>jobId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/src/ua_async.h" line="80"/>
      </memberdef>
      <memberdef kind="function" id="ua__async_8h_1a4e3d3ce8a560e79ce697903e6c995cb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ua__statuscodes_8h_1a82f92964aaa5dd1c5a1c5d7e9099883c" kindref="member">UA_StatusCode</ref></type>
        <definition>UA_StatusCode UA_DispatchLoop_removeRepeatedJob</definition>
        <argsstring>(UA_DispatchLoop *dl, UA_Guid jobId)</argsstring>
        <name>UA_DispatchLoop_removeRepeatedJob</name>
        <param>
          <type><ref refid="structUA__DispatchLoop" kindref="compound">UA_DispatchLoop</ref> *</type>
          <declname>dl</declname>
        </param>
        <param>
          <type><ref refid="structUA__Guid" kindref="compound">UA_Guid</ref></type>
          <declname>jobId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/src/ua_async.h" line="81"/>
      </memberdef>
      <memberdef kind="function" id="ua__async_8h_1a64161913733503ec9f028074c8088892" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ua__statuscodes_8h_1a82f92964aaa5dd1c5a1c5d7e9099883c" kindref="member">UA_StatusCode</ref></type>
        <definition>UA_StatusCode UA_DispatchLoop_run</definition>
        <argsstring>(UA_DispatchLoop *dl, UA_UInt16 nThreads, UA_Boolean *running)</argsstring>
        <name>UA_DispatchLoop_run</name>
        <param>
          <type><ref refid="structUA__DispatchLoop" kindref="compound">UA_DispatchLoop</ref> *</type>
          <declname>dl</declname>
        </param>
        <param>
          <type><ref refid="ua__types_8h_1a0a5ff540581b2a3ca4757de792c68f05" kindref="member">UA_UInt16</ref></type>
          <declname>nThreads</declname>
        </param>
        <param>
          <type><ref refid="ua__types_8h_1a9a1800cf448ad57727ab920aa254a1a4" kindref="member">UA_Boolean</ref> *</type>
          <declname>running</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Starts the workers and runs the event loop until *running becomes false. Then, the event loop is shut down and the workers threads are cancelled. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/src/ua_async.h" line="85"/>
      </memberdef>
      <memberdef kind="function" id="ua__async_8h_1a66a1a02cebb6d8bd5198fcdb37c7a1f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ua__statuscodes_8h_1a82f92964aaa5dd1c5a1c5d7e9099883c" kindref="member">UA_StatusCode</ref></type>
        <definition>UA_StatusCode UA_DispatchLoop_startup</definition>
        <argsstring>(UA_DispatchLoop *dl, UA_UInt16 nThreads)</argsstring>
        <name>UA_DispatchLoop_startup</name>
        <param>
          <type><ref refid="structUA__DispatchLoop" kindref="compound">UA_DispatchLoop</ref> *</type>
          <declname>dl</declname>
        </param>
        <param>
          <type><ref refid="ua__types_8h_1a0a5ff540581b2a3ca4757de792c68f05" kindref="member">UA_UInt16</ref></type>
          <declname>nThreads</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Starts the workers, but does not run the loop itself </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/src/ua_async.h" line="88"/>
      </memberdef>
      <memberdef kind="function" id="ua__async_8h_1ad943f64d88ff729a6401d12e8ba4bd68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ua__types_8h_1a0a5ff540581b2a3ca4757de792c68f05" kindref="member">UA_UInt16</ref></type>
        <definition>UA_UInt16 UA_DispatchLoop_iterate</definition>
        <argsstring>(UA_DispatchLoop *dl)</argsstring>
        <name>UA_DispatchLoop_iterate</name>
        <param>
          <type><ref refid="structUA__DispatchLoop" kindref="compound">UA_DispatchLoop</ref> *</type>
          <declname>dl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Run a single iteration of the mainloop. Returns the max delay before the next iteration in order to dispatch the next repeated work in time. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/src/ua_async.h" line="92"/>
      </memberdef>
      <memberdef kind="function" id="ua__async_8h_1abee596910f7e3f3b3e48c7cbfe942809" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ua__statuscodes_8h_1a82f92964aaa5dd1c5a1c5d7e9099883c" kindref="member">UA_StatusCode</ref></type>
        <definition>UA_StatusCode UA_DispatchLoop_shutdown</definition>
        <argsstring>(UA_DispatchLoop *dl)</argsstring>
        <name>UA_DispatchLoop_shutdown</name>
        <param>
          <type><ref refid="structUA__DispatchLoop" kindref="compound">UA_DispatchLoop</ref> *</type>
          <declname>dl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shuts down the event loop and cancels the worker threads. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/src/ua_async.h" line="95"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>UA_ASYNC_H_</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>UA_ASYNC_H_</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ua_jobs.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>For<sp/>concurrent<sp/>processing<sp/>on<sp/>multicore<sp/>systems,<sp/>open62541<sp/>dispatches<sp/>jobs<sp/>(=events)<sp/>to</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>independent<sp/>worker<sp/>processes.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>There<sp/>are<sp/>four<sp/>types<sp/>of<sp/>job<sp/>execution:</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>1.<sp/>Normal<sp/>jobs</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>2.<sp/>Repeated<sp/>jobs<sp/>with<sp/>a<sp/>repetition<sp/>interval<sp/>(dispatched<sp/>to<sp/>worker<sp/>threads)</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>3.<sp/>Eventloop<sp/>jobs<sp/>are<sp/>executed<sp/>(once)<sp/>from<sp/>the<sp/>event<sp/>loop<sp/>and<sp/>not<sp/>in<sp/>the<sp/>worker<sp/>threads.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>used<sp/>e.g.<sp/>to<sp/>trigger<sp/>adding<sp/>and<sp/>removing<sp/>repeated<sp/>jobs<sp/>without<sp/>blocking<sp/>the</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>mainloop.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>4.<sp/>Delayed<sp/>jobs<sp/>are<sp/>executed<sp/>once<sp/>in<sp/>a<sp/>worker<sp/>threadm<sp/>but<sp/>only<sp/>when<sp/>all<sp/>jobs<sp/>that<sp/>were</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>dispatched<sp/>earlier<sp/>have<sp/>been<sp/>executed.<sp/>This<sp/>is<sp/>achieved<sp/>by<sp/>a<sp/>counter<sp/>in<sp/>the<sp/>worker<sp/>threads.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>If<sp/>the<sp/>counter<sp/>has<sp/>changed,<sp/>then<sp/>the<sp/>previously<sp/>dispatched<sp/>jobs<sp/>have<sp/>finished.<sp/>A<sp/>use<sp/>case</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>is<sp/>to<sp/>eventually<sp/>free<sp/>obsolete<sp/>data<sp/>when<sp/>it<sp/>is<sp/>guaranteed<sp/>that<sp/>no<sp/>concurrent<sp/>threads<sp/>can</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>access<sp/>it<sp/>any<sp/>longer.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>-<sp/>Mark<sp/>the<sp/>data<sp/>as<sp/>obsolete<sp/>(with<sp/>an<sp/>atomic<sp/>operation)</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>-<sp/>Remove<sp/>existing<sp/>pointers<sp/>to<sp/>the<sp/>data<sp/>(e.g.<sp/>from<sp/>a<sp/>linked<sp/>list),<sp/>so<sp/>it<sp/>cannot<sp/>be<sp/>accessed</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/><sp/><sp/>from<sp/>jobs<sp/>that<sp/>are<sp/>dispatched<sp/>later</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>-<sp/>Add<sp/>a<sp/>delayed<sp/>job<sp/>that<sp/>frees<sp/>the<sp/>memory<sp/>when<sp/>all<sp/>currently<sp/>running<sp/>jobs<sp/>have<sp/>completed</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="structUA__RepeatedJobs" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structUA__RepeatedJobs" kindref="compound">UA_RepeatedJobs</ref><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structUA__RepeatedJobs_1af74ffd3ed5ce49be09c4a718bbf1dd99" kindref="member" tooltip="The list-pointers.">LIST_ENTRY</ref>(<ref refid="structUA__RepeatedJobs" kindref="compound">UA_RepeatedJobs</ref>)<sp/>lp;<sp/></highlight></codeline>
<codeline lineno="39" refid="structUA__RepeatedJobs_1ac33184175a9c71581a63c466a96ae45e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ua__types_8h_1ab4378e68c207b1de4e58d0ae26dc333c" kindref="member" tooltip="An instance in time. A DateTime value is encoded as a 64-bit signed integer which represents the numb...">UA_DateTime</ref><sp/><ref refid="structUA__RepeatedJobs_1ac33184175a9c71581a63c466a96ae45e" kindref="member" tooltip="The next time when the jobs are to be executed.">nextTime</ref>;<sp/></highlight></codeline>
<codeline lineno="40" refid="structUA__RepeatedJobs_1a352a7836cc756d030c88b62ac77cb948" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ua__types_8h_1a5f0721b034e4c44a7f81589b15ba1baf" kindref="member" tooltip="An integer value between 0 and 429 4967 295.">UA_UInt32</ref><sp/><ref refid="structUA__RepeatedJobs_1a352a7836cc756d030c88b62ac77cb948" kindref="member" tooltip="Interval in 100ns resolution.">interval</ref>;<sp/></highlight></codeline>
<codeline lineno="41" refid="structUA__RepeatedJobs_1a9c2bbc68ff60780e516890b9149fdee6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structUA__RepeatedJobs_1a9c2bbc68ff60780e516890b9149fdee6" kindref="member" tooltip="Number of jobs.">jobsSize</ref>;<sp/></highlight></codeline>
<codeline lineno="42" refid="structUA__RepeatedJobs_1a3b585982f73dee8a2118cea7482dc92d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structUA__Job" kindref="compound">UA_Job</ref><sp/>*<ref refid="structUA__RepeatedJobs_1a3b585982f73dee8a2118cea7482dc92d" kindref="member" tooltip="The jobs. This is not a pointer, but a variable sized struct.">jobs</ref>;<sp/></highlight></codeline>
<codeline lineno="43" refid="structUA__RepeatedJobs_1a928f25429277fa07463f0412e791fe91" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structUA__Guid" kindref="compound" tooltip="A 16 byte value that can be used as a globally unique identifier.">UA_Guid</ref><sp/>*<ref refid="structUA__RepeatedJobs_1a928f25429277fa07463f0412e791fe91" kindref="member" tooltip="The identifiers of the jobs (to delete them individually)">jobIds</ref>;<sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal">}<sp/><ref refid="structUA__RepeatedJobs" kindref="compound">UA_RepeatedJobs</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UA_MULTITHREADING</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="53"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">UA_DelayedJobs<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>LIST_ENTRY(UA_DelayedJobs)<sp/>lp;<sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>jobsCount;<sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structUA__Job" kindref="compound">UA_Job</ref><sp/>jobs[UA_DELAYEDJOBSSIZE];<sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ua__types_8h_1a9a1800cf448ad57727ab920aa254a1a4" kindref="member" tooltip="A two-state logical value (true or false).">UA_Boolean</ref><sp/>ready;<sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ua__types_8h_1a5f0721b034e4c44a7f81589b15ba1baf" kindref="member" tooltip="An integer value between 0 and 429 4967 295.">UA_UInt32</ref><sp/>workerCounters[];<sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal">}<sp/>UA_DelayedJobs;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="structUA__DispatchLoop" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="63" refid="structUA__DispatchLoop_1acf87593b1a72d06bddc041a0e29420bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structUA__DispatchLoop_1acf87593b1a72d06bddc041a0e29420bf" kindref="member" tooltip="Custom data for the polling layer.">getJobsHandle</ref>;<sp/></highlight></codeline>
<codeline lineno="64" refid="structUA__DispatchLoop_1afc28a4a6c7f5fa725981dd95ddcbfd6d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ua__types_8h_1a0a5ff540581b2a3ca4757de792c68f05" kindref="member" tooltip="An integer value between 0 and 65 535.">UA_UInt16</ref><sp/>(getJobs*)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle,<sp/><ref refid="structUA__Job" kindref="compound">UA_Job</ref><sp/>**jobs,<sp/><ref refid="ua__types_8h_1a0a5ff540581b2a3ca4757de792c68f05" kindref="member" tooltip="An integer value between 0 and 65 535.">UA_UInt16</ref><sp/><ref refid="structUA__DispatchLoop_1afc28a4a6c7f5fa725981dd95ddcbfd6d" kindref="member" tooltip="Wait until jobs arrive or return after the timeout.">timeout</ref>);<sp/></highlight></codeline>
<codeline lineno="65" refid="structUA__DispatchLoop_1aaa22574bb1f8e27bccbaf97c3216b118" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structUA__DispatchLoop_1aaa22574bb1f8e27bccbaf97c3216b118" kindref="member" tooltip="Custom data for the processing layer.">processJobsHandle</ref>;<sp/></highlight></codeline>
<codeline lineno="66" refid="structUA__DispatchLoop_1a7f1c97314fa08be9a59ae4669100cc84" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ua__eventloop_8h_1a67fafbd431d0a0ffa81515664c2144e2" kindref="member">void</ref><sp/>(processJobs*)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle,<sp/><ref refid="structUA__Job" kindref="compound">UA_Job</ref><sp/>*jobs,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structUA__DispatchLoop_1a7f1c97314fa08be9a59ae4669100cc84" kindref="member" tooltip="Job processing layer.">jobsSize</ref>);<sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>LIST_HEAD(UA_RepeatedJobsList,<sp/><ref refid="structUA__RepeatedJobs" kindref="compound">UA_RepeatedJobs</ref>)<sp/>repeatedJobs;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UA_MULTITHREADING</highlight></codeline>
<codeline lineno="69"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>LIST_HEAD(UA_DelayedJobsList,<sp/>UA_DelayedJobs)<sp/>delayedJobs;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>struct<sp/>cds_wfcq_head<sp/>dispatchQueue_head;<sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cond_t<sp/>dispatchQueue_condition;<sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>workersSize;<sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_t<sp/>*workers;<sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ua__types_8h_1a5f0721b034e4c44a7f81589b15ba1baf" kindref="member" tooltip="An integer value between 0 and 429 4967 295.">UA_UInt32</ref><sp/>**workerCounters;<sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>struct<sp/>cds_lfs_stack<sp/>eventLoopJobs;<sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>struct<sp/>cds_wfcq_tail<sp/>dispatchQueue_tail;<sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="78"><highlight class="preprocessor"></highlight><highlight class="normal">}<sp/><ref refid="structUA__DispatchLoop" kindref="compound">UA_DispatchLoop</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><ref refid="ua__statuscodes_8h_1a82f92964aaa5dd1c5a1c5d7e9099883c" kindref="member">UA_StatusCode</ref><sp/><ref refid="ua__async_8h_1a081791fc6d94c8c206094b8bea314139" kindref="member">UA_DispatchLoop_addRepeatedJob</ref>(<ref refid="structUA__DispatchLoop" kindref="compound">UA_DispatchLoop</ref><sp/>*dl,<sp/><ref refid="structUA__Job" kindref="compound">UA_Job</ref><sp/>job,<sp/><ref refid="ua__types_8h_1a5f0721b034e4c44a7f81589b15ba1baf" kindref="member" tooltip="An integer value between 0 and 429 4967 295.">UA_UInt32</ref><sp/>interval,<sp/><ref refid="structUA__Guid" kindref="compound" tooltip="A 16 byte value that can be used as a globally unique identifier.">UA_Guid</ref><sp/>*jobId);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><ref refid="ua__statuscodes_8h_1a82f92964aaa5dd1c5a1c5d7e9099883c" kindref="member">UA_StatusCode</ref><sp/><ref refid="ua__async_8h_1a4e3d3ce8a560e79ce697903e6c995cb6" kindref="member">UA_DispatchLoop_removeRepeatedJob</ref>(<ref refid="structUA__DispatchLoop" kindref="compound">UA_DispatchLoop</ref><sp/>*dl,<sp/><ref refid="structUA__Guid" kindref="compound" tooltip="A 16 byte value that can be used as a globally unique identifier.">UA_Guid</ref><sp/>jobId);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><ref refid="ua__statuscodes_8h_1a82f92964aaa5dd1c5a1c5d7e9099883c" kindref="member">UA_StatusCode</ref><sp/><ref refid="ua__async_8h_1a64161913733503ec9f028074c8088892" kindref="member">UA_DispatchLoop_run</ref>(<ref refid="structUA__DispatchLoop" kindref="compound">UA_DispatchLoop</ref><sp/>*dl,<sp/><ref refid="ua__types_8h_1a0a5ff540581b2a3ca4757de792c68f05" kindref="member" tooltip="An integer value between 0 and 65 535.">UA_UInt16</ref><sp/>nThreads,<sp/><ref refid="ua__types_8h_1a9a1800cf448ad57727ab920aa254a1a4" kindref="member" tooltip="A two-state logical value (true or false).">UA_Boolean</ref><sp/>*running);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><ref refid="ua__statuscodes_8h_1a82f92964aaa5dd1c5a1c5d7e9099883c" kindref="member">UA_StatusCode</ref><sp/><ref refid="ua__async_8h_1a66a1a02cebb6d8bd5198fcdb37c7a1f9" kindref="member">UA_DispatchLoop_startup</ref>(<ref refid="structUA__DispatchLoop" kindref="compound">UA_DispatchLoop</ref><sp/>*dl,<sp/><ref refid="ua__types_8h_1a0a5ff540581b2a3ca4757de792c68f05" kindref="member" tooltip="An integer value between 0 and 65 535.">UA_UInt16</ref><sp/>nThreads);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><ref refid="ua__types_8h_1a0a5ff540581b2a3ca4757de792c68f05" kindref="member" tooltip="An integer value between 0 and 65 535.">UA_UInt16</ref><sp/><ref refid="ua__async_8h_1ad943f64d88ff729a6401d12e8ba4bd68" kindref="member">UA_DispatchLoop_iterate</ref>(<ref refid="structUA__DispatchLoop" kindref="compound">UA_DispatchLoop</ref><sp/>*dl);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><ref refid="ua__statuscodes_8h_1a82f92964aaa5dd1c5a1c5d7e9099883c" kindref="member">UA_StatusCode</ref><sp/><ref refid="ua__async_8h_1abee596910f7e3f3b3e48c7cbfe942809" kindref="member">UA_DispatchLoop_shutdown</ref>(<ref refid="structUA__DispatchLoop" kindref="compound">UA_DispatchLoop</ref><sp/>*dl);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>UA_ASYNC_H_<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/acplt/open62541/src/ua_async.h"/>
  </compounddef>
</doxygen>
