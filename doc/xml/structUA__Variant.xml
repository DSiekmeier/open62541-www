<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="structUA__Variant" kind="struct" prot="public">
    <compoundname>UA_Variant</compoundname>
    <includes refid="ua__types_8h" local="no">ua_types.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="structUA__Variant_1ad38e714decac97a62a08cadd9b6ab6ad" prot="public" static="no">
        <name>@6</name>
        <enumvalue id="structUA__Variant_1ad38e714decac97a62a08cadd9b6ab6ada9cb1e8cc7777ad12d372a030ae915792" prot="public">
          <name>UA_VARIANT_DATA</name>
          <briefdescription>
<para>The data is &quot;owned&quot; by this variant (copied and deleted together) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structUA__Variant_1ad38e714decac97a62a08cadd9b6ab6ada49a8514ad47ce77b05a404f0191dcb55" prot="public">
          <name>UA_VARIANT_DATA_NODELETE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The data is &quot;borrowed&quot; by the variant and shall not be deleted at the end of this variant&apos;s lifecycle. It is not possible to overwrite borrowed data due to concurrent access. Use a custom datasource with a mutex. </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="187" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="187" bodyend="193"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structUA__Variant_1ab246eb2c59043a7e5df0c75edd3f538f" prot="public" static="no" mutable="no">
        <type>const <ref refid="structUA__DataType" kindref="compound">UA_DataType</ref> *</type>
        <definition>const UA_DataType* UA_Variant::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
<para>The nodeid of the datatype. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="186" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structUA__Variant_1af54d07fe8fbd9ceadc80b0ad6e1475ec" prot="public" static="no" mutable="no">
        <type>enum UA_Variant::@6</type>
        <definition>enum UA_Variant::@6  UA_Variant::storageType</definition>
        <argsstring></argsstring>
        <name>storageType</name>
        <briefdescription>
<para>Shall the data be deleted together with the variant. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="193"/>
      </memberdef>
      <memberdef kind="variable" id="structUA__Variant_1ac3446679c7a5074e02f06406ba8bfe26" prot="public" static="no" mutable="no">
        <type><ref refid="ua__types_8h_1a01ce3c3b2fb34ef81c97c313f516004e" kindref="member">UA_Int32</ref></type>
        <definition>UA_Int32 UA_Variant::arrayLength</definition>
        <argsstring></argsstring>
        <name>arrayLength</name>
        <briefdescription>
<para>the number of elements in the data-pointer </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="194" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structUA__Variant_1ada37e83e1c07bafef77b7132403e1456" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* UA_Variant::data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <briefdescription>
<para>points to the scalar or array data </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="195" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structUA__Variant_1ac28224031366a3d927b41d1bd21994aa" prot="public" static="no" mutable="no">
        <type><ref refid="ua__types_8h_1a01ce3c3b2fb34ef81c97c313f516004e" kindref="member">UA_Int32</ref></type>
        <definition>UA_Int32 UA_Variant::arrayDimensionsSize</definition>
        <argsstring></argsstring>
        <name>arrayDimensionsSize</name>
        <briefdescription>
<para>the number of dimensions the data-array has </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="196" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structUA__Variant_1ade07659b1d4e0e421e7e42d102098e47" prot="public" static="no" mutable="no">
        <type><ref refid="ua__types_8h_1a01ce3c3b2fb34ef81c97c313f516004e" kindref="member">UA_Int32</ref> *</type>
        <definition>UA_Int32* UA_Variant::arrayDimensions</definition>
        <argsstring></argsstring>
        <name>arrayDimensions</name>
        <briefdescription>
<para>the length of each dimension of the data-array </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="197" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="197" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Variants store (arrays of) any data type. Either they provide a pointer to the data in memory, or functions from which the data can be accessed. Variants are replaced together with the data they store (exception: use a data source).</para><para>Variant semantics:<itemizedlist>
<listitem><para>arrayLength = -1 &amp;&amp; data == NULL: empty variant</para></listitem><listitem><para>arrayLength = -1 &amp;&amp; data == !NULL: variant holds a single element (a scalar)</para></listitem><listitem><para>arrayLength &gt;= 0: variant holds an array of the appropriate length data can be NULL if arrayLength == 0 </para></listitem></itemizedlist>
</para>    </detaileddescription>
    <collaborationgraph>
      <node id="195">
        <label>UA_NodeId</label>
        <link refid="structUA__NodeId"/>
      </node>
      <node id="196">
        <label>UA_DataTypeMember</label>
        <link refid="structUA__DataTypeMember"/>
      </node>
      <node id="193">
        <label>UA_Variant</label>
        <link refid="structUA__Variant"/>
        <childnode refid="194" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
      </node>
      <node id="194">
        <label>UA_DataType</label>
        <link refid="structUA__DataType"/>
        <childnode refid="195" relation="usage">
          <edgelabel>typeId</edgelabel>
        </childnode>
        <childnode refid="196" relation="usage">
          <edgelabel>members</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="185" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="185" bodyend="198"/>
    <listofallmembers>
      <member refid="structUA__Variant_1ade07659b1d4e0e421e7e42d102098e47" prot="public" virt="non-virtual"><scope>UA_Variant</scope><name>arrayDimensions</name></member>
      <member refid="structUA__Variant_1ac28224031366a3d927b41d1bd21994aa" prot="public" virt="non-virtual"><scope>UA_Variant</scope><name>arrayDimensionsSize</name></member>
      <member refid="structUA__Variant_1ac3446679c7a5074e02f06406ba8bfe26" prot="public" virt="non-virtual"><scope>UA_Variant</scope><name>arrayLength</name></member>
      <member refid="structUA__Variant_1ada37e83e1c07bafef77b7132403e1456" prot="public" virt="non-virtual"><scope>UA_Variant</scope><name>data</name></member>
      <member refid="structUA__Variant_1af54d07fe8fbd9ceadc80b0ad6e1475ec" prot="public" virt="non-virtual"><scope>UA_Variant</scope><name>storageType</name></member>
      <member refid="structUA__Variant_1ab246eb2c59043a7e5df0c75edd3f538f" prot="public" virt="non-virtual"><scope>UA_Variant</scope><name>type</name></member>
      <member refid="structUA__Variant_1ad38e714decac97a62a08cadd9b6ab6ada9cb1e8cc7777ad12d372a030ae915792" prot="public" virt="non-virtual"><scope>UA_Variant</scope><name>UA_VARIANT_DATA</name></member>
      <member refid="structUA__Variant_1ad38e714decac97a62a08cadd9b6ab6ada49a8514ad47ce77b05a404f0191dcb55" prot="public" virt="non-virtual"><scope>UA_Variant</scope><name>UA_VARIANT_DATA_NODELETE</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
