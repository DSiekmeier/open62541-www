<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="ua__types_8h" kind="file">
    <compoundname>ua_types.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes local="no">stddef.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="ua__config_8h" local="yes">ua_config.h</includes>
    <includes refid="ua__statuscodes_8h" local="yes">ua_statuscodes.h</includes>
    <includedby refid="ua__client_8h" local="yes">/home/travis/build/acplt/open62541/include/ua_client.h</includedby>
    <includedby refid="ua__connection_8h" local="yes">/home/travis/build/acplt/open62541/include/ua_connection.h</includedby>
    <includedby refid="ua__server_8h" local="yes">/home/travis/build/acplt/open62541/include/ua_server.h</includedby>
    <includedby refid="ua__services_8h" local="yes">/home/travis/build/acplt/open62541/src/server/ua_services.h</includedby>
    <includedby refid="ua__subscription_8h" local="yes">/home/travis/build/acplt/open62541/src/server/ua_subscription.h</includedby>
    <includedby refid="ua__subscription__manager_8h" local="yes">/home/travis/build/acplt/open62541/src/server/ua_subscription_manager.h</includedby>
    <includedby refid="ua__session_8h" local="yes">/home/travis/build/acplt/open62541/src/ua_session.h</includedby>
    <includedby refid="ua__types__encoding__binary_8h" local="yes">/home/travis/build/acplt/open62541/src/ua_types_encoding_binary.h</includedby>
    <incdepgraph>
      <node id="589">
        <label>stdbool.h</label>
      </node>
      <node id="592">
        <label>ua_config.h</label>
        <link refid="ua__config_8h"/>
      </node>
      <node id="588">
        <label>stdint.h</label>
      </node>
      <node id="590">
        <label>stddef.h</label>
      </node>
      <node id="591">
        <label>string.h</label>
      </node>
      <node id="593">
        <label>ua_statuscodes.h</label>
        <link refid="ua__statuscodes_8h"/>
      </node>
      <node id="587">
        <label>/home/travis/build/acplt/open62541/include/ua_types.h</label>
        <link refid="ua_types.h"/>
        <childnode refid="588" relation="include">
        </childnode>
        <childnode refid="589" relation="include">
        </childnode>
        <childnode refid="590" relation="include">
        </childnode>
        <childnode refid="591" relation="include">
        </childnode>
        <childnode refid="592" relation="include">
        </childnode>
        <childnode refid="593" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="601">
        <label>/home/travis/build/acplt/open62541/src/server/ua_subscription_manager.h</label>
        <link refid="ua__subscription__manager_8h"/>
      </node>
      <node id="604">
        <label>/home/travis/build/acplt/open62541/src/server/ua_session_manager.h</label>
        <link refid="ua__session__manager_8h"/>
        <childnode refid="600" relation="include">
        </childnode>
      </node>
      <node id="606">
        <label>/home/travis/build/acplt/open62541/src/ua_session.h</label>
        <link refid="ua__session_8h"/>
        <childnode refid="604" relation="include">
        </childnode>
        <childnode refid="605" relation="include">
        </childnode>
      </node>
      <node id="608">
        <label>/home/travis/build/acplt/open62541/src/ua_types_encoding_binary.h</label>
        <link refid="ua__types__encoding__binary_8h"/>
        <childnode refid="598" relation="include">
        </childnode>
      </node>
      <node id="598">
        <label>/home/travis/build/acplt/open62541/src/server/ua_nodes.h</label>
        <link refid="ua__nodes_8h"/>
        <childnode refid="599" relation="include">
        </childnode>
        <childnode refid="602" relation="include">
        </childnode>
      </node>
      <node id="597">
        <label>/home/travis/build/acplt/open62541/include/ua_server.h</label>
        <link refid="ua__server_8h"/>
        <childnode refid="598" relation="include">
        </childnode>
        <childnode refid="603" relation="include">
        </childnode>
        <childnode refid="600" relation="include">
        </childnode>
        <childnode refid="604" relation="include">
        </childnode>
        <childnode refid="605" relation="include">
        </childnode>
        <childnode refid="601" relation="include">
        </childnode>
        <childnode refid="606" relation="include">
        </childnode>
      </node>
      <node id="605">
        <label>/home/travis/build/acplt/open62541/src/server/ua_services.h</label>
        <link refid="ua__services_8h"/>
      </node>
      <node id="602">
        <label>/home/travis/build/acplt/open62541/src/server/ua_subscription.h</label>
        <link refid="ua__subscription_8h"/>
        <childnode refid="601" relation="include">
        </childnode>
      </node>
      <node id="595">
        <label>/home/travis/build/acplt/open62541/include/ua_client.h</label>
        <link refid="ua__client_8h"/>
      </node>
      <node id="600">
        <label>/home/travis/build/acplt/open62541/src/server/ua_server_internal.h</label>
        <link refid="ua__server__internal_8h"/>
      </node>
      <node id="607">
        <label>/home/travis/build/acplt/open62541/src/ua_securechannel.h</label>
        <link refid="ua__securechannel_8h"/>
        <childnode refid="603" relation="include">
        </childnode>
        <childnode refid="606" relation="include">
        </childnode>
      </node>
      <node id="603">
        <label>/home/travis/build/acplt/open62541/src/server/ua_securechannel_manager.h</label>
        <link refid="ua__securechannel__manager_8h"/>
        <childnode refid="600" relation="include">
        </childnode>
      </node>
      <node id="596">
        <label>/home/travis/build/acplt/open62541/include/ua_connection.h</label>
        <link refid="ua__connection_8h"/>
        <childnode refid="595" relation="include">
        </childnode>
        <childnode refid="597" relation="include">
        </childnode>
        <childnode refid="607" relation="include">
        </childnode>
      </node>
      <node id="599">
        <label>/home/travis/build/acplt/open62541/src/server/ua_nodestore.h</label>
        <link refid="ua__nodestore_8h"/>
        <childnode refid="600" relation="include">
        </childnode>
        <childnode refid="601" relation="include">
        </childnode>
      </node>
      <node id="594">
        <label>/home/travis/build/acplt/open62541/include/ua_types.h</label>
        <link refid="ua_types.h"/>
        <childnode refid="595" relation="include">
        </childnode>
        <childnode refid="596" relation="include">
        </childnode>
        <childnode refid="597" relation="include">
        </childnode>
        <childnode refid="605" relation="include">
        </childnode>
        <childnode refid="602" relation="include">
        </childnode>
        <childnode refid="601" relation="include">
        </childnode>
        <childnode refid="606" relation="include">
        </childnode>
        <childnode refid="608" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structUA__String" prot="public">UA_String</innerclass>
    <innerclass refid="structUA__Guid" prot="public">UA_Guid</innerclass>
    <innerclass refid="structUA__NodeId" prot="public">UA_NodeId</innerclass>
    <innerclass refid="structUA__ExpandedNodeId" prot="public">UA_ExpandedNodeId</innerclass>
    <innerclass refid="structUA__QualifiedName" prot="public">UA_QualifiedName</innerclass>
    <innerclass refid="structUA__LocalizedText" prot="public">UA_LocalizedText</innerclass>
    <innerclass refid="structUA__ExtensionObject" prot="public">UA_ExtensionObject</innerclass>
    <innerclass refid="structUA__Variant" prot="public">UA_Variant</innerclass>
    <innerclass refid="structUA__DataValue" prot="public">UA_DataValue</innerclass>
    <innerclass refid="structUA__DiagnosticInfo" prot="public">UA_DiagnosticInfo</innerclass>
    <innerclass refid="structUA__DateTimeStruct" prot="public">UA_DateTimeStruct</innerclass>
    <innerclass refid="structUA__NumericRange" prot="public">UA_NumericRange</innerclass>
    <innerclass refid="structUA__NumericRange_1_1UA__NumericRangeDimension" prot="public">UA_NumericRange::UA_NumericRangeDimension</innerclass>
    <innerclass refid="structUA__DataTypeMember" prot="public">UA_DataTypeMember</innerclass>
    <innerclass refid="structUA__DataType" prot="public">UA_DataType</innerclass>
    <innerclass refid="unionUA__NodeId_8identifier" prot="public">UA_NodeId.identifier</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="ua__types_8h_1a7e76336d5d660d0224183d32b0ca559a" prot="public" static="no">
        <name>UA_TRUE</name>
        <initializer>true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="31" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1a7bfe97197c3f262b7c1c6937a81023c4" prot="public" static="no">
        <name>UA_FALSE</name>
        <initializer>false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="32" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1a83baebcdf1ef7011b677fff041ad71a3" prot="public" static="no">
        <name>UA_SBYTE_MAX</name>
        <initializer>127</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="36" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1adfc1151ad0d7855d82629faeb6bc439a" prot="public" static="no">
        <name>UA_SBYTE_MIN</name>
        <initializer>-128</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="37" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1a61a09d12d05995b104b0852f3f73959c" prot="public" static="no">
        <name>UA_BYTE_MAX</name>
        <initializer>256</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="41" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1a380f59510485db074a65ca46a865215a" prot="public" static="no">
        <name>UA_BYTE_MIN</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="42" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1a43f40153e9213bcb5144b124df9af021" prot="public" static="no">
        <name>UA_INT16_MAX</name>
        <initializer>32767</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="46" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1a2aa0e5da4fb5056fb47550c344b9fd04" prot="public" static="no">
        <name>UA_INT16_MIN</name>
        <initializer>-32768</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="47" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1a5137682801ab30ee56d5f3fbed0efb09" prot="public" static="no">
        <name>UA_UINT16_MAX</name>
        <initializer>65535</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="51" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1a2e444ffd9ed10697af0af7a787b88a19" prot="public" static="no">
        <name>UA_UINT16_MIN</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="52" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1a93959a11f36b29df18901abf654dc92e" prot="public" static="no">
        <name>UA_INT32_MAX</name>
        <initializer>2147483647</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="56" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1a4440bf06091efde0d75f2cac1f0b1a08" prot="public" static="no">
        <name>UA_INT32_MIN</name>
        <initializer>-2147483648</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="57" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1a1b6ce97466ade7a0a672eb37c1249ab8" prot="public" static="no">
        <name>UA_UINT32_MAX</name>
        <initializer>4294967295</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="61" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1a5162643183222d2614935d0d45b54d14" prot="public" static="no">
        <name>UA_UINT32_MIN</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="62" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1a148526b07573a1e43e9af575166f762e" prot="public" static="no">
        <name>UA_INT64_MAX</name>
        <initializer>9223372036854775807</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="66" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1aeff6f6263daba8099f343fbbd1b51be2" prot="public" static="no">
        <name>UA_INT64_MIN</name>
        <initializer>-9223372036854775808</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="67" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1ac5ba5d30b237ef175a2ff5a0c2197810" prot="public" static="no">
        <name>UA_UINT64_MAX</name>
        <initializer>= 18446744073709551615</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="71" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1a96fb8bea1846ee7cca6d60396270e09b" prot="public" static="no">
        <name>UA_UINT64_MIN</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="72" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1a0a7ca0fea7febe998b7ef18063513672" prot="public" static="no">
        <name>UA_TYPE_HANDLING_FUNCTIONS</name>
        <param><defname>TYPE</defname></param>
        <initializer>TYPE <ref refid="ua__config_8h_1aba46d236acc7541d0ee0a96f8c7f7907" kindref="member">UA_EXPORT</ref> * TYPE##_new(void);                               \
    void <ref refid="ua__config_8h_1aba46d236acc7541d0ee0a96f8c7f7907" kindref="member">UA_EXPORT</ref> TYPE##_init(TYPE * p);                            \
    void <ref refid="ua__config_8h_1aba46d236acc7541d0ee0a96f8c7f7907" kindref="member">UA_EXPORT</ref> TYPE##_delete(TYPE * p);                          \
    void <ref refid="ua__config_8h_1aba46d236acc7541d0ee0a96f8c7f7907" kindref="member">UA_EXPORT</ref> TYPE##_deleteMembers(TYPE * p);                   \
    <ref refid="ua__statuscodes_8h_1a82f92964aaa5dd1c5a1c5d7e9099883c" kindref="member">UA_StatusCode</ref> <ref refid="ua__config_8h_1aba46d236acc7541d0ee0a96f8c7f7907" kindref="member">UA_EXPORT</ref> TYPE##_copy(const TYPE *src, TYPE *<ref refid="group__encoding__binary_1ga302ce87fe8e4126284991dea83ff4075" kindref="member">dst</ref>);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="227" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1aea4f43fd919761c30561e7ae4b0fd5c7" prot="public" static="no">
        <name>UA_DateTime_new</name>
        <initializer>UA_Int64_new</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="242"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1ada0cd7bd9eb61cb7efdd3477c6c95c4f" prot="public" static="no">
        <name>UA_DateTime_init</name>
        <initializer>UA_Int64_init</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="243"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1a4e9ceaa9b022fa85b1db40ec4ac2c0b9" prot="public" static="no">
        <name>UA_DateTime_delete</name>
        <initializer>UA_Int64_delete</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="244"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1a560e1f63d1b0a084f3e883f068185a81" prot="public" static="no">
        <name>UA_DateTime_deleteMembers</name>
        <initializer>UA_Int64_deleteMembers</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="245"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1a2ac55371767b39e315a9894a614f1afb" prot="public" static="no">
        <name>UA_DateTime_copy</name>
        <initializer>UA_Int64_copy</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="246"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1a963f2a973a91635859e4d706a86a47e1" prot="public" static="no">
        <name>UA_ByteString_new</name>
        <initializer>UA_String_new</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="248"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1a9a57b4cdbf6b77e46271988e07cf91f6" prot="public" static="no">
        <name>UA_ByteString_init</name>
        <initializer>UA_String_init</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="249"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1aa75ec02a6eedada25c53415157dfb20b" prot="public" static="no">
        <name>UA_ByteString_delete</name>
        <initializer>UA_String_delete</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="250"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1ac8cbe2208b861d5bd477e01f0bc8f845" prot="public" static="no">
        <name>UA_ByteString_deleteMembers</name>
        <initializer>UA_String_deleteMembers</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="251"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1a02e3fbeb9bff54a393aa5c29dff31f42" prot="public" static="no">
        <name>UA_ByteString_copy</name>
        <initializer>UA_String_copy</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="252"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1afb69489df788f8c41c20158490cd77aa" prot="public" static="no">
        <name>UA_XmlElement_new</name>
        <initializer>UA_String_new</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="253"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1aee98fb05d82234addc722b5561883fdf" prot="public" static="no">
        <name>UA_XmlElement_init</name>
        <initializer>UA_String_init</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="254"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1a743453346f07b3ea911fb2fbcc1b137d" prot="public" static="no">
        <name>UA_XmlElement_delete</name>
        <initializer>UA_String_delete</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="255"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1a08e577e18ebc43c46e7241ba5147ec15" prot="public" static="no">
        <name>UA_XmlElement_deleteMembers</name>
        <initializer>UA_String_deleteMembers</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="256"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1a7eb2e333e6f31bd8486a584690382b23" prot="public" static="no">
        <name>UA_XmlElement_copy</name>
        <initializer>UA_String_copy</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="257"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1a216cf0865a28150772bf71fe96a86fd7" prot="public" static="no">
        <name>UA_StatusCode_new</name>
        <param><defname>p</defname></param>
        <initializer>UA_Int32_new((<ref refid="ua__types_8h_1a01ce3c3b2fb34ef81c97c313f516004e" kindref="member">UA_Int32</ref>*)p)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="260"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1a1896cb8468c7a2584928549b595948a1" prot="public" static="no">
        <name>UA_StatusCode_init</name>
        <param><defname>p</defname></param>
        <initializer>UA_Int32_init((<ref refid="ua__types_8h_1a01ce3c3b2fb34ef81c97c313f516004e" kindref="member">UA_Int32</ref>*)p)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="261"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1a9628aa393ba4f8ce6a31281b11910aff" prot="public" static="no">
        <name>UA_StatusCode_delete</name>
        <param><defname>p</defname></param>
        <initializer>UA_Int32_delete((<ref refid="ua__types_8h_1a01ce3c3b2fb34ef81c97c313f516004e" kindref="member">UA_Int32</ref>*)p)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="262"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1a9cf6a1bba812f4415644dcea68b3e1ac" prot="public" static="no">
        <name>UA_StatusCode_deleteMembers</name>
        <param><defname>p</defname></param>
        <initializer>UA_Int32_deleteMembers((<ref refid="ua__types_8h_1a01ce3c3b2fb34ef81c97c313f516004e" kindref="member">UA_Int32</ref>*)p)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="263"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1a566ff8297bd9ae61445fe005f0614d60" prot="public" static="no">
        <name>UA_StatusCode_copy</name>
        <param><defname>p</defname></param>
        <initializer>UA_Int32_copy((<ref refid="ua__types_8h_1a01ce3c3b2fb34ef81c97c313f516004e" kindref="member">UA_Int32</ref>*)p)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="264"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1a110846759e839327492b0e01513ff43e" prot="public" static="no">
        <name>UA_STRING_NULL</name>
        <initializer>(<ref refid="structUA__String" kindref="compound">UA_String</ref>) {-1, (<ref refid="ua__types_8h_1ac31865e6fcb9a042b5eaf5a5bd4ed30d" kindref="member">UA_Byte</ref>*)0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="281" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="281" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1acb5c69db9e50e7ced94255f8ba58c277" prot="public" static="no">
        <name>UA_STRING</name>
        <param><defname>CHARS</defname></param>
        <initializer>(<ref refid="structUA__String" kindref="compound">UA_String</ref>) {strlen(CHARS), (<ref refid="ua__types_8h_1ac31865e6fcb9a042b5eaf5a5bd4ed30d" kindref="member">UA_Byte</ref>*)CHARS }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="282" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1ac6f19951777419d520d469d5130acae4" prot="public" static="no">
        <name>UA_STRING_ALLOC</name>
        <param><defname>CHARS</defname></param>
        <initializer>UA_String_fromChars(CHARS)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="283" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1ad966a75e1f6f09b2f7e2a6cab0ab802b" prot="public" static="no">
        <name>UA_BYTESTRING_NULL</name>
        <initializer>(<ref refid="ua__types_8h_1a05a19615d5da9f034fabefd3d02225ee" kindref="member">UA_ByteString</ref>) {-1, (<ref refid="ua__types_8h_1ac31865e6fcb9a042b5eaf5a5bd4ed30d" kindref="member">UA_Byte</ref>*)0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="318" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="318" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1a9c3b3c5b704f6e9a1baeeb3b7341a58b" prot="public" static="no">
        <name>UA_ByteString_equal</name>
        <param><defname>string1</defname></param>
        <param><defname>string2</defname></param>
        <initializer><ref refid="ua__types_8h_1a9e8c810b5a6b8b68f9fdffff13e9eb77" kindref="member">UA_String_equal</ref>((const <ref refid="structUA__String" kindref="compound">UA_String</ref>*) string1, (const <ref refid="structUA__String" kindref="compound">UA_String</ref>*)string2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="320" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="319" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1a90a8072ac70174fbf8ae58fbd1a32076" prot="public" static="no">
        <name>UA_NODEID_NUMERIC</name>
        <param><defname>NSID</defname></param>
        <param><defname>NUMERICID</defname></param>
        <initializer><ref refid="ua__types_8h_1a2549f659a339931bcd18696b4483b61c" kindref="member">UA_NodeId_fromInteger</ref>(NSID, NUMERICID)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="343" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="343" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1a41e878b48c26093fe178649d7a86f988" prot="public" static="no">
        <name>UA_NODEID_STRING</name>
        <param><defname>NSID</defname></param>
        <param><defname>CHARS</defname></param>
        <initializer><ref refid="ua__types_8h_1a4d87479d9a6801b1a4556aabd3dcbe05" kindref="member">UA_NodeId_fromCharString</ref>(NSID, CHARS)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="344" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="344" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1a5d8065ecd4f2493d286ad007ceba676c" prot="public" static="no">
        <name>UA_NODEID_STRING_ALLOC</name>
        <param><defname>NSID</defname></param>
        <param><defname>CHARS</defname></param>
        <initializer><ref refid="ua__types_8h_1a40a4704eb49dc9966ecd45110e1521a5" kindref="member">UA_NodeId_fromCharStringCopy</ref>(NSID, CHARS)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="345" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="345" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1aca5ae65c00b9bd3ca18efc92c9bf6552" prot="public" static="no">
        <name>UA_NODEID_GUID</name>
        <param><defname>NSID</defname></param>
        <param><defname>GUID</defname></param>
        <initializer><ref refid="ua__types_8h_1a689be6d365091aa44238fbbf499aed93" kindref="member">UA_NodeId_fromGuid</ref>(NSID, GUID)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="346" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="346" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1ac4e7cfde9e6f1b5374943575fb9472ca" prot="public" static="no">
        <name>UA_NODEID_BYTESTRING</name>
        <param><defname>NSID</defname></param>
        <param><defname>CHARS</defname></param>
        <initializer><ref refid="ua__types_8h_1afd53aa38e9f3ab15c4b4c12edf97dbda" kindref="member">UA_NodeId_fromCharByteString</ref>(NSID, CHARS)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="347" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="347" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1a16579d3a5b875d09e66edbc98ee5bf17" prot="public" static="no">
        <name>UA_NODEID_BYTESTRING_ALLOC</name>
        <param><defname>NSID</defname></param>
        <param><defname>CHARS</defname></param>
        <initializer><ref refid="ua__types_8h_1a40a4704eb49dc9966ecd45110e1521a5" kindref="member">UA_NodeId_fromCharStringCopy</ref>(NSID, CHARS)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="348" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="348" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1a74e534f9817ed93e73ee3566a0d62a82" prot="public" static="no">
        <name>UA_NODEID_NULL</name>
        <initializer><ref refid="ua__types_8h_1a90a8072ac70174fbf8ae58fbd1a32076" kindref="member">UA_NODEID_NUMERIC</ref>(0,0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="349" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="349" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1aa089267a570b610525a3443c0ff20299" prot="public" static="no">
        <name>UA_EXPANDEDNODEID_NUMERIC</name>
        <param><defname>NSID</defname></param>
        <param><defname>NUMERICID</defname></param>
        <initializer>(<ref refid="structUA__ExpandedNodeId" kindref="compound">UA_ExpandedNodeId</ref>) {            \
        .nodeId = {.namespaceIndex = NSID, .identifierType = UA_NODEIDTYPE_NUMERIC, \
                   .identifier.numeric = NUMERICID },                                   \
        .serverIndex = 0, .namespaceUri = {.data = (<ref refid="ua__types_8h_1ac31865e6fcb9a042b5eaf5a5bd4ed30d" kindref="member">UA_Byte</ref>*)0, .length = -1} }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="357" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="354" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1a4ca103cfcf67d30563ca5f28574e601c" prot="public" static="no">
        <name>UA_QUALIFIEDNAME</name>
        <param><defname>NSID</defname></param>
        <param><defname>CHARS</defname></param>
        <initializer>(const <ref refid="structUA__QualifiedName" kindref="compound">UA_QualifiedName</ref>) {    \
        .namespaceIndex = NSID, .name = <ref refid="ua__types_8h_1acb5c69db9e50e7ced94255f8ba58c277" kindref="member">UA_STRING</ref>(CHARS) }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="361" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="360" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1aaee901cea3ebb2b84774cbfc3e6a340e" prot="public" static="no">
        <name>UA_QUALIFIEDNAME_ALLOC</name>
        <param><defname>NSID</defname></param>
        <param><defname>CHARS</defname></param>
        <initializer>(<ref refid="structUA__QualifiedName" kindref="compound">UA_QualifiedName</ref>) {    \
        .namespaceIndex = NSID, .name = <ref refid="ua__types_8h_1ac6f19951777419d520d469d5130acae4" kindref="member">UA_STRING_ALLOC</ref>(CHARS) }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="363" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="362" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1a2ff49f406a45ec697a4469282a934581" prot="public" static="no">
        <name>UA_LOCALIZEDTEXT</name>
        <param><defname>LOCALE</defname></param>
        <param><defname>TEXT</defname></param>
        <initializer>(const <ref refid="structUA__LocalizedText" kindref="compound">UA_LocalizedText</ref>) {       \
        .locale = <ref refid="ua__types_8h_1acb5c69db9e50e7ced94255f8ba58c277" kindref="member">UA_STRING</ref>(LOCALE), .text = <ref refid="ua__types_8h_1acb5c69db9e50e7ced94255f8ba58c277" kindref="member">UA_STRING</ref>(TEXT) }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="367" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1a40e070f7fee57a52599aee8876b99183" prot="public" static="no">
        <name>UA_LOCALIZEDTEXT_ALLOC</name>
        <param><defname>LOCALE</defname></param>
        <param><defname>TEXT</defname></param>
        <initializer>(<ref refid="structUA__LocalizedText" kindref="compound">UA_LocalizedText</ref>) {       \
        .locale = <ref refid="ua__types_8h_1ac6f19951777419d520d469d5130acae4" kindref="member">UA_STRING_ALLOC</ref>(LOCALE), .text = <ref refid="ua__types_8h_1ac6f19951777419d520d469d5130acae4" kindref="member">UA_STRING_ALLOC</ref>(TEXT) }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="369" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="368" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1abf07f23cfc9cb99023ab368334bf7cbc" prot="public" static="no">
        <name>UA_MAX_TYPE_MEMBERS</name>
        <initializer>13</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="482" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="482" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1a0ee43f8337d256e0c0d972e805f564dc" prot="public" static="no">
        <name>UA_BITFIELD</name>
        <param><defname>SIZE</defname></param>
        <initializer>: SIZE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="485" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="485" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1a1b1a27924e028ac4d94160187deadd4b" prot="public" static="no">
        <name>UA_IS_BUILTIN</name>
        <param><defname>ID</defname></param>
        <initializer>(ID &lt;= UA_TYPES_DIAGNOSTICINFO)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="490" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="490" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ua__types_8h_1a40af4217190d59d7145e58a278f9f87d" prot="public" static="no">
        <name>MAX_ARRAY_SIZE</name>
        <initializer>104857600</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="567" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="567" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2" prot="public" static="no">
        <name>UA_AttributeId</name>
        <enumvalue id="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a010f97a4da8e68bf96818c00b26efd49" prot="public">
          <name>UA_ATTRIBUTEID_NODEID</name>
          <initializer> 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2af235d5bd1b6c5e3525ab99f355d0b7c2" prot="public">
          <name>UA_ATTRIBUTEID_NODECLASS</name>
          <initializer> 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a7c350a488cbda39a1cebfa0800aa5cde" prot="public">
          <name>UA_ATTRIBUTEID_BROWSENAME</name>
          <initializer> 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2ac82fa4c8a2d2069937551433e20b82b7" prot="public">
          <name>UA_ATTRIBUTEID_DISPLAYNAME</name>
          <initializer> 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a3c9c7e4a817b780cf31eef5435f74393" prot="public">
          <name>UA_ATTRIBUTEID_DESCRIPTION</name>
          <initializer> 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a63d9968c1c1d30e4d3ec22c9a3f40cf2" prot="public">
          <name>UA_ATTRIBUTEID_WRITEMASK</name>
          <initializer> 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a3a70213d133879a9bad0e61bad772c10" prot="public">
          <name>UA_ATTRIBUTEID_USERWRITEMASK</name>
          <initializer> 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a20e07e43746725d089cd14178a79c854" prot="public">
          <name>UA_ATTRIBUTEID_ISABSTRACT</name>
          <initializer> 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a211799bb708d215b4da0e85690111f0a" prot="public">
          <name>UA_ATTRIBUTEID_SYMMETRIC</name>
          <initializer> 9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a8673a4e8dc5748249120d439676d7c0b" prot="public">
          <name>UA_ATTRIBUTEID_INVERSENAME</name>
          <initializer> 10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a2ed187c989c9cbc7e9c8ca08cf827afc" prot="public">
          <name>UA_ATTRIBUTEID_CONTAINSNOLOOPS</name>
          <initializer> 11</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2abe1ccbc339ee1befa6f4dd3ca77cefea" prot="public">
          <name>UA_ATTRIBUTEID_EVENTNOTIFIER</name>
          <initializer> 12</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a659151d5abe28a5c38051214698aac70" prot="public">
          <name>UA_ATTRIBUTEID_VALUE</name>
          <initializer> 13</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a849c5cad2807f039a50f36644327326f" prot="public">
          <name>UA_ATTRIBUTEID_DATATYPE</name>
          <initializer> 14</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a039ca1669304b63bbc81214ef69e9d8a" prot="public">
          <name>UA_ATTRIBUTEID_VALUERANK</name>
          <initializer> 15</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a6a14c4a2fd8f530469674af905379333" prot="public">
          <name>UA_ATTRIBUTEID_ARRAYDIMENSIONS</name>
          <initializer> 16</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a1bb098ba70c2d038733dd0a4c7a26b7d" prot="public">
          <name>UA_ATTRIBUTEID_ACCESSLEVEL</name>
          <initializer> 17</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a8ab5259bdbd89082bb8f4737cb758732" prot="public">
          <name>UA_ATTRIBUTEID_USERACCESSLEVEL</name>
          <initializer> 18</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a7f82c0c712946d59b409fcb9ae62858c" prot="public">
          <name>UA_ATTRIBUTEID_MINIMUMSAMPLINGINTERVAL</name>
          <initializer> 19</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a2192861c89869139ba6bc50763e17c95" prot="public">
          <name>UA_ATTRIBUTEID_HISTORIZING</name>
          <initializer> 20</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a116dabcd654aa3a2665a6cf8b5b24838" prot="public">
          <name>UA_ATTRIBUTEID_EXECUTABLE</name>
          <initializer> 21</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a302544357ae8af7b96daf5cd984058d3" prot="public">
          <name>UA_ATTRIBUTEID_USEREXECUTABLE</name>
          <initializer> 22</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="599" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="599" bodyend="622"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="ua__types_8h_1a9a1800cf448ad57727ab920aa254a1a4" prot="public" static="no">
        <type>bool</type>
        <definition>typedef bool UA_Boolean</definition>
        <argsstring></argsstring>
        <name>UA_Boolean</name>
        <briefdescription>
<para>A two-state logical value (true or false). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="30" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ua__types_8h_1a4ba04733a2525e207fa5ea5337ad17f3" prot="public" static="no">
        <type>int8_t</type>
        <definition>typedef int8_t UA_SByte</definition>
        <argsstring></argsstring>
        <name>UA_SByte</name>
        <briefdescription>
<para>An integer value between -129 and 127. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="35" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ua__types_8h_1ac31865e6fcb9a042b5eaf5a5bd4ed30d" prot="public" static="no">
        <type>uint8_t</type>
        <definition>typedef uint8_t UA_Byte</definition>
        <argsstring></argsstring>
        <name>UA_Byte</name>
        <briefdescription>
<para>An integer value between 0 and 256. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="40" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ua__types_8h_1a2dfa954c25e6984956ab6fa8e8fd73db" prot="public" static="no">
        <type>int16_t</type>
        <definition>typedef int16_t UA_Int16</definition>
        <argsstring></argsstring>
        <name>UA_Int16</name>
        <briefdescription>
<para>An integer value between -32 768 and 32 767. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="45" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ua__types_8h_1a0a5ff540581b2a3ca4757de792c68f05" prot="public" static="no">
        <type>uint16_t</type>
        <definition>typedef uint16_t UA_UInt16</definition>
        <argsstring></argsstring>
        <name>UA_UInt16</name>
        <briefdescription>
<para>An integer value between 0 and 65 535. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="50" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ua__types_8h_1a01ce3c3b2fb34ef81c97c313f516004e" prot="public" static="no">
        <type>int32_t</type>
        <definition>typedef int32_t UA_Int32</definition>
        <argsstring></argsstring>
        <name>UA_Int32</name>
        <briefdescription>
<para>An integer value between -2 147 483 648 and 2 147 483 647. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="55" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ua__types_8h_1a5f0721b034e4c44a7f81589b15ba1baf" prot="public" static="no">
        <type>uint32_t</type>
        <definition>typedef uint32_t UA_UInt32</definition>
        <argsstring></argsstring>
        <name>UA_UInt32</name>
        <briefdescription>
<para>An integer value between 0 and 429 4967 295. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="60" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ua__types_8h_1ae5c13df54009d7a3e374bfc594af8059" prot="public" static="no">
        <type>int64_t</type>
        <definition>typedef int64_t UA_Int64</definition>
        <argsstring></argsstring>
        <name>UA_Int64</name>
        <briefdescription>
<para>An integer value between -10 223 372 036 854 775 808 and 9 223 372 036 854 775 807. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="65" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ua__types_8h_1ad0d8e52a357b7fbe50a0b93a2b688b51" prot="public" static="no">
        <type>uint64_t</type>
        <definition>typedef uint64_t UA_UInt64</definition>
        <argsstring></argsstring>
        <name>UA_UInt64</name>
        <briefdescription>
<para>An integer value between 0 and 18 446 744 073 709 551 615. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="70" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ua__types_8h_1a899228311700e99d006f1ba5bcfcbd02" prot="public" static="no">
        <type>float</type>
        <definition>typedef float UA_Float</definition>
        <argsstring></argsstring>
        <name>UA_Float</name>
        <briefdescription>
<para>An IEEE single precision (32 bit) floating point value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="75" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ua__types_8h_1aac69e6c4659bdcafdb30498200a0ab07" prot="public" static="no">
        <type>double</type>
        <definition>typedef double UA_Double</definition>
        <argsstring></argsstring>
        <name>UA_Double</name>
        <briefdescription>
<para>An IEEE double precision (64 bit) floating point value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="78" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ua__types_8h_1ab4378e68c207b1de4e58d0ae26dc333c" prot="public" static="no">
        <type><ref refid="ua__types_8h_1ae5c13df54009d7a3e374bfc594af8059" kindref="member">UA_Int64</ref></type>
        <definition>typedef UA_Int64 UA_DateTime</definition>
        <argsstring></argsstring>
        <name>UA_DateTime</name>
        <briefdescription>
<para>An instance in time. A DateTime value is encoded as a 64-bit signed integer which represents the number of 100 nanosecond intervals since January 1, 1601 (UTC). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="90" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ua__types_8h_1a05a19615d5da9f034fabefd3d02225ee" prot="public" static="no">
        <type><ref refid="structUA__String" kindref="compound">UA_String</ref></type>
        <definition>typedef UA_String UA_ByteString</definition>
        <argsstring></argsstring>
        <name>UA_ByteString</name>
        <briefdescription>
<para>A sequence of octets. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="101" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ua__types_8h_1a5f27ea2177086218de8bb542fc4476cc" prot="public" static="no">
        <type><ref refid="structUA__String" kindref="compound">UA_String</ref></type>
        <definition>typedef UA_String UA_XmlElement</definition>
        <argsstring></argsstring>
        <name>UA_XmlElement</name>
        <briefdescription>
<para>An XML element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="104" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ua__types_8h_1a31190895fd16b9bda5a2b80c970875f6" prot="public" static="no">
        <type>enum <ref refid="ua__statuscodes_8h_1a82f92964aaa5dd1c5a1c5d7e9099883c" kindref="member">UA_StatusCode</ref></type>
        <definition>typedef enum UA_StatusCode UA_StatusCode</definition>
        <argsstring></argsstring>
        <name>UA_StatusCode</name>
        <briefdescription>
<para>A numeric identifier for a error or condition that is associated with a value or an operation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="133" bodyfile="/home/travis/build/acplt/open62541/include/ua_types.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ua__types_8h_1abd39e8ae53d8ddc60c5866795e39c63f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>UA_TYPE_HANDLING_FUNCTIONS</definition>
        <argsstring>(UA_Boolean) UA_TYPE_HANDLING_FUNCTIONS(UA_SByte) UA_TYPE_HANDLING_FUNCTIONS(UA_Byte) UA_TYPE_HANDLING_FUNCTIONS(UA_Int16) UA_TYPE_HANDLING_FUNCTIONS(UA_UInt16) UA_TYPE_HANDLING_FUNCTIONS(UA_Int32) UA_TYPE_HANDLING_FUNCTIONS(UA_UInt32) UA_TYPE_HANDLING_FUNCTIONS(UA_Int64) UA_TYPE_HANDLING_FUNCTIONS(UA_UInt64) UA_TYPE_HANDLING_FUNCTIONS(UA_Float) UA_TYPE_HANDLING_FUNCTIONS(UA_Double) UA_TYPE_HANDLING_FUNCTIONS(UA_String) UA_TYPE_HANDLING_FUNCTIONS(UA_Guid) UA_TYPE_HANDLING_FUNCTIONS(UA_NodeId) UA_TYPE_HANDLING_FUNCTIONS(UA_ExpandedNodeId) UA_TYPE_HANDLING_FUNCTIONS(UA_QualifiedName) UA_TYPE_HANDLING_FUNCTIONS(UA_LocalizedText) UA_TYPE_HANDLING_FUNCTIONS(UA_ExtensionObject) UA_TYPE_HANDLING_FUNCTIONS(UA_DataValue) UA_TYPE_HANDLING_FUNCTIONS(UA_Variant) UA_TYPE_HANDLING_FUNCTIONS(UA_DiagnosticInfo) UA_String UA_String_fromChars(char const src[])</argsstring>
        <name>UA_TYPE_HANDLING_FUNCTIONS</name>
        <param>
          <type><ref refid="ua__types_8h_1a9a1800cf448ad57727ab920aa254a1a4" kindref="member">UA_Boolean</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy a (zero terminated) char-array into a <ref refid="structUA__String" kindref="compound">UA_String</ref>. Memory for the string data is allocated. If the memory cannot be allocated, a null-string is returned. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="279"/>
      </memberdef>
      <memberdef kind="function" id="ua__types_8h_1a9e8c810b5a6b8b68f9fdffff13e9eb77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ua__types_8h_1a9a1800cf448ad57727ab920aa254a1a4" kindref="member">UA_Boolean</ref></type>
        <definition>UA_Boolean UA_String_equal</definition>
        <argsstring>(const UA_String *string1, const UA_String *string2)</argsstring>
        <name>UA_String_equal</name>
        <param>
          <type>const <ref refid="structUA__String" kindref="compound">UA_String</ref> *</type>
          <declname>string1</declname>
        </param>
        <param>
          <type>const <ref refid="structUA__String" kindref="compound">UA_String</ref> *</type>
          <declname>string2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compares two strings </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="286"/>
      </memberdef>
      <memberdef kind="function" id="ua__types_8h_1a6132c83d992ede8b4fae8fde1170141e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ua__statuscodes_8h_1a82f92964aaa5dd1c5a1c5d7e9099883c" kindref="member">UA_StatusCode</ref></type>
        <definition>UA_StatusCode UA_String_copyprintf</definition>
        <argsstring>(char const fmt[], UA_String *dst,...)</argsstring>
        <name>UA_String_copyprintf</name>
        <param>
          <type>char const</type>
          <declname>fmt</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="structUA__String" kindref="compound">UA_String</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Printf a char-array into a <ref refid="structUA__String" kindref="compound">UA_String</ref>. Memory for the string data is allocated. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="289"/>
      </memberdef>
      <memberdef kind="function" id="ua__types_8h_1ae56238574ba35e88e91f4c264c452284" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ua__types_8h_1ab4378e68c207b1de4e58d0ae26dc333c" kindref="member">UA_DateTime</ref></type>
        <definition>UA_DateTime UA_DateTime_now</definition>
        <argsstring>(void)</argsstring>
        <name>UA_DateTime_now</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the current time </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="293"/>
      </memberdef>
      <memberdef kind="function" id="ua__types_8h_1a6739b0fb771c8d7a640dd8e221434738" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structUA__DateTimeStruct" kindref="compound">UA_DateTimeStruct</ref></type>
        <definition>UA_DateTimeStruct UA_DateTime_toStruct</definition>
        <argsstring>(UA_DateTime time)</argsstring>
        <name>UA_DateTime_toStruct</name>
        <param>
          <type><ref refid="ua__types_8h_1ab4378e68c207b1de4e58d0ae26dc333c" kindref="member">UA_DateTime</ref></type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="307"/>
      </memberdef>
      <memberdef kind="function" id="ua__types_8h_1a99bbeebb3af26c6fc6a6e64169a051f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ua__statuscodes_8h_1a82f92964aaa5dd1c5a1c5d7e9099883c" kindref="member">UA_StatusCode</ref></type>
        <definition>UA_StatusCode UA_DateTime_toString</definition>
        <argsstring>(UA_DateTime time, UA_String *timeString)</argsstring>
        <name>UA_DateTime_toString</name>
        <param>
          <type><ref refid="ua__types_8h_1ab4378e68c207b1de4e58d0ae26dc333c" kindref="member">UA_DateTime</ref></type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="structUA__String" kindref="compound">UA_String</ref> *</type>
          <declname>timeString</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="308"/>
      </memberdef>
      <memberdef kind="function" id="ua__types_8h_1aeadb12f99531c38134d0ad28a8dd3186" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ua__types_8h_1a9a1800cf448ad57727ab920aa254a1a4" kindref="member">UA_Boolean</ref></type>
        <definition>UA_Boolean UA_Guid_equal</definition>
        <argsstring>(const UA_Guid *g1, const UA_Guid *g2)</argsstring>
        <name>UA_Guid_equal</name>
        <param>
          <type>const <ref refid="structUA__Guid" kindref="compound">UA_Guid</ref> *</type>
          <declname>g1</declname>
        </param>
        <param>
          <type>const <ref refid="structUA__Guid" kindref="compound">UA_Guid</ref> *</type>
          <declname>g2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compares two guids </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="312"/>
      </memberdef>
      <memberdef kind="function" id="ua__types_8h_1aaccebbff7b43172a41d84ec0c4fb0d50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structUA__Guid" kindref="compound">UA_Guid</ref></type>
        <definition>UA_Guid UA_Guid_random</definition>
        <argsstring>(UA_UInt32 *seed)</argsstring>
        <name>UA_Guid_random</name>
        <param>
          <type><ref refid="ua__types_8h_1a5f0721b034e4c44a7f81589b15ba1baf" kindref="member">UA_UInt32</ref> *</type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a randomly generated guid. Do not use for security-critical entropy! </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="315"/>
      </memberdef>
      <memberdef kind="function" id="ua__types_8h_1adaec8dbc6d61a26c5dd135dfa1aa28f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ua__statuscodes_8h_1a82f92964aaa5dd1c5a1c5d7e9099883c" kindref="member">UA_StatusCode</ref></type>
        <definition>UA_StatusCode UA_ByteString_newMembers</definition>
        <argsstring>(UA_ByteString *p, UA_Int32 length)</argsstring>
        <name>UA_ByteString_newMembers</name>
        <param>
          <type><ref refid="ua__types_8h_1a05a19615d5da9f034fabefd3d02225ee" kindref="member">UA_ByteString</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="ua__types_8h_1a01ce3c3b2fb34ef81c97c313f516004e" kindref="member">UA_Int32</ref></type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocates memory of size length for the bytestring. The content is not set to zero. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="323"/>
      </memberdef>
      <memberdef kind="function" id="ua__types_8h_1a8542e9240038621026c3ddce368cd317" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ua__types_8h_1a9a1800cf448ad57727ab920aa254a1a4" kindref="member">UA_Boolean</ref></type>
        <definition>UA_Boolean UA_NodeId_equal</definition>
        <argsstring>(const UA_NodeId *n1, const UA_NodeId *n2)</argsstring>
        <name>UA_NodeId_equal</name>
        <param>
          <type>const <ref refid="structUA__NodeId" kindref="compound">UA_NodeId</ref> *</type>
          <declname>n1</declname>
        </param>
        <param>
          <type>const <ref refid="structUA__NodeId" kindref="compound">UA_NodeId</ref> *</type>
          <declname>n2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compares two nodeids </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="327"/>
      </memberdef>
      <memberdef kind="function" id="ua__types_8h_1a5d5eb7e9d541654965cdd0e43efadb73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ua__types_8h_1a9a1800cf448ad57727ab920aa254a1a4" kindref="member">UA_Boolean</ref></type>
        <definition>UA_Boolean UA_NodeId_isNull</definition>
        <argsstring>(const UA_NodeId *p)</argsstring>
        <name>UA_NodeId_isNull</name>
        <param>
          <type>const <ref refid="structUA__NodeId" kindref="compound">UA_NodeId</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Is the nodeid a null-nodeid? </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="330"/>
      </memberdef>
      <memberdef kind="function" id="ua__types_8h_1a2549f659a339931bcd18696b4483b61c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structUA__NodeId" kindref="compound">UA_NodeId</ref></type>
        <definition>UA_NodeId UA_NodeId_fromInteger</definition>
        <argsstring>(UA_UInt16 nsIndex, UA_Int32 identifier)</argsstring>
        <name>UA_NodeId_fromInteger</name>
        <param>
          <type><ref refid="ua__types_8h_1a0a5ff540581b2a3ca4757de792c68f05" kindref="member">UA_UInt16</ref></type>
          <declname>nsIndex</declname>
        </param>
        <param>
          <type><ref refid="ua__types_8h_1a01ce3c3b2fb34ef81c97c313f516004e" kindref="member">UA_Int32</ref></type>
          <declname>identifier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="332"/>
      </memberdef>
      <memberdef kind="function" id="ua__types_8h_1a4d87479d9a6801b1a4556aabd3dcbe05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structUA__NodeId" kindref="compound">UA_NodeId</ref></type>
        <definition>UA_NodeId UA_NodeId_fromCharString</definition>
        <argsstring>(UA_UInt16 nsIndex, char identifier[])</argsstring>
        <name>UA_NodeId_fromCharString</name>
        <param>
          <type><ref refid="ua__types_8h_1a0a5ff540581b2a3ca4757de792c68f05" kindref="member">UA_UInt16</ref></type>
          <declname>nsIndex</declname>
        </param>
        <param>
          <type>char</type>
          <declname>identifier</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="333"/>
      </memberdef>
      <memberdef kind="function" id="ua__types_8h_1a40a4704eb49dc9966ecd45110e1521a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structUA__NodeId" kindref="compound">UA_NodeId</ref></type>
        <definition>UA_NodeId UA_NodeId_fromCharStringCopy</definition>
        <argsstring>(UA_UInt16 nsIndex, char const identifier[])</argsstring>
        <name>UA_NodeId_fromCharStringCopy</name>
        <param>
          <type><ref refid="ua__types_8h_1a0a5ff540581b2a3ca4757de792c68f05" kindref="member">UA_UInt16</ref></type>
          <declname>nsIndex</declname>
        </param>
        <param>
          <type>char const</type>
          <declname>identifier</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="334"/>
      </memberdef>
      <memberdef kind="function" id="ua__types_8h_1a0fec60f23b77729f1991610a9ea963b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structUA__NodeId" kindref="compound">UA_NodeId</ref></type>
        <definition>UA_NodeId UA_NodeId_fromString</definition>
        <argsstring>(UA_UInt16 nsIndex, UA_String identifier)</argsstring>
        <name>UA_NodeId_fromString</name>
        <param>
          <type><ref refid="ua__types_8h_1a0a5ff540581b2a3ca4757de792c68f05" kindref="member">UA_UInt16</ref></type>
          <declname>nsIndex</declname>
        </param>
        <param>
          <type><ref refid="structUA__String" kindref="compound">UA_String</ref></type>
          <declname>identifier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="335"/>
      </memberdef>
      <memberdef kind="function" id="ua__types_8h_1acddef7dc7ddd76136998911291e284ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structUA__NodeId" kindref="compound">UA_NodeId</ref></type>
        <definition>UA_NodeId UA_NodeId_fromStringCopy</definition>
        <argsstring>(UA_UInt16 nsIndex, UA_String identifier)</argsstring>
        <name>UA_NodeId_fromStringCopy</name>
        <param>
          <type><ref refid="ua__types_8h_1a0a5ff540581b2a3ca4757de792c68f05" kindref="member">UA_UInt16</ref></type>
          <declname>nsIndex</declname>
        </param>
        <param>
          <type><ref refid="structUA__String" kindref="compound">UA_String</ref></type>
          <declname>identifier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="336"/>
      </memberdef>
      <memberdef kind="function" id="ua__types_8h_1a689be6d365091aa44238fbbf499aed93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structUA__NodeId" kindref="compound">UA_NodeId</ref></type>
        <definition>UA_NodeId UA_NodeId_fromGuid</definition>
        <argsstring>(UA_UInt16 nsIndex, UA_Guid identifier)</argsstring>
        <name>UA_NodeId_fromGuid</name>
        <param>
          <type><ref refid="ua__types_8h_1a0a5ff540581b2a3ca4757de792c68f05" kindref="member">UA_UInt16</ref></type>
          <declname>nsIndex</declname>
        </param>
        <param>
          <type><ref refid="structUA__Guid" kindref="compound">UA_Guid</ref></type>
          <declname>identifier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="337"/>
      </memberdef>
      <memberdef kind="function" id="ua__types_8h_1afd53aa38e9f3ab15c4b4c12edf97dbda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structUA__NodeId" kindref="compound">UA_NodeId</ref></type>
        <definition>UA_NodeId UA_NodeId_fromCharByteString</definition>
        <argsstring>(UA_UInt16 nsIndex, char identifier[])</argsstring>
        <name>UA_NodeId_fromCharByteString</name>
        <param>
          <type><ref refid="ua__types_8h_1a0a5ff540581b2a3ca4757de792c68f05" kindref="member">UA_UInt16</ref></type>
          <declname>nsIndex</declname>
        </param>
        <param>
          <type>char</type>
          <declname>identifier</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="338"/>
      </memberdef>
      <memberdef kind="function" id="ua__types_8h_1a2bf25ddcb646807abdda0c128c4d9008" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structUA__NodeId" kindref="compound">UA_NodeId</ref></type>
        <definition>UA_NodeId UA_NodeId_fromCharByteStringCopy</definition>
        <argsstring>(UA_UInt16 nsIndex, char const identifier[])</argsstring>
        <name>UA_NodeId_fromCharByteStringCopy</name>
        <param>
          <type><ref refid="ua__types_8h_1a0a5ff540581b2a3ca4757de792c68f05" kindref="member">UA_UInt16</ref></type>
          <declname>nsIndex</declname>
        </param>
        <param>
          <type>char const</type>
          <declname>identifier</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="339"/>
      </memberdef>
      <memberdef kind="function" id="ua__types_8h_1a759bc64515c196d68fed0b394091225c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structUA__NodeId" kindref="compound">UA_NodeId</ref></type>
        <definition>UA_NodeId UA_NodeId_fromByteString</definition>
        <argsstring>(UA_UInt16 nsIndex, UA_ByteString identifier)</argsstring>
        <name>UA_NodeId_fromByteString</name>
        <param>
          <type><ref refid="ua__types_8h_1a0a5ff540581b2a3ca4757de792c68f05" kindref="member">UA_UInt16</ref></type>
          <declname>nsIndex</declname>
        </param>
        <param>
          <type><ref refid="ua__types_8h_1a05a19615d5da9f034fabefd3d02225ee" kindref="member">UA_ByteString</ref></type>
          <declname>identifier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="340"/>
      </memberdef>
      <memberdef kind="function" id="ua__types_8h_1a0d3425e18851db06806ac84cfc66062b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structUA__NodeId" kindref="compound">UA_NodeId</ref></type>
        <definition>UA_NodeId UA_NodeId_fromByteStringCopy</definition>
        <argsstring>(UA_UInt16 nsIndex, UA_ByteString identifier)</argsstring>
        <name>UA_NodeId_fromByteStringCopy</name>
        <param>
          <type><ref refid="ua__types_8h_1a0a5ff540581b2a3ca4757de792c68f05" kindref="member">UA_UInt16</ref></type>
          <declname>nsIndex</declname>
        </param>
        <param>
          <type><ref refid="ua__types_8h_1a05a19615d5da9f034fabefd3d02225ee" kindref="member">UA_ByteString</ref></type>
          <declname>identifier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="341"/>
      </memberdef>
      <memberdef kind="function" id="ua__types_8h_1a9f72c8cb30be5d7e5d99b28c68ae2a47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ua__types_8h_1a9a1800cf448ad57727ab920aa254a1a4" kindref="member">UA_Boolean</ref></type>
        <definition>UA_Boolean UA_ExpandedNodeId_isNull</definition>
        <argsstring>(const UA_ExpandedNodeId *p)</argsstring>
        <name>UA_ExpandedNodeId_isNull</name>
        <param>
          <type>const <ref refid="structUA__ExpandedNodeId" kindref="compound">UA_ExpandedNodeId</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="352"/>
      </memberdef>
      <memberdef kind="function" id="ua__types_8h_1ab4de7af8c39fdc3f62bf36099da09328" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ua__types_8h_1a9a1800cf448ad57727ab920aa254a1a4" kindref="member">UA_Boolean</ref></type>
        <definition>UA_Boolean UA_Variant_isScalar</definition>
        <argsstring>(const UA_Variant *v)</argsstring>
        <name>UA_Variant_isScalar</name>
        <param>
          <type>const <ref refid="structUA__Variant" kindref="compound">UA_Variant</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if the variant contains a scalar value. Note that empty variants contain an array of length -1 (undefined).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>The variant </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Does the variant contain a scalar value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="380"/>
      </memberdef>
      <memberdef kind="function" id="ua__types_8h_1a301e2f6fa408ee279d5e4477082f7c4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ua__statuscodes_8h_1a82f92964aaa5dd1c5a1c5d7e9099883c" kindref="member">UA_StatusCode</ref></type>
        <definition>UA_StatusCode UA_Variant_setScalar</definition>
        <argsstring>(UA_Variant *v, void *p, const UA_DataType *type)</argsstring>
        <name>UA_Variant_setScalar</name>
        <param>
          <type><ref refid="structUA__Variant" kindref="compound">UA_Variant</ref> *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="structUA__DataType" kindref="compound">UA_DataType</ref> *</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the variant to a scalar value that already resides in memory. The value takes on the lifecycle of the variant and is deleted with it.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>The variant </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the value data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The datatype of the value in question </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Indicates whether the operation succeeded or returns an error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="391"/>
      </memberdef>
      <memberdef kind="function" id="ua__types_8h_1ab40084675fc8efaa4af30a5c6a1399e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ua__statuscodes_8h_1a82f92964aaa5dd1c5a1c5d7e9099883c" kindref="member">UA_StatusCode</ref></type>
        <definition>UA_StatusCode UA_Variant_setScalarCopy</definition>
        <argsstring>(UA_Variant *v, const void *p, const UA_DataType *type)</argsstring>
        <name>UA_Variant_setScalarCopy</name>
        <param>
          <type><ref refid="structUA__Variant" kindref="compound">UA_Variant</ref> *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="structUA__DataType" kindref="compound">UA_DataType</ref> *</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the variant to a scalar value that is copied from an existing variable.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>The variant </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the value data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The datatype of the value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Indicates whether the operation succeeded or returns an error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="401"/>
      </memberdef>
      <memberdef kind="function" id="ua__types_8h_1a40bd26c46cc0fe08959b4d221b239e3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ua__statuscodes_8h_1a82f92964aaa5dd1c5a1c5d7e9099883c" kindref="member">UA_StatusCode</ref></type>
        <definition>UA_StatusCode UA_Variant_setArray</definition>
        <argsstring>(UA_Variant *v, void *array, UA_Int32 elements, const UA_DataType *type)</argsstring>
        <name>UA_Variant_setArray</name>
        <param>
          <type><ref refid="structUA__Variant" kindref="compound">UA_Variant</ref> *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>array</declname>
        </param>
        <param>
          <type><ref refid="ua__types_8h_1a01ce3c3b2fb34ef81c97c313f516004e" kindref="member">UA_Int32</ref></type>
          <declname>elements</declname>
        </param>
        <param>
          <type>const <ref refid="structUA__DataType" kindref="compound">UA_DataType</ref> *</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the variant to an array that already resides in memory. The array takes on the lifecycle of the variant and is deleted with it.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>The variant </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the array data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elements</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The datatype of the array </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Indicates whether the operation succeeded or returns an error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="414"/>
      </memberdef>
      <memberdef kind="function" id="ua__types_8h_1a71fe7d8eb2596d4e74614e994626120c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ua__statuscodes_8h_1a82f92964aaa5dd1c5a1c5d7e9099883c" kindref="member">UA_StatusCode</ref></type>
        <definition>UA_StatusCode UA_Variant_setArrayCopy</definition>
        <argsstring>(UA_Variant *v, const void *array, UA_Int32 elements, const UA_DataType *type)</argsstring>
        <name>UA_Variant_setArrayCopy</name>
        <param>
          <type><ref refid="structUA__Variant" kindref="compound">UA_Variant</ref> *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>array</declname>
        </param>
        <param>
          <type><ref refid="ua__types_8h_1a01ce3c3b2fb34ef81c97c313f516004e" kindref="member">UA_Int32</ref></type>
          <declname>elements</declname>
        </param>
        <param>
          <type>const <ref refid="structUA__DataType" kindref="compound">UA_DataType</ref> *</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the variant to an array that is copied from an existing array.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>The variant </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the array data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elements</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The datatype of the array </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Indicates whether the operation succeeded or returns an error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="426"/>
      </memberdef>
      <memberdef kind="function" id="ua__types_8h_1a71fa54467a35ede8e274ce4a2e7af61f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ua__statuscodes_8h_1a82f92964aaa5dd1c5a1c5d7e9099883c" kindref="member">UA_StatusCode</ref></type>
        <definition>UA_StatusCode UA_Variant_copyRange</definition>
        <argsstring>(const UA_Variant *src, UA_Variant *dst, UA_NumericRange range)</argsstring>
        <name>UA_Variant_copyRange</name>
        <param>
          <type>const <ref refid="structUA__Variant" kindref="compound">UA_Variant</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="structUA__Variant" kindref="compound">UA_Variant</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="structUA__NumericRange" kindref="compound">UA_NumericRange</ref></type>
          <declname>range</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy the variant, but use only a subset of the (multidimensional) array into a variant. Returns an error code if the variant is not an array or if the indicated range does not fit.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>The source variant </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>The target variant </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>range</parametername>
</parameternamelist>
<parameterdescription>
<para>The range of the copied data </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns UA_STATUSCODE_GOOD or an error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="450"/>
      </memberdef>
      <memberdef kind="function" id="ua__types_8h_1a0ac19fa4bf04dde43de5edd6c2a4f57d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ua__statuscodes_8h_1a82f92964aaa5dd1c5a1c5d7e9099883c" kindref="member">UA_StatusCode</ref></type>
        <definition>UA_StatusCode UA_Variant_setRange</definition>
        <argsstring>(UA_Variant *v, void *dataArray, UA_Int32 dataArraySize, const UA_NumericRange range)</argsstring>
        <name>UA_Variant_setRange</name>
        <param>
          <type><ref refid="structUA__Variant" kindref="compound">UA_Variant</ref> *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>dataArray</declname>
        </param>
        <param>
          <type><ref refid="ua__types_8h_1a01ce3c3b2fb34ef81c97c313f516004e" kindref="member">UA_Int32</ref></type>
          <declname>dataArraySize</declname>
        </param>
        <param>
          <type>const <ref refid="structUA__NumericRange" kindref="compound">UA_NumericRange</ref></type>
          <declname>range</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Insert a range of data into an existing variant. The data array can&apos;t be reused afterwards if it contains types without a fixed size (e.g. strings) since they take on the lifetime of the variant.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>The variant </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dataArray</parametername>
</parameternamelist>
<parameterdescription>
<para>The data array. The type must match the variant </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dataArraySize</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of the data array. This is checked to match the range size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>range</parametername>
</parameternamelist>
<parameterdescription>
<para>The range of where the new data is inserted </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns UA_STATUSCODE_GOOD or an error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="464"/>
      </memberdef>
      <memberdef kind="function" id="ua__types_8h_1ad69502f7f1cc3cb9c6349fe5af750510" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ua__statuscodes_8h_1a82f92964aaa5dd1c5a1c5d7e9099883c" kindref="member">UA_StatusCode</ref></type>
        <definition>UA_StatusCode UA_Variant_setRangeCopy</definition>
        <argsstring>(UA_Variant *v, const void *dataArray, UA_Int32 dataArraySize, const UA_NumericRange range)</argsstring>
        <name>UA_Variant_setRangeCopy</name>
        <param>
          <type><ref refid="structUA__Variant" kindref="compound">UA_Variant</ref> *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>dataArray</declname>
        </param>
        <param>
          <type><ref refid="ua__types_8h_1a01ce3c3b2fb34ef81c97c313f516004e" kindref="member">UA_Int32</ref></type>
          <declname>dataArraySize</declname>
        </param>
        <param>
          <type>const <ref refid="structUA__NumericRange" kindref="compound">UA_NumericRange</ref></type>
          <declname>range</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Deep-copy a range of data into an existing variant.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>The variant </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dataArray</parametername>
</parameternamelist>
<parameterdescription>
<para>The data array. The type must match the variant </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dataArraySize</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of the data array. This is checked to match the range size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>range</parametername>
</parameternamelist>
<parameterdescription>
<para>The range of where the new data is inserted </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns UA_STATUSCODE_GOOD or an error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="476"/>
      </memberdef>
      <memberdef kind="function" id="ua__types_8h_1a114cbec9be7be24fd20db9e81e8469d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* UA_new</definition>
        <argsstring>(const UA_DataType *dataType)</argsstring>
        <name>UA_new</name>
        <param>
          <type>const <ref refid="structUA__DataType" kindref="compound">UA_DataType</ref> *</type>
          <declname>dataType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocates and initializes a variable of type dataType</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dataType</parametername>
</parameternamelist>
<parameterdescription>
<para>The datatype description </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the memory location of the variable or (void*)0 if no memory is available </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="522"/>
      </memberdef>
      <memberdef kind="function" id="ua__types_8h_1a32edef428c3e485215422554b537e07d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UA_init</definition>
        <argsstring>(void *p, const UA_DataType *dataType)</argsstring>
        <name>UA_init</name>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="structUA__DataType" kindref="compound">UA_DataType</ref> *</type>
          <declname>dataType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initializes a variable to default values</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>The memory location of the variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dataType</parametername>
</parameternamelist>
<parameterdescription>
<para>The datatype description </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="530"/>
      </memberdef>
      <memberdef kind="function" id="ua__types_8h_1a2f381a17969d7d573ae0e747d024bd94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ua__statuscodes_8h_1a82f92964aaa5dd1c5a1c5d7e9099883c" kindref="member">UA_StatusCode</ref></type>
        <definition>UA_StatusCode UA_copy</definition>
        <argsstring>(const void *src, void *dst, const UA_DataType *dataType)</argsstring>
        <name>UA_copy</name>
        <param>
          <type>const void *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="structUA__DataType" kindref="compound">UA_DataType</ref> *</type>
          <declname>dataType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copies the content of two variables. If copying fails (e.g. because no memory was available for an array), then dst is emptied and initialized to prevent memory leaks.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>The memory location of the source variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>The memory location of the destination variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dataType</parametername>
</parameternamelist>
<parameterdescription>
<para>The datatype description </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Indicates whether the operation succeeded or returns an error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="541"/>
      </memberdef>
      <memberdef kind="function" id="ua__types_8h_1a05749c825b162f334194b814e881da0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UA_deleteMembers</definition>
        <argsstring>(void *p, const UA_DataType *dataType)</argsstring>
        <name>UA_deleteMembers</name>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="structUA__DataType" kindref="compound">UA_DataType</ref> *</type>
          <declname>dataType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Deletes the dynamically assigned content of a variable (e.g. a member-array). Afterwards, the variable can be safely deleted without causing memory leaks. But the variable is not initialized and may contain old data that is not memory-relevant.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>The memory location of the variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dataType</parametername>
</parameternamelist>
<parameterdescription>
<para>The datatype description of the variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="551"/>
      </memberdef>
      <memberdef kind="function" id="ua__types_8h_1a4ac9864c5dc0736155367a2e93dbec9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UA_deleteMembersUntil</definition>
        <argsstring>(void *p, const UA_DataType *dataType, UA_Int32 lastMember)</argsstring>
        <name>UA_deleteMembersUntil</name>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="structUA__DataType" kindref="compound">UA_DataType</ref> *</type>
          <declname>dataType</declname>
        </param>
        <param>
          <type><ref refid="ua__types_8h_1a01ce3c3b2fb34ef81c97c313f516004e" kindref="member">UA_Int32</ref></type>
          <declname>lastMember</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="553"/>
      </memberdef>
      <memberdef kind="function" id="ua__types_8h_1af8bc59702423892c96ddb163dfafef11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UA_delete</definition>
        <argsstring>(void *p, const UA_DataType *dataType)</argsstring>
        <name>UA_delete</name>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="structUA__DataType" kindref="compound">UA_DataType</ref> *</type>
          <declname>dataType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Deletes (frees) a variable and all of its content.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>The memory location of the variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dataType</parametername>
</parameternamelist>
<parameterdescription>
<para>The datatype description of the variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="561"/>
      </memberdef>
      <memberdef kind="function" id="ua__types_8h_1a146200bf9ce7202a7f22c24cb3198d27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* UA_Array_new</definition>
        <argsstring>(const UA_DataType *dataType, UA_Int32 elements)</argsstring>
        <name>UA_Array_new</name>
        <param>
          <type>const <ref refid="structUA__DataType" kindref="compound">UA_DataType</ref> *</type>
          <declname>dataType</declname>
        </param>
        <param>
          <type><ref refid="ua__types_8h_1a01ce3c3b2fb34ef81c97c313f516004e" kindref="member">UA_Int32</ref></type>
          <declname>elements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocates and initializes an array of variables of a specific type</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dataType</parametername>
</parameternamelist>
<parameterdescription>
<para>The datatype description </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elements</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of elements in the array </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the memory location of the variable or (void*)0 if no memory could be allocated </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="576"/>
      </memberdef>
      <memberdef kind="function" id="ua__types_8h_1a35f016f4ee2f2788f23895123b77cc5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ua__statuscodes_8h_1a82f92964aaa5dd1c5a1c5d7e9099883c" kindref="member">UA_StatusCode</ref></type>
        <definition>UA_StatusCode UA_Array_copy</definition>
        <argsstring>(const void *src, void **dst, const UA_DataType *dataType, UA_Int32 elements)</argsstring>
        <name>UA_Array_copy</name>
        <param>
          <type>const void *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>void **</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="structUA__DataType" kindref="compound">UA_DataType</ref> *</type>
          <declname>dataType</declname>
        </param>
        <param>
          <type><ref refid="ua__types_8h_1a01ce3c3b2fb34ef81c97c313f516004e" kindref="member">UA_Int32</ref></type>
          <declname>elements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocates and copies an array. dst is set to (void*)0 if not enough memory is available.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>The memory location of the source array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>The memory location where the pointer to the destination array is written </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dataType</parametername>
</parameternamelist>
<parameterdescription>
<para>The datatype of the array members </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elements</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the array </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Indicates whether the operation succeeded or returns an error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="587"/>
      </memberdef>
      <memberdef kind="function" id="ua__types_8h_1a7f8680dd39dfa03e13c02d580115c267" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UA_Array_delete</definition>
        <argsstring>(void *p, const UA_DataType *dataType, UA_Int32 elements)</argsstring>
        <name>UA_Array_delete</name>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="structUA__DataType" kindref="compound">UA_DataType</ref> *</type>
          <declname>dataType</declname>
        </param>
        <param>
          <type><ref refid="ua__types_8h_1a01ce3c3b2fb34ef81c97c313f516004e" kindref="member">UA_Int32</ref></type>
          <declname>elements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Deletes an array.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>The memory location of the array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dataType</parametername>
</parameternamelist>
<parameterdescription>
<para>The datatype of the array members </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elements</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the array </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/include/ua_types.h" line="596"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2014<sp/>the<sp/>contributors<sp/>as<sp/>stated<sp/>in<sp/>the<sp/>AUTHORS<sp/>file</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>open62541.<sp/>open62541<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Public<sp/>License,<sp/>version<sp/>3<sp/>(as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation)<sp/>with</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>a<sp/>static<sp/>linking<sp/>exception<sp/>as<sp/>stated<sp/>in<sp/>the<sp/>LICENSE<sp/>file<sp/>provided<sp/>with</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>open62541.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>open62541<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but<sp/>WITHOUT<sp/>ANY</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/>See<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>details.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UA_TYPES_H_</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>UA_TYPES_H_</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ua__config_8h" kindref="compound">ua_config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="ua__types_8h_1a9a1800cf448ad57727ab920aa254a1a4" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="ua__types_8h_1a9a1800cf448ad57727ab920aa254a1a4" kindref="member" tooltip="A two-state logical value (true or false).">UA_Boolean</ref>;</highlight></codeline>
<codeline lineno="31" refid="ua__types_8h_1a7e76336d5d660d0224183d32b0ca559a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UA_TRUE<sp/>true</highlight></codeline>
<codeline lineno="32" refid="ua__types_8h_1a7bfe97197c3f262b7c1c6937a81023c4" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>UA_FALSE<sp/>false</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="35" refid="ua__types_8h_1a4ba04733a2525e207fa5ea5337ad17f3" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int8_t<sp/><ref refid="ua__types_8h_1a4ba04733a2525e207fa5ea5337ad17f3" kindref="member" tooltip="An integer value between -129 and 127.">UA_SByte</ref>;</highlight></codeline>
<codeline lineno="36" refid="ua__types_8h_1a83baebcdf1ef7011b677fff041ad71a3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UA_SBYTE_MAX<sp/>127</highlight></codeline>
<codeline lineno="37" refid="ua__types_8h_1adfc1151ad0d7855d82629faeb6bc439a" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>UA_SBYTE_MIN<sp/>-128</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="40" refid="ua__types_8h_1ac31865e6fcb9a042b5eaf5a5bd4ed30d" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="ua__types_8h_1ac31865e6fcb9a042b5eaf5a5bd4ed30d" kindref="member" tooltip="An integer value between 0 and 256.">UA_Byte</ref>;</highlight></codeline>
<codeline lineno="41" refid="ua__types_8h_1a61a09d12d05995b104b0852f3f73959c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UA_BYTE_MAX<sp/>256</highlight></codeline>
<codeline lineno="42" refid="ua__types_8h_1a380f59510485db074a65ca46a865215a" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>UA_BYTE_MIN<sp/>0</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="45" refid="ua__types_8h_1a2dfa954c25e6984956ab6fa8e8fd73db" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int16_t<sp/><ref refid="ua__types_8h_1a2dfa954c25e6984956ab6fa8e8fd73db" kindref="member" tooltip="An integer value between -32 768 and 32 767.">UA_Int16</ref>;</highlight></codeline>
<codeline lineno="46" refid="ua__types_8h_1a43f40153e9213bcb5144b124df9af021" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UA_INT16_MAX<sp/>32767</highlight></codeline>
<codeline lineno="47" refid="ua__types_8h_1a2aa0e5da4fb5056fb47550c344b9fd04" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>UA_INT16_MIN<sp/>-32768</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="50" refid="ua__types_8h_1a0a5ff540581b2a3ca4757de792c68f05" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="ua__types_8h_1a0a5ff540581b2a3ca4757de792c68f05" kindref="member" tooltip="An integer value between 0 and 65 535.">UA_UInt16</ref>;</highlight></codeline>
<codeline lineno="51" refid="ua__types_8h_1a5137682801ab30ee56d5f3fbed0efb09" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UA_UINT16_MAX<sp/>65535</highlight></codeline>
<codeline lineno="52" refid="ua__types_8h_1a2e444ffd9ed10697af0af7a787b88a19" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>UA_UINT16_MIN<sp/>0</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="55" refid="ua__types_8h_1a01ce3c3b2fb34ef81c97c313f516004e" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="ua__types_8h_1a01ce3c3b2fb34ef81c97c313f516004e" kindref="member" tooltip="An integer value between -2 147 483 648 and 2 147 483 647.">UA_Int32</ref>;</highlight></codeline>
<codeline lineno="56" refid="ua__types_8h_1a93959a11f36b29df18901abf654dc92e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UA_INT32_MAX<sp/>2147483647</highlight></codeline>
<codeline lineno="57" refid="ua__types_8h_1a4440bf06091efde0d75f2cac1f0b1a08" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>UA_INT32_MIN<sp/>-2147483648</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="60" refid="ua__types_8h_1a5f0721b034e4c44a7f81589b15ba1baf" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="ua__types_8h_1a5f0721b034e4c44a7f81589b15ba1baf" kindref="member" tooltip="An integer value between 0 and 429 4967 295.">UA_UInt32</ref>;</highlight></codeline>
<codeline lineno="61" refid="ua__types_8h_1a1b6ce97466ade7a0a672eb37c1249ab8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UA_UINT32_MAX<sp/>4294967295</highlight></codeline>
<codeline lineno="62" refid="ua__types_8h_1a5162643183222d2614935d0d45b54d14" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>UA_UINT32_MIN<sp/>0</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="65" refid="ua__types_8h_1ae5c13df54009d7a3e374bfc594af8059" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int64_t<sp/><ref refid="ua__types_8h_1ae5c13df54009d7a3e374bfc594af8059" kindref="member" tooltip="An integer value between -10 223 372 036 854 775 808 and 9 223 372 036 854 775 807.">UA_Int64</ref>;</highlight></codeline>
<codeline lineno="66" refid="ua__types_8h_1a148526b07573a1e43e9af575166f762e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UA_INT64_MAX<sp/>9223372036854775807</highlight></codeline>
<codeline lineno="67" refid="ua__types_8h_1aeff6f6263daba8099f343fbbd1b51be2" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>UA_INT64_MIN<sp/>-9223372036854775808</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="70" refid="ua__types_8h_1ad0d8e52a357b7fbe50a0b93a2b688b51" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint64_t<sp/><ref refid="ua__types_8h_1ad0d8e52a357b7fbe50a0b93a2b688b51" kindref="member" tooltip="An integer value between 0 and 18 446 744 073 709 551 615.">UA_UInt64</ref>;</highlight></codeline>
<codeline lineno="71" refid="ua__types_8h_1ac5ba5d30b237ef175a2ff5a0c2197810" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UA_UINT64_MAX<sp/>=<sp/>18446744073709551615</highlight></codeline>
<codeline lineno="72" refid="ua__types_8h_1a96fb8bea1846ee7cca6d60396270e09b" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>UA_UINT64_MIN<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="75" refid="ua__types_8h_1a899228311700e99d006f1ba5bcfcbd02" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="ua__types_8h_1a899228311700e99d006f1ba5bcfcbd02" kindref="member" tooltip="An IEEE single precision (32 bit) floating point value.">UA_Float</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="ua__types_8h_1aac69e6c4659bdcafdb30498200a0ab07" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="ua__types_8h_1aac69e6c4659bdcafdb30498200a0ab07" kindref="member" tooltip="An IEEE double precision (64 bit) floating point value.">UA_Double</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="structUA__String" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="82" refid="structUA__String_1a887f34d04617ad3362c919d172bd2329" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_Int32<sp/><ref refid="structUA__String_1a887f34d04617ad3362c919d172bd2329" kindref="member" tooltip="The length of the string.">length</ref>;<sp/></highlight></codeline>
<codeline lineno="83" refid="structUA__String_1a337ab69f4b7d9c5e6ab1f1cb18844d07" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_Byte<sp/>*<ref refid="structUA__String_1a337ab69f4b7d9c5e6ab1f1cb18844d07" kindref="member" tooltip="The string&amp;#39;s content (not null-terminated)">data</ref>;<sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal">}<sp/><ref refid="structUA__String" kindref="compound" tooltip="A sequence of Unicode characters.">UA_String</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="ua__types_8h_1ab4378e68c207b1de4e58d0ae26dc333c" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>UA_Int64<sp/><ref refid="ua__types_8h_1ab4378e68c207b1de4e58d0ae26dc333c" kindref="member" tooltip="An instance in time. A DateTime value is encoded as a 64-bit signed integer which represents the numb...">UA_DateTime</ref>;<sp/></highlight><highlight class="comment">//<sp/>100<sp/>nanosecond<sp/>resolution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="structUA__Guid" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="94" refid="structUA__Guid_1a8bf7258113c8ddead09af5c062f38b42" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_UInt32<sp/><ref refid="structUA__Guid_1a8bf7258113c8ddead09af5c062f38b42" kindref="member">data1</ref>;</highlight></codeline>
<codeline lineno="95" refid="structUA__Guid_1a26e9f391f75bc0e1532ab43f78a515e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_UInt16<sp/><ref refid="structUA__Guid_1a26e9f391f75bc0e1532ab43f78a515e5" kindref="member">data2</ref>;</highlight></codeline>
<codeline lineno="96" refid="structUA__Guid_1a6c943a9d7f9b8e2c386deb8dd1503dbb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_UInt16<sp/><ref refid="structUA__Guid_1a6c943a9d7f9b8e2c386deb8dd1503dbb" kindref="member">data3</ref>;</highlight></codeline>
<codeline lineno="97" refid="structUA__Guid_1ab1082247bb89bf3b7b44082bb5050fff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_Byte<sp/><sp/><sp/>data4[8];</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}<sp/><ref refid="structUA__Guid" kindref="compound" tooltip="A 16 byte value that can be used as a globally unique identifier.">UA_Guid</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="ua__types_8h_1a05a19615d5da9f034fabefd3d02225ee" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structUA__String" kindref="compound" tooltip="A sequence of Unicode characters.">UA_String</ref><sp/><ref refid="ua__types_8h_1a05a19615d5da9f034fabefd3d02225ee" kindref="member" tooltip="A sequence of octets.">UA_ByteString</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="ua__types_8h_1a5f27ea2177086218de8bb542fc4476cc" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structUA__String" kindref="compound" tooltip="A sequence of Unicode characters.">UA_String</ref><sp/><ref refid="ua__types_8h_1a5f27ea2177086218de8bb542fc4476cc" kindref="member" tooltip="An XML element.">UA_XmlElement</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="comment">/*<sp/>The<sp/>shortened<sp/>numeric<sp/>types<sp/>are<sp/>introduced<sp/>during<sp/>encoding.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="structUA__NodeId" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="109" refid="structUA__NodeId_1ad9fec32e38f81fb6b22abdba1c047ce6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_UInt16<sp/><ref refid="structUA__NodeId_1ad9fec32e38f81fb6b22abdba1c047ce6" kindref="member" tooltip="The namespace index of the node.">namespaceIndex</ref>;<sp/></highlight></codeline>
<codeline lineno="110" refid="structUA__NodeId_1a613a1f1b238b0bd23ac6826258b79000" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="structUA__NodeId_1a613a1f1b238b0bd23ac6826258b79000" kindref="member">UA_NodeIdType</ref><sp/>{</highlight></codeline>
<codeline lineno="111" refid="structUA__NodeId_1a613a1f1b238b0bd23ac6826258b79000a88a0a83b7baa1cd192cdb0118d6935c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UA_NODEIDTYPE_NUMERIC<sp/><sp/><sp/><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="112" refid="structUA__NodeId_1a613a1f1b238b0bd23ac6826258b79000a2539b69eb982c3905dc6a4ff9c7d0f92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UA_NODEIDTYPE_STRING<sp/><sp/><sp/><sp/><sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="113" refid="structUA__NodeId_1a613a1f1b238b0bd23ac6826258b79000a804f5a478eb5007703721e9311bb9177" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UA_NODEIDTYPE_GUID<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="114" refid="structUA__NodeId_1a613a1f1b238b0bd23ac6826258b79000a134c851fb34761cfb0ebd4f6485dd977" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UA_NODEIDTYPE_BYTESTRING<sp/>=<sp/>5</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>identifierType;<sp/></highlight></codeline>
<codeline lineno="116" refid="unionUA__NodeId_8identifier" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UA_UInt32<sp/><sp/><sp/><sp/><sp/>numeric;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUA__String" kindref="compound" tooltip="A sequence of Unicode characters.">UA_String</ref><sp/><sp/><sp/><sp/><sp/>string;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUA__Guid" kindref="compound" tooltip="A 16 byte value that can be used as a globally unique identifier.">UA_Guid</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>guid;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UA_ByteString<sp/>byteString;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>identifier;<sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal">}<sp/><ref refid="structUA__NodeId" kindref="compound" tooltip="An identifier for a node in the address space of an OPC UA Server.">UA_NodeId</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="structUA__ExpandedNodeId" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="126" refid="structUA__ExpandedNodeId_1a0149bc6bc248fdd89f84c6cea4c10376" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structUA__NodeId" kindref="compound" tooltip="An identifier for a node in the address space of an OPC UA Server.">UA_NodeId</ref><sp/><ref refid="structUA__ExpandedNodeId_1a0149bc6bc248fdd89f84c6cea4c10376" kindref="member" tooltip="The nodeid without extensions.">nodeId</ref>;<sp/></highlight></codeline>
<codeline lineno="127" refid="structUA__ExpandedNodeId_1a749a6e24df21d5304fb9149b8fb5e371" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structUA__String" kindref="compound" tooltip="A sequence of Unicode characters.">UA_String</ref><sp/><ref refid="structUA__ExpandedNodeId_1a749a6e24df21d5304fb9149b8fb5e371" kindref="member" tooltip="The Uri of the namespace (tindex in the nodeId is ignored)">namespaceUri</ref>;<sp/></highlight></codeline>
<codeline lineno="128" refid="structUA__ExpandedNodeId_1a68bb24b785fdf3ca6843ce2c149434fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_UInt32<sp/><ref refid="structUA__ExpandedNodeId_1a68bb24b785fdf3ca6843ce2c149434fd" kindref="member" tooltip="The index of the server.">serverIndex</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal">}<sp/><ref refid="structUA__ExpandedNodeId" kindref="compound" tooltip="A NodeId that allows the namespace URI to be specified instead of an index.">UA_ExpandedNodeId</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ua__statuscodes_8h" kindref="compound">ua_statuscodes.h</ref>&quot;</highlight></codeline>
<codeline lineno="133" refid="ua__types_8h_1a31190895fd16b9bda5a2b80c970875f6" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="ua__statuscodes_8h_1a82f92964aaa5dd1c5a1c5d7e9099883c" kindref="member">UA_StatusCode</ref><sp/><ref refid="ua__statuscodes_8h_1a82f92964aaa5dd1c5a1c5d7e9099883c" kindref="member">UA_StatusCode</ref>;<sp/></highlight><highlight class="comment">//<sp/>StatusCodes<sp/>aren&apos;t<sp/>an<sp/>enum(=int)<sp/>since<sp/>32<sp/>unsigned<sp/>bits<sp/>are<sp/>needed.<sp/>See<sp/>also<sp/>ua_statuscodes.h<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="structUA__QualifiedName" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="137" refid="structUA__QualifiedName_1a62fdd63c5166b5d65476df30cde02464" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_UInt16<sp/><ref refid="structUA__QualifiedName_1a62fdd63c5166b5d65476df30cde02464" kindref="member" tooltip="The namespace index.">namespaceIndex</ref>;<sp/></highlight></codeline>
<codeline lineno="138" refid="structUA__QualifiedName_1a6145e4eb0c1024223e1b843bd8681e10" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structUA__String" kindref="compound" tooltip="A sequence of Unicode characters.">UA_String</ref><sp/><ref refid="structUA__QualifiedName_1a6145e4eb0c1024223e1b843bd8681e10" kindref="member" tooltip="The actual name.">name</ref>;<sp/></highlight></codeline>
<codeline lineno="139"><highlight class="normal">}<sp/><ref refid="structUA__QualifiedName" kindref="compound" tooltip="A name qualified by a namespace.">UA_QualifiedName</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="structUA__LocalizedText" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="143" refid="structUA__LocalizedText_1a64abc4e912b771a6a15f009f15ddc1dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structUA__String" kindref="compound" tooltip="A sequence of Unicode characters.">UA_String</ref><sp/><ref refid="structUA__LocalizedText_1a64abc4e912b771a6a15f009f15ddc1dc" kindref="member" tooltip="The locale (e.g. &amp;quot;en-US&amp;quot;)">locale</ref>;<sp/></highlight></codeline>
<codeline lineno="144" refid="structUA__LocalizedText_1a4796104d8f6edcd18058626525d6a024" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structUA__String" kindref="compound" tooltip="A sequence of Unicode characters.">UA_String</ref><sp/><ref refid="structUA__LocalizedText_1a4796104d8f6edcd18058626525d6a024" kindref="member" tooltip="The actual text.">text</ref>;<sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal">}<sp/><ref refid="structUA__LocalizedText" kindref="compound" tooltip="Human readable text with an optional locale identifier.">UA_LocalizedText</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="structUA__ExtensionObject" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="150" refid="structUA__ExtensionObject_1aae7bb3e696306431a2cd7bc511bd5c3f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structUA__NodeId" kindref="compound" tooltip="An identifier for a node in the address space of an OPC UA Server.">UA_NodeId</ref><sp/><ref refid="structUA__ExtensionObject_1aae7bb3e696306431a2cd7bc511bd5c3f" kindref="member" tooltip="The nodeid of the datatype.">typeId</ref>;<sp/></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="152" refid="structUA__ExtensionObject_1a7048a1b6a93e606c0e6e4ab555d162e3a6d305701ea080e4342dea18e055b555c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UA_EXTENSIONOBJECT_ENCODINGMASK_NOBODYISENCODED<sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="153" refid="structUA__ExtensionObject_1a7048a1b6a93e606c0e6e4ab555d162e3ae0736176c63275cc35dc61a40b67f6fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UA_EXTENSIONOBJECT_ENCODINGMASK_BODYISBYTESTRING<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="154" refid="structUA__ExtensionObject_1a7048a1b6a93e606c0e6e4ab555d162e3ae2a757cea7693c5b9f499d597dd86dfd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UA_EXTENSIONOBJECT_ENCODINGMASK_BODYISXML<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>2</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>encoding;<sp/></highlight></codeline>
<codeline lineno="156" refid="structUA__ExtensionObject_1ac1af8afdad7bb507bf0e25c93527c645" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_ByteString<sp/><ref refid="structUA__ExtensionObject_1ac1af8afdad7bb507bf0e25c93527c645" kindref="member" tooltip="The bytestring of the encoded data.">body</ref>;<sp/></highlight></codeline>
<codeline lineno="157"><highlight class="normal">}<sp/><ref refid="structUA__ExtensionObject" kindref="compound" tooltip="A structure that contains an application specific data type that may not be recognized by the receive...">UA_ExtensionObject</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structUA__DataType" kindref="compound">UA_DataType</ref>;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structUA__DataType" kindref="compound">UA_DataType</ref><sp/><ref refid="structUA__DataType" kindref="compound">UA_DataType</ref>;<sp/></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="structUA__Variant" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="174" refid="structUA__Variant_1ab246eb2c59043a7e5df0c75edd3f538f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structUA__DataType" kindref="compound">UA_DataType</ref><sp/>*<ref refid="structUA__Variant_1ab246eb2c59043a7e5df0c75edd3f538f" kindref="member" tooltip="The nodeid of the datatype.">type</ref>;<sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="176" refid="structUA__Variant_1ad38e714decac97a62a08cadd9b6ab6ada9cb1e8cc7777ad12d372a030ae915792" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUA__Variant_1ad38e714decac97a62a08cadd9b6ab6ada9cb1e8cc7777ad12d372a030ae915792" kindref="member" tooltip="The data is &amp;quot;owned&amp;quot; by this variant (copied and deleted together)">UA_VARIANT_DATA</ref>,<sp/></highlight></codeline>
<codeline lineno="177" refid="structUA__Variant_1ad38e714decac97a62a08cadd9b6ab6ada49a8514ad47ce77b05a404f0191dcb55" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UA_VARIANT_DATA_NODELETE,<sp/></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>storageType;<sp/></highlight></codeline>
<codeline lineno="182" refid="structUA__Variant_1ac3446679c7a5074e02f06406ba8bfe26" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_Int32<sp/><sp/><ref refid="structUA__Variant_1ac3446679c7a5074e02f06406ba8bfe26" kindref="member" tooltip="the number of elements in the data-pointer">arrayLength</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="183" refid="structUA__Variant_1ada37e83e1c07bafef77b7132403e1456" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>*<ref refid="structUA__Variant_1ada37e83e1c07bafef77b7132403e1456" kindref="member" tooltip="points to the scalar or array data">data</ref>;<sp/></highlight></codeline>
<codeline lineno="184" refid="structUA__Variant_1ac28224031366a3d927b41d1bd21994aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_Int32<sp/><sp/><ref refid="structUA__Variant_1ac28224031366a3d927b41d1bd21994aa" kindref="member" tooltip="the number of dimensions the data-array has">arrayDimensionsSize</ref>;<sp/></highlight></codeline>
<codeline lineno="185" refid="structUA__Variant_1ade07659b1d4e0e421e7e42d102098e47" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_Int32<sp/>*<ref refid="structUA__Variant_1ade07659b1d4e0e421e7e42d102098e47" kindref="member" tooltip="the length of each dimension of the data-array">arrayDimensions</ref>;<sp/></highlight></codeline>
<codeline lineno="186"><highlight class="normal">}<sp/><ref refid="structUA__Variant" kindref="compound" tooltip="Variants store (arrays of) any data type. Either they provide a pointer to the data in memory...">UA_Variant</ref>;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="structUA__DataValue" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="190" refid="structUA__DataValue_1af7a6da643af31005029ad3759deae136" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_Boolean<sp/><sp/><sp/><sp/>hasValue<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="191" refid="structUA__DataValue_1ab9103bff620cafc90337c7d98b119b2e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_Boolean<sp/><sp/><sp/><sp/>hasStatus<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="192" refid="structUA__DataValue_1ac14d24ddfaff6540055bcab42a2c889d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_Boolean<sp/><sp/><sp/><sp/>hasSourceTimestamp<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="193" refid="structUA__DataValue_1a5e0ea1cf32c085085722370da0960970" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_Boolean<sp/><sp/><sp/><sp/>hasServerTimestamp<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="194" refid="structUA__DataValue_1a09a0c6d09e75f20fc02774751bbba988" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_Boolean<sp/><sp/><sp/><sp/>hasSourcePicoseconds<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="195" refid="structUA__DataValue_1ae05b644e0d350d7e38c8eb1583a68b55" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_Boolean<sp/><sp/><sp/><sp/>hasServerPicoseconds<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="196" refid="structUA__DataValue_1ab18e898e2ee5478aa0cd295f3357841b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structUA__Variant" kindref="compound" tooltip="Variants store (arrays of) any data type. Either they provide a pointer to the data in memory...">UA_Variant</ref><sp/><sp/><sp/><sp/><ref refid="structUA__DataValue_1ab18e898e2ee5478aa0cd295f3357841b" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="197" refid="structUA__DataValue_1a96804144fa60cfc250d5b0085148e588" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_StatusCode<sp/><ref refid="structUA__DataValue_1a96804144fa60cfc250d5b0085148e588" kindref="member">status</ref>;</highlight></codeline>
<codeline lineno="198" refid="structUA__DataValue_1ab7348f73003634fac46f91fb26935d54" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_DateTime<sp/><sp/><sp/><ref refid="structUA__DataValue_1ab7348f73003634fac46f91fb26935d54" kindref="member">sourceTimestamp</ref>;</highlight></codeline>
<codeline lineno="199" refid="structUA__DataValue_1aa29088971f8f8c5675b7c63b2ab4a8ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_Int16<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUA__DataValue_1aa29088971f8f8c5675b7c63b2ab4a8ff" kindref="member">sourcePicoseconds</ref>;</highlight></codeline>
<codeline lineno="200" refid="structUA__DataValue_1a72156c581820c38b5eaf22bf13000050" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_DateTime<sp/><sp/><sp/><ref refid="structUA__DataValue_1a72156c581820c38b5eaf22bf13000050" kindref="member">serverTimestamp</ref>;</highlight></codeline>
<codeline lineno="201" refid="structUA__DataValue_1a4c84c4b08f591e8f1bcf5765720ff90e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_Int16<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUA__DataValue_1a4c84c4b08f591e8f1bcf5765720ff90e" kindref="member">serverPicoseconds</ref>;</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}<sp/><ref refid="structUA__DataValue" kindref="compound" tooltip="A data value with an associated status code and timestamps.">UA_DataValue</ref>;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="structUA__DiagnosticInfo" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structUA__DiagnosticInfo" kindref="compound" tooltip="A structure that contains detailed error and diagnostic information associated with a StatusCode...">UA_DiagnosticInfo</ref><sp/>{</highlight></codeline>
<codeline lineno="206" refid="structUA__DiagnosticInfo_1a23b01f98b07c4b56f0f6bce2cb412fca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_Boolean<sp/><sp/><sp/><sp/><ref refid="structUA__DiagnosticInfo_1a23b01f98b07c4b56f0f6bce2cb412fca" kindref="member">hasSymbolicId</ref><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="207" refid="structUA__DiagnosticInfo_1a029311f425dfb1b179e91f950d61fcd4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_Boolean<sp/><sp/><sp/><sp/><ref refid="structUA__DiagnosticInfo_1a029311f425dfb1b179e91f950d61fcd4" kindref="member">hasNamespaceUri</ref><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="208" refid="structUA__DiagnosticInfo_1a6207a939d6e7c77679f21accf8f86e6d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_Boolean<sp/><sp/><sp/><sp/><ref refid="structUA__DiagnosticInfo_1a6207a939d6e7c77679f21accf8f86e6d" kindref="member">hasLocalizedText</ref><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="209" refid="structUA__DiagnosticInfo_1a3b22d43bb7b08938abff2454f7066b30" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_Boolean<sp/><sp/><sp/><sp/><ref refid="structUA__DiagnosticInfo_1a3b22d43bb7b08938abff2454f7066b30" kindref="member">hasLocale</ref><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="210" refid="structUA__DiagnosticInfo_1affc1fe6b9121a6c4d9bab755947dcc54" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_Boolean<sp/><sp/><sp/><sp/><ref refid="structUA__DiagnosticInfo_1affc1fe6b9121a6c4d9bab755947dcc54" kindref="member">hasAdditionalInfo</ref><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="211" refid="structUA__DiagnosticInfo_1acb1b8dd7767baee39f4a8726f236046d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_Boolean<sp/><sp/><sp/><sp/><ref refid="structUA__DiagnosticInfo_1acb1b8dd7767baee39f4a8726f236046d" kindref="member">hasInnerStatusCode</ref><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="212" refid="structUA__DiagnosticInfo_1a061ea36f7f4d488c0ba6ea3be69754ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_Boolean<sp/><sp/><sp/><sp/><ref refid="structUA__DiagnosticInfo_1a061ea36f7f4d488c0ba6ea3be69754ed" kindref="member">hasInnerDiagnosticInfo</ref><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="213" refid="structUA__DiagnosticInfo_1aa7bba7f8e9135a2c2c0f82f8a74187fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_Int32<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUA__DiagnosticInfo_1aa7bba7f8e9135a2c2c0f82f8a74187fe" kindref="member">symbolicId</ref>;</highlight></codeline>
<codeline lineno="214" refid="structUA__DiagnosticInfo_1a298201c813b173480fd92b5b1e25d0da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_Int32<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUA__DiagnosticInfo_1a298201c813b173480fd92b5b1e25d0da" kindref="member">namespaceUri</ref>;</highlight></codeline>
<codeline lineno="215" refid="structUA__DiagnosticInfo_1a3f7584006d0554f6bf381f538f431a24" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_Int32<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUA__DiagnosticInfo_1a3f7584006d0554f6bf381f538f431a24" kindref="member">localizedText</ref>;</highlight></codeline>
<codeline lineno="216" refid="structUA__DiagnosticInfo_1a28c683f0767da550eb843a8f89640ede" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_Int32<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUA__DiagnosticInfo_1a28c683f0767da550eb843a8f89640ede" kindref="member">locale</ref>;</highlight></codeline>
<codeline lineno="217" refid="structUA__DiagnosticInfo_1a27ca8a6c90713742b582b3cfaf804bb7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structUA__String" kindref="compound" tooltip="A sequence of Unicode characters.">UA_String</ref><sp/><sp/><sp/><sp/><sp/><ref refid="structUA__DiagnosticInfo_1a27ca8a6c90713742b582b3cfaf804bb7" kindref="member">additionalInfo</ref>;</highlight></codeline>
<codeline lineno="218" refid="structUA__DiagnosticInfo_1af47a0c7b7f900928b9bc10b830b775dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_StatusCode<sp/><ref refid="structUA__DiagnosticInfo_1af47a0c7b7f900928b9bc10b830b775dc" kindref="member">innerStatusCode</ref>;</highlight></codeline>
<codeline lineno="219" refid="structUA__DiagnosticInfo_1a2e89179aa0c5e88ca83ab994955dfe92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structUA__DiagnosticInfo" kindref="compound" tooltip="A structure that contains detailed error and diagnostic information associated with a StatusCode...">UA_DiagnosticInfo</ref><sp/>*<ref refid="structUA__DiagnosticInfo_1a2e89179aa0c5e88ca83ab994955dfe92" kindref="member">innerDiagnosticInfo</ref>;</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}<sp/><ref refid="structUA__DiagnosticInfo" kindref="compound" tooltip="A structure that contains detailed error and diagnostic information associated with a StatusCode...">UA_DiagnosticInfo</ref>;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="ua__types_8h_1a0a7ca0fea7febe998b7ef18063513672" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UA_TYPE_HANDLING_FUNCTIONS(TYPE)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="223"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>TYPE<sp/>UA_EXPORT<sp/>*<sp/>TYPE##_new(void);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="224"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>void<sp/>UA_EXPORT<sp/>TYPE##_init(TYPE<sp/>*<sp/>p);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="225"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>void<sp/>UA_EXPORT<sp/>TYPE##_delete(TYPE<sp/>*<sp/>p);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="226"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>void<sp/>UA_EXPORT<sp/>TYPE##_deleteMembers(TYPE<sp/>*<sp/>p);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="227"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>UA_StatusCode<sp/>UA_EXPORT<sp/>TYPE##_copy(const<sp/>TYPE<sp/>*src,<sp/>TYPE<sp/>*dst);</highlight></codeline>
<codeline lineno="228"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Functions<sp/>for<sp/>all<sp/>types<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><ref refid="ua__types_8h_1a0a7ca0fea7febe998b7ef18063513672" kindref="member">UA_TYPE_HANDLING_FUNCTIONS</ref>(UA_Boolean)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><ref refid="ua__types_8h_1a0a7ca0fea7febe998b7ef18063513672" kindref="member">UA_TYPE_HANDLING_FUNCTIONS</ref>(UA_SByte)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><ref refid="ua__types_8h_1a0a7ca0fea7febe998b7ef18063513672" kindref="member">UA_TYPE_HANDLING_FUNCTIONS</ref>(UA_Byte)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><ref refid="ua__types_8h_1a0a7ca0fea7febe998b7ef18063513672" kindref="member">UA_TYPE_HANDLING_FUNCTIONS</ref>(UA_Int16)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><ref refid="ua__types_8h_1a0a7ca0fea7febe998b7ef18063513672" kindref="member">UA_TYPE_HANDLING_FUNCTIONS</ref>(UA_UInt16)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><ref refid="ua__types_8h_1a0a7ca0fea7febe998b7ef18063513672" kindref="member">UA_TYPE_HANDLING_FUNCTIONS</ref>(UA_Int32)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><ref refid="ua__types_8h_1a0a7ca0fea7febe998b7ef18063513672" kindref="member">UA_TYPE_HANDLING_FUNCTIONS</ref>(UA_UInt32)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><ref refid="ua__types_8h_1a0a7ca0fea7febe998b7ef18063513672" kindref="member">UA_TYPE_HANDLING_FUNCTIONS</ref>(UA_Int64)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><ref refid="ua__types_8h_1a0a7ca0fea7febe998b7ef18063513672" kindref="member">UA_TYPE_HANDLING_FUNCTIONS</ref>(UA_UInt64)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><ref refid="ua__types_8h_1a0a7ca0fea7febe998b7ef18063513672" kindref="member">UA_TYPE_HANDLING_FUNCTIONS</ref>(UA_Float)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><ref refid="ua__types_8h_1a0a7ca0fea7febe998b7ef18063513672" kindref="member">UA_TYPE_HANDLING_FUNCTIONS</ref>(UA_Double)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><ref refid="ua__types_8h_1a0a7ca0fea7febe998b7ef18063513672" kindref="member">UA_TYPE_HANDLING_FUNCTIONS</ref>(<ref refid="structUA__String" kindref="compound" tooltip="A sequence of Unicode characters.">UA_String</ref>)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UA_DateTime_new<sp/>UA_Int64_new</highlight></codeline>
<codeline lineno="243"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>UA_DateTime_init<sp/>UA_Int64_init</highlight></codeline>
<codeline lineno="244"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>UA_DateTime_delete<sp/>UA_Int64_delete</highlight></codeline>
<codeline lineno="245"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>UA_DateTime_deleteMembers<sp/>UA_Int64_deleteMembers</highlight></codeline>
<codeline lineno="246"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>UA_DateTime_copy<sp/>UA_Int64_copy</highlight></codeline>
<codeline lineno="247"><highlight class="preprocessor"></highlight><highlight class="normal"><ref refid="ua__types_8h_1a0a7ca0fea7febe998b7ef18063513672" kindref="member">UA_TYPE_HANDLING_FUNCTIONS</ref>(<ref refid="structUA__Guid" kindref="compound" tooltip="A 16 byte value that can be used as a globally unique identifier.">UA_Guid</ref>)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UA_ByteString_new<sp/>UA_String_new</highlight></codeline>
<codeline lineno="249"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>UA_ByteString_init<sp/>UA_String_init</highlight></codeline>
<codeline lineno="250"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>UA_ByteString_delete<sp/>UA_String_delete</highlight></codeline>
<codeline lineno="251"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>UA_ByteString_deleteMembers<sp/>UA_String_deleteMembers</highlight></codeline>
<codeline lineno="252"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>UA_ByteString_copy<sp/>UA_String_copy</highlight></codeline>
<codeline lineno="253"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>UA_XmlElement_new<sp/>UA_String_new</highlight></codeline>
<codeline lineno="254"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>UA_XmlElement_init<sp/>UA_String_init</highlight></codeline>
<codeline lineno="255"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>UA_XmlElement_delete<sp/>UA_String_delete</highlight></codeline>
<codeline lineno="256"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>UA_XmlElement_deleteMembers<sp/>UA_String_deleteMembers</highlight></codeline>
<codeline lineno="257"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>UA_XmlElement_copy<sp/>UA_String_copy</highlight></codeline>
<codeline lineno="258"><highlight class="preprocessor"></highlight><highlight class="normal"><ref refid="ua__types_8h_1a0a7ca0fea7febe998b7ef18063513672" kindref="member">UA_TYPE_HANDLING_FUNCTIONS</ref>(<ref refid="structUA__NodeId" kindref="compound" tooltip="An identifier for a node in the address space of an OPC UA Server.">UA_NodeId</ref>)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><ref refid="ua__types_8h_1a0a7ca0fea7febe998b7ef18063513672" kindref="member">UA_TYPE_HANDLING_FUNCTIONS</ref>(<ref refid="structUA__ExpandedNodeId" kindref="compound" tooltip="A NodeId that allows the namespace URI to be specified instead of an index.">UA_ExpandedNodeId</ref>)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UA_StatusCode_new(p)<sp/>UA_Int32_new((UA_Int32*)p)</highlight></codeline>
<codeline lineno="261"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>UA_StatusCode_init(p)<sp/>UA_Int32_init((UA_Int32*)p)</highlight></codeline>
<codeline lineno="262"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>UA_StatusCode_delete(p)<sp/>UA_Int32_delete((UA_Int32*)p)</highlight></codeline>
<codeline lineno="263"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>UA_StatusCode_deleteMembers(p)<sp/>UA_Int32_deleteMembers((UA_Int32*)p)</highlight></codeline>
<codeline lineno="264"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>UA_StatusCode_copy(p)<sp/>UA_Int32_copy((UA_Int32*)p)</highlight></codeline>
<codeline lineno="265"><highlight class="preprocessor"></highlight><highlight class="normal"><ref refid="ua__types_8h_1a0a7ca0fea7febe998b7ef18063513672" kindref="member">UA_TYPE_HANDLING_FUNCTIONS</ref>(<ref refid="structUA__QualifiedName" kindref="compound" tooltip="A name qualified by a namespace.">UA_QualifiedName</ref>)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><ref refid="ua__types_8h_1a0a7ca0fea7febe998b7ef18063513672" kindref="member">UA_TYPE_HANDLING_FUNCTIONS</ref>(<ref refid="structUA__LocalizedText" kindref="compound" tooltip="Human readable text with an optional locale identifier.">UA_LocalizedText</ref>)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><ref refid="ua__types_8h_1a0a7ca0fea7febe998b7ef18063513672" kindref="member">UA_TYPE_HANDLING_FUNCTIONS</ref>(<ref refid="structUA__ExtensionObject" kindref="compound" tooltip="A structure that contains an application specific data type that may not be recognized by the receive...">UA_ExtensionObject</ref>)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><ref refid="ua__types_8h_1a0a7ca0fea7febe998b7ef18063513672" kindref="member">UA_TYPE_HANDLING_FUNCTIONS</ref>(<ref refid="structUA__DataValue" kindref="compound" tooltip="A data value with an associated status code and timestamps.">UA_DataValue</ref>)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><ref refid="ua__types_8h_1a0a7ca0fea7febe998b7ef18063513672" kindref="member">UA_TYPE_HANDLING_FUNCTIONS</ref>(<ref refid="structUA__Variant" kindref="compound" tooltip="Variants store (arrays of) any data type. Either they provide a pointer to the data in memory...">UA_Variant</ref>)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><ref refid="ua__types_8h_1a0a7ca0fea7febe998b7ef18063513672" kindref="member">UA_TYPE_HANDLING_FUNCTIONS</ref>(<ref refid="structUA__DiagnosticInfo" kindref="compound" tooltip="A structure that contains detailed error and diagnostic information associated with a StatusCode...">UA_DiagnosticInfo</ref>)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="comment">/**********************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Custom<sp/>functions<sp/>for<sp/>the<sp/>builtin<sp/>datatypes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="comment">/**********************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>String<sp/>*/</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><ref refid="structUA__String" kindref="compound" tooltip="A sequence of Unicode characters.">UA_String</ref><sp/><ref refid="ua__config_8h_1aba46d236acc7541d0ee0a96f8c7f7907" kindref="member">UA_EXPORT</ref><sp/>UA_String_fromChars(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>const<sp/>src[]);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281" refid="ua__types_8h_1a110846759e839327492b0e01513ff43e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UA_STRING_NULL<sp/>(UA_String)<sp/>{-1,<sp/>(UA_Byte*)0<sp/>}</highlight></codeline>
<codeline lineno="282" refid="ua__types_8h_1acb5c69db9e50e7ced94255f8ba58c277" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>UA_STRING(CHARS)<sp/>(UA_String)<sp/>{strlen(CHARS),<sp/>(UA_Byte*)CHARS<sp/>}</highlight></codeline>
<codeline lineno="283" refid="ua__types_8h_1ac6f19951777419d520d469d5130acae4" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>UA_STRING_ALLOC(CHARS)<sp/>UA_String_fromChars(CHARS)</highlight></codeline>
<codeline lineno="284"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="286"><highlight class="normal">UA_Boolean<sp/><ref refid="ua__config_8h_1aba46d236acc7541d0ee0a96f8c7f7907" kindref="member">UA_EXPORT</ref><sp/><ref refid="ua__types_8h_1a9e8c810b5a6b8b68f9fdffff13e9eb77" kindref="member">UA_String_equal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structUA__String" kindref="compound" tooltip="A sequence of Unicode characters.">UA_String</ref><sp/>*string1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structUA__String" kindref="compound" tooltip="A sequence of Unicode characters.">UA_String</ref><sp/>*string2);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal">UA_StatusCode<sp/><ref refid="ua__config_8h_1aba46d236acc7541d0ee0a96f8c7f7907" kindref="member">UA_EXPORT</ref><sp/><ref refid="ua__types_8h_1a6132c83d992ede8b4fae8fde1170141e" kindref="member">UA_String_copyprintf</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fmt[],<sp/><ref refid="structUA__String" kindref="compound" tooltip="A sequence of Unicode characters.">UA_String</ref><sp/>*<ref refid="ua__nodes_8h_1af9c9a31dac911f494e549232de33f59f" kindref="member">dst</ref>,<sp/>...);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>DateTime<sp/>*/</highlight></codeline>
<codeline lineno="293"><highlight class="normal">UA_DateTime<sp/><ref refid="ua__config_8h_1aba46d236acc7541d0ee0a96f8c7f7907" kindref="member">UA_EXPORT</ref><sp/><ref refid="ua__types_8h_1ae56238574ba35e88e91f4c264c452284" kindref="member">UA_DateTime_now</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295" refid="structUA__DateTimeStruct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structUA__DateTimeStruct" kindref="compound">UA_DateTimeStruct</ref><sp/>{</highlight></codeline>
<codeline lineno="296" refid="structUA__DateTimeStruct_1a6a8a1be405ea52a34b1951d652109aa8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_Int16<sp/><ref refid="structUA__DateTimeStruct_1a6a8a1be405ea52a34b1951d652109aa8" kindref="member">nanoSec</ref>;</highlight></codeline>
<codeline lineno="297" refid="structUA__DateTimeStruct_1a41fe23c6ba57bd44cd7ffc78ad98bcdd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_Int16<sp/><ref refid="structUA__DateTimeStruct_1a41fe23c6ba57bd44cd7ffc78ad98bcdd" kindref="member">microSec</ref>;</highlight></codeline>
<codeline lineno="298" refid="structUA__DateTimeStruct_1ad6605c48fd3af869ec4eb8548f888128" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_Int16<sp/><ref refid="structUA__DateTimeStruct_1ad6605c48fd3af869ec4eb8548f888128" kindref="member">milliSec</ref>;</highlight></codeline>
<codeline lineno="299" refid="structUA__DateTimeStruct_1acf0662f6c3ffcdd60f4b631e66c30d36" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_Int16<sp/><ref refid="structUA__DateTimeStruct_1acf0662f6c3ffcdd60f4b631e66c30d36" kindref="member">sec</ref>;</highlight></codeline>
<codeline lineno="300" refid="structUA__DateTimeStruct_1a5d402079c59112fe03cbfda86d1f9bd8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_Int16<sp/><ref refid="structUA__DateTimeStruct_1a5d402079c59112fe03cbfda86d1f9bd8" kindref="member">min</ref>;</highlight></codeline>
<codeline lineno="301" refid="structUA__DateTimeStruct_1a1728d47b991d0ba906dd8cc1b2cb35c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_Int16<sp/><ref refid="structUA__DateTimeStruct_1a1728d47b991d0ba906dd8cc1b2cb35c8" kindref="member">hour</ref>;</highlight></codeline>
<codeline lineno="302" refid="structUA__DateTimeStruct_1a941e2ac55d610125af0f392b701ee6a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_Int16<sp/><ref refid="structUA__DateTimeStruct_1a941e2ac55d610125af0f392b701ee6a1" kindref="member">day</ref>;</highlight></codeline>
<codeline lineno="303" refid="structUA__DateTimeStruct_1a31edc2bd71c380b87f9fcfced39904b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_Int16<sp/><ref refid="structUA__DateTimeStruct_1a31edc2bd71c380b87f9fcfced39904b8" kindref="member">month</ref>;</highlight></codeline>
<codeline lineno="304" refid="structUA__DateTimeStruct_1a770b483a1e65dfb8c4992e1a79dc35ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_Int16<sp/><ref refid="structUA__DateTimeStruct_1a770b483a1e65dfb8c4992e1a79dc35ee" kindref="member">year</ref>;</highlight></codeline>
<codeline lineno="305"><highlight class="normal">}<sp/><ref refid="structUA__DateTimeStruct" kindref="compound">UA_DateTimeStruct</ref>;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><ref refid="structUA__DateTimeStruct" kindref="compound">UA_DateTimeStruct</ref><sp/><ref refid="ua__config_8h_1aba46d236acc7541d0ee0a96f8c7f7907" kindref="member">UA_EXPORT</ref><sp/><ref refid="ua__types_8h_1a6739b0fb771c8d7a640dd8e221434738" kindref="member">UA_DateTime_toStruct</ref>(UA_DateTime<sp/>time);</highlight></codeline>
<codeline lineno="308"><highlight class="normal">UA_StatusCode<sp/><ref refid="ua__config_8h_1aba46d236acc7541d0ee0a96f8c7f7907" kindref="member">UA_EXPORT</ref><sp/><ref refid="ua__types_8h_1a99bbeebb3af26c6fc6a6e64169a051f9" kindref="member">UA_DateTime_toString</ref>(UA_DateTime<sp/>time,<sp/><ref refid="structUA__String" kindref="compound" tooltip="A sequence of Unicode characters.">UA_String</ref><sp/>*timeString);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Guid<sp/>*/</highlight></codeline>
<codeline lineno="312"><highlight class="normal">UA_Boolean<sp/><ref refid="ua__config_8h_1aba46d236acc7541d0ee0a96f8c7f7907" kindref="member">UA_EXPORT</ref><sp/><ref refid="ua__types_8h_1aeadb12f99531c38134d0ad28a8dd3186" kindref="member">UA_Guid_equal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structUA__Guid" kindref="compound" tooltip="A 16 byte value that can be used as a globally unique identifier.">UA_Guid</ref><sp/>*g1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structUA__Guid" kindref="compound" tooltip="A 16 byte value that can be used as a globally unique identifier.">UA_Guid</ref><sp/>*g2);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><ref refid="structUA__Guid" kindref="compound" tooltip="A 16 byte value that can be used as a globally unique identifier.">UA_Guid</ref><sp/><ref refid="ua__config_8h_1aba46d236acc7541d0ee0a96f8c7f7907" kindref="member">UA_EXPORT</ref><sp/><ref refid="ua__types_8h_1aaccebbff7b43172a41d84ec0c4fb0d50" kindref="member">UA_Guid_random</ref>(UA_UInt32<sp/>*seed);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ByteString<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318" refid="ua__types_8h_1ad966a75e1f6f09b2f7e2a6cab0ab802b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UA_BYTESTRING_NULL<sp/>(UA_ByteString)<sp/>{-1,<sp/>(UA_Byte*)0<sp/>}</highlight></codeline>
<codeline lineno="319" refid="ua__types_8h_1a9c3b3c5b704f6e9a1baeeb3b7341a58b" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>UA_ByteString_equal(string1,<sp/>string2)<sp/>\</highlight></codeline>
<codeline lineno="320"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>UA_String_equal((const<sp/>UA_String*)<sp/>string1,<sp/>(const<sp/>UA_String*)string2)</highlight></codeline>
<codeline lineno="321"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="323"><highlight class="normal">UA_StatusCode<sp/><ref refid="ua__config_8h_1aba46d236acc7541d0ee0a96f8c7f7907" kindref="member">UA_EXPORT</ref><sp/><ref refid="ua__types_8h_1adaec8dbc6d61a26c5dd135dfa1aa28f0" kindref="member">UA_ByteString_newMembers</ref>(UA_ByteString<sp/>*p,<sp/>UA_Int32<sp/>length);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>NodeId<sp/>*/</highlight></codeline>
<codeline lineno="327"><highlight class="normal">UA_Boolean<sp/><ref refid="ua__config_8h_1aba46d236acc7541d0ee0a96f8c7f7907" kindref="member">UA_EXPORT</ref><sp/><ref refid="ua__types_8h_1a8542e9240038621026c3ddce368cd317" kindref="member">UA_NodeId_equal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structUA__NodeId" kindref="compound" tooltip="An identifier for a node in the address space of an OPC UA Server.">UA_NodeId</ref><sp/>*n1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structUA__NodeId" kindref="compound" tooltip="An identifier for a node in the address space of an OPC UA Server.">UA_NodeId</ref><sp/>*n2);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal">UA_Boolean<sp/><ref refid="ua__config_8h_1aba46d236acc7541d0ee0a96f8c7f7907" kindref="member">UA_EXPORT</ref><sp/><ref refid="ua__types_8h_1a5d5eb7e9d541654965cdd0e43efadb73" kindref="member">UA_NodeId_isNull</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structUA__NodeId" kindref="compound" tooltip="An identifier for a node in the address space of an OPC UA Server.">UA_NodeId</ref><sp/>*p);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><ref refid="structUA__NodeId" kindref="compound" tooltip="An identifier for a node in the address space of an OPC UA Server.">UA_NodeId</ref><sp/><ref refid="ua__config_8h_1aba46d236acc7541d0ee0a96f8c7f7907" kindref="member">UA_EXPORT</ref><sp/><ref refid="ua__types_8h_1a2549f659a339931bcd18696b4483b61c" kindref="member">UA_NodeId_fromInteger</ref>(UA_UInt16<sp/>nsIndex,<sp/>UA_Int32<sp/>identifier);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><ref refid="structUA__NodeId" kindref="compound" tooltip="An identifier for a node in the address space of an OPC UA Server.">UA_NodeId</ref><sp/><ref refid="ua__config_8h_1aba46d236acc7541d0ee0a96f8c7f7907" kindref="member">UA_EXPORT</ref><sp/><ref refid="ua__types_8h_1a4d87479d9a6801b1a4556aabd3dcbe05" kindref="member">UA_NodeId_fromCharString</ref>(UA_UInt16<sp/>nsIndex,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>identifier[]);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><ref refid="structUA__NodeId" kindref="compound" tooltip="An identifier for a node in the address space of an OPC UA Server.">UA_NodeId</ref><sp/><ref refid="ua__config_8h_1aba46d236acc7541d0ee0a96f8c7f7907" kindref="member">UA_EXPORT</ref><sp/><ref refid="ua__types_8h_1a40a4704eb49dc9966ecd45110e1521a5" kindref="member">UA_NodeId_fromCharStringCopy</ref>(UA_UInt16<sp/>nsIndex,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>identifier[]);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><ref refid="structUA__NodeId" kindref="compound" tooltip="An identifier for a node in the address space of an OPC UA Server.">UA_NodeId</ref><sp/><ref refid="ua__config_8h_1aba46d236acc7541d0ee0a96f8c7f7907" kindref="member">UA_EXPORT</ref><sp/><ref refid="ua__types_8h_1a0fec60f23b77729f1991610a9ea963b4" kindref="member">UA_NodeId_fromString</ref>(UA_UInt16<sp/>nsIndex,<sp/><ref refid="structUA__String" kindref="compound" tooltip="A sequence of Unicode characters.">UA_String</ref><sp/>identifier);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><ref refid="structUA__NodeId" kindref="compound" tooltip="An identifier for a node in the address space of an OPC UA Server.">UA_NodeId</ref><sp/><ref refid="ua__config_8h_1aba46d236acc7541d0ee0a96f8c7f7907" kindref="member">UA_EXPORT</ref><sp/><ref refid="ua__types_8h_1acddef7dc7ddd76136998911291e284ce" kindref="member">UA_NodeId_fromStringCopy</ref>(UA_UInt16<sp/>nsIndex,<sp/><ref refid="structUA__String" kindref="compound" tooltip="A sequence of Unicode characters.">UA_String</ref><sp/>identifier);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><ref refid="structUA__NodeId" kindref="compound" tooltip="An identifier for a node in the address space of an OPC UA Server.">UA_NodeId</ref><sp/><ref refid="ua__config_8h_1aba46d236acc7541d0ee0a96f8c7f7907" kindref="member">UA_EXPORT</ref><sp/><ref refid="ua__types_8h_1a689be6d365091aa44238fbbf499aed93" kindref="member">UA_NodeId_fromGuid</ref>(UA_UInt16<sp/>nsIndex,<sp/><ref refid="structUA__Guid" kindref="compound" tooltip="A 16 byte value that can be used as a globally unique identifier.">UA_Guid</ref><sp/>identifier);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><ref refid="structUA__NodeId" kindref="compound" tooltip="An identifier for a node in the address space of an OPC UA Server.">UA_NodeId</ref><sp/><ref refid="ua__config_8h_1aba46d236acc7541d0ee0a96f8c7f7907" kindref="member">UA_EXPORT</ref><sp/><ref refid="ua__types_8h_1afd53aa38e9f3ab15c4b4c12edf97dbda" kindref="member">UA_NodeId_fromCharByteString</ref>(UA_UInt16<sp/>nsIndex,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>identifier[]);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><ref refid="structUA__NodeId" kindref="compound" tooltip="An identifier for a node in the address space of an OPC UA Server.">UA_NodeId</ref><sp/><ref refid="ua__config_8h_1aba46d236acc7541d0ee0a96f8c7f7907" kindref="member">UA_EXPORT</ref><sp/><ref refid="ua__types_8h_1a2bf25ddcb646807abdda0c128c4d9008" kindref="member">UA_NodeId_fromCharByteStringCopy</ref>(UA_UInt16<sp/>nsIndex,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>identifier[]);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><ref refid="structUA__NodeId" kindref="compound" tooltip="An identifier for a node in the address space of an OPC UA Server.">UA_NodeId</ref><sp/><ref refid="ua__config_8h_1aba46d236acc7541d0ee0a96f8c7f7907" kindref="member">UA_EXPORT</ref><sp/><ref refid="ua__types_8h_1a759bc64515c196d68fed0b394091225c" kindref="member">UA_NodeId_fromByteString</ref>(UA_UInt16<sp/>nsIndex,<sp/>UA_ByteString<sp/>identifier);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><ref refid="structUA__NodeId" kindref="compound" tooltip="An identifier for a node in the address space of an OPC UA Server.">UA_NodeId</ref><sp/><ref refid="ua__config_8h_1aba46d236acc7541d0ee0a96f8c7f7907" kindref="member">UA_EXPORT</ref><sp/><ref refid="ua__types_8h_1a0d3425e18851db06806ac84cfc66062b" kindref="member">UA_NodeId_fromByteStringCopy</ref>(UA_UInt16<sp/>nsIndex,<sp/>UA_ByteString<sp/>identifier);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343" refid="ua__types_8h_1a90a8072ac70174fbf8ae58fbd1a32076" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UA_NODEID_NUMERIC(NSID,<sp/>NUMERICID)<sp/>UA_NodeId_fromInteger(NSID,<sp/>NUMERICID)</highlight></codeline>
<codeline lineno="344" refid="ua__types_8h_1a41e878b48c26093fe178649d7a86f988" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>UA_NODEID_STRING(NSID,<sp/>CHARS)<sp/>UA_NodeId_fromCharString(NSID,<sp/>CHARS)</highlight></codeline>
<codeline lineno="345" refid="ua__types_8h_1a5d8065ecd4f2493d286ad007ceba676c" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>UA_NODEID_STRING_ALLOC(NSID,<sp/>CHARS)<sp/>UA_NodeId_fromCharStringCopy(NSID,<sp/>CHARS)</highlight></codeline>
<codeline lineno="346" refid="ua__types_8h_1aca5ae65c00b9bd3ca18efc92c9bf6552" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>UA_NODEID_GUID(NSID,<sp/>GUID)<sp/>UA_NodeId_fromGuid(NSID,<sp/>GUID)</highlight></codeline>
<codeline lineno="347" refid="ua__types_8h_1ac4e7cfde9e6f1b5374943575fb9472ca" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>UA_NODEID_BYTESTRING(NSID,<sp/>CHARS)<sp/>UA_NodeId_fromCharByteString(NSID,<sp/>CHARS)</highlight></codeline>
<codeline lineno="348" refid="ua__types_8h_1a16579d3a5b875d09e66edbc98ee5bf17" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>UA_NODEID_BYTESTRING_ALLOC(NSID,<sp/>CHARS)<sp/>UA_NodeId_fromCharStringCopy(NSID,<sp/>CHARS)</highlight></codeline>
<codeline lineno="349" refid="ua__types_8h_1a74e534f9817ed93e73ee3566a0d62a82" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>UA_NODEID_NULL<sp/>UA_NODEID_NUMERIC(0,0)</highlight></codeline>
<codeline lineno="350"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ExpandedNodeId<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal">UA_Boolean<sp/><ref refid="ua__config_8h_1aba46d236acc7541d0ee0a96f8c7f7907" kindref="member">UA_EXPORT</ref><sp/><ref refid="ua__types_8h_1a9f72c8cb30be5d7e5d99b28c68ae2a47" kindref="member">UA_ExpandedNodeId_isNull</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structUA__ExpandedNodeId" kindref="compound" tooltip="A NodeId that allows the namespace URI to be specified instead of an index.">UA_ExpandedNodeId</ref><sp/>*p);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354" refid="ua__types_8h_1aa089267a570b610525a3443c0ff20299" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UA_EXPANDEDNODEID_NUMERIC(NSID,<sp/>NUMERICID)<sp/>(UA_ExpandedNodeId)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="355"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.nodeId<sp/>=<sp/>{.namespaceIndex<sp/>=<sp/>NSID,<sp/>.identifierType<sp/>=<sp/>UA_NODEIDTYPE_NUMERIC,<sp/>\</highlight></codeline>
<codeline lineno="356"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.identifier.numeric<sp/>=<sp/>NUMERICID<sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="357"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.serverIndex<sp/>=<sp/>0,<sp/>.namespaceUri<sp/>=<sp/>{.data<sp/>=<sp/>(UA_Byte*)0,<sp/>.length<sp/>=<sp/>-1}<sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>QualifiedName<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360" refid="ua__types_8h_1a4ca103cfcf67d30563ca5f28574e601c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UA_QUALIFIEDNAME(NSID,<sp/>CHARS)<sp/>(const<sp/>UA_QualifiedName)<sp/>{<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="361"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.namespaceIndex<sp/>=<sp/>NSID,<sp/>.name<sp/>=<sp/>UA_STRING(CHARS)<sp/>}</highlight></codeline>
<codeline lineno="362" refid="ua__types_8h_1aaee901cea3ebb2b84774cbfc3e6a340e" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>UA_QUALIFIEDNAME_ALLOC(NSID,<sp/>CHARS)<sp/>(UA_QualifiedName)<sp/>{<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="363"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.namespaceIndex<sp/>=<sp/>NSID,<sp/>.name<sp/>=<sp/>UA_STRING_ALLOC(CHARS)<sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>LocalizedText<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366" refid="ua__types_8h_1a2ff49f406a45ec697a4469282a934581" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UA_LOCALIZEDTEXT(LOCALE,<sp/>TEXT)<sp/>(const<sp/>UA_LocalizedText)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="367"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.locale<sp/>=<sp/>UA_STRING(LOCALE),<sp/>.text<sp/>=<sp/>UA_STRING(TEXT)<sp/>}</highlight></codeline>
<codeline lineno="368" refid="ua__types_8h_1a40e070f7fee57a52599aee8876b99183" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>UA_LOCALIZEDTEXT_ALLOC(LOCALE,<sp/>TEXT)<sp/>(UA_LocalizedText)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="369"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.locale<sp/>=<sp/>UA_STRING_ALLOC(LOCALE),<sp/>.text<sp/>=<sp/>UA_STRING_ALLOC(TEXT)<sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Variant<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal">UA_Boolean<sp/><ref refid="ua__config_8h_1aba46d236acc7541d0ee0a96f8c7f7907" kindref="member">UA_EXPORT</ref><sp/><ref refid="ua__types_8h_1ab4de7af8c39fdc3f62bf36099da09328" kindref="member">UA_Variant_isScalar</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structUA__Variant" kindref="compound" tooltip="Variants store (arrays of) any data type. Either they provide a pointer to the data in memory...">UA_Variant</ref><sp/>*v);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="391"><highlight class="normal">UA_StatusCode<sp/><ref refid="ua__config_8h_1aba46d236acc7541d0ee0a96f8c7f7907" kindref="member">UA_EXPORT</ref><sp/><ref refid="ua__types_8h_1a301e2f6fa408ee279d5e4477082f7c4b" kindref="member">UA_Variant_setScalar</ref>(<ref refid="structUA__Variant" kindref="compound" tooltip="Variants store (arrays of) any data type. Either they provide a pointer to the data in memory...">UA_Variant</ref><sp/>*v,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structUA__DataType" kindref="compound">UA_DataType</ref><sp/>*type);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal">UA_StatusCode<sp/><ref refid="ua__config_8h_1aba46d236acc7541d0ee0a96f8c7f7907" kindref="member">UA_EXPORT</ref><sp/><ref refid="ua__types_8h_1ab40084675fc8efaa4af30a5c6a1399e4" kindref="member">UA_Variant_setScalarCopy</ref>(<ref refid="structUA__Variant" kindref="compound" tooltip="Variants store (arrays of) any data type. Either they provide a pointer to the data in memory...">UA_Variant</ref><sp/>*v,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structUA__DataType" kindref="compound">UA_DataType</ref><sp/>*type);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal">UA_StatusCode<sp/><ref refid="ua__config_8h_1aba46d236acc7541d0ee0a96f8c7f7907" kindref="member">UA_EXPORT</ref><sp/><ref refid="ua__types_8h_1a40bd26c46cc0fe08959b4d221b239e3b" kindref="member">UA_Variant_setArray</ref>(<ref refid="structUA__Variant" kindref="compound" tooltip="Variants store (arrays of) any data type. Either they provide a pointer to the data in memory...">UA_Variant</ref><sp/>*v,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*array,<sp/>UA_Int32<sp/>elements,</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structUA__DataType" kindref="compound">UA_DataType</ref><sp/>*type);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal">UA_StatusCode<sp/><ref refid="ua__config_8h_1aba46d236acc7541d0ee0a96f8c7f7907" kindref="member">UA_EXPORT</ref><sp/><ref refid="ua__types_8h_1a71fe7d8eb2596d4e74614e994626120c" kindref="member">UA_Variant_setArrayCopy</ref>(<ref refid="structUA__Variant" kindref="compound" tooltip="Variants store (arrays of) any data type. Either they provide a pointer to the data in memory...">UA_Variant</ref><sp/>*v,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*array,<sp/>UA_Int32<sp/>elements,</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structUA__DataType" kindref="compound">UA_DataType</ref><sp/>*type);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="433" refid="structUA__NumericRange" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="434" refid="structUA__NumericRange_1abcc3f56907714153dd13abed1c65b50d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_Int32<sp/><ref refid="structUA__NumericRange_1abcc3f56907714153dd13abed1c65b50d" kindref="member">dimensionsSize</ref>;</highlight></codeline>
<codeline lineno="435" refid="structUA__NumericRange_1_1UA__NumericRangeDimension" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structUA__NumericRange_1_1UA__NumericRangeDimension" kindref="compound">UA_NumericRangeDimension</ref><sp/>{</highlight></codeline>
<codeline lineno="436" refid="structUA__NumericRange_1_1UA__NumericRangeDimension_1a1c0dada8df68eced85f52f45a3cdec42" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UA_UInt32<sp/><ref refid="structUA__NumericRange_1_1UA__NumericRangeDimension_1a1c0dada8df68eced85f52f45a3cdec42" kindref="member">min</ref>;</highlight></codeline>
<codeline lineno="437" refid="structUA__NumericRange_1_1UA__NumericRangeDimension_1aa42bbf2eef91b913327f36d4127b33f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UA_UInt32<sp/><ref refid="structUA__NumericRange_1_1UA__NumericRangeDimension_1aa42bbf2eef91b913327f36d4127b33f4" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>*dimensions;</highlight></codeline>
<codeline lineno="439"><highlight class="normal">}<sp/><ref refid="structUA__NumericRange" kindref="compound" tooltip="NumericRanges are used select a subset in a (multidimensional) variant array. NumericRange has no off...">UA_NumericRange</ref>;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal">UA_StatusCode<sp/><ref refid="ua__config_8h_1aba46d236acc7541d0ee0a96f8c7f7907" kindref="member">UA_EXPORT</ref><sp/><ref refid="ua__types_8h_1a71fa54467a35ede8e274ce4a2e7af61f" kindref="member">UA_Variant_copyRange</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structUA__Variant" kindref="compound" tooltip="Variants store (arrays of) any data type. Either they provide a pointer to the data in memory...">UA_Variant</ref><sp/>*src,<sp/><ref refid="structUA__Variant" kindref="compound" tooltip="Variants store (arrays of) any data type. Either they provide a pointer to the data in memory...">UA_Variant</ref><sp/>*<ref refid="ua__nodes_8h_1af9c9a31dac911f494e549232de33f59f" kindref="member">dst</ref>,<sp/><ref refid="structUA__NumericRange" kindref="compound" tooltip="NumericRanges are used select a subset in a (multidimensional) variant array. NumericRange has no off...">UA_NumericRange</ref><sp/>range);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal">UA_StatusCode<sp/><ref refid="ua__config_8h_1aba46d236acc7541d0ee0a96f8c7f7907" kindref="member">UA_EXPORT</ref><sp/><ref refid="ua__types_8h_1a0ac19fa4bf04dde43de5edd6c2a4f57d" kindref="member">UA_Variant_setRange</ref>(<ref refid="structUA__Variant" kindref="compound" tooltip="Variants store (arrays of) any data type. Either they provide a pointer to the data in memory...">UA_Variant</ref><sp/>*v,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dataArray,<sp/>UA_Int32<sp/>dataArraySize,</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structUA__NumericRange" kindref="compound" tooltip="NumericRanges are used select a subset in a (multidimensional) variant array. NumericRange has no off...">UA_NumericRange</ref><sp/>range);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal">UA_StatusCode<sp/><ref refid="ua__config_8h_1aba46d236acc7541d0ee0a96f8c7f7907" kindref="member">UA_EXPORT</ref><sp/><ref refid="ua__types_8h_1ad69502f7f1cc3cb9c6349fe5af750510" kindref="member">UA_Variant_setRangeCopy</ref>(<ref refid="structUA__Variant" kindref="compound" tooltip="Variants store (arrays of) any data type. Either they provide a pointer to the data in memory...">UA_Variant</ref><sp/>*v,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dataArray,<sp/>UA_Int32<sp/>dataArraySize,</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structUA__NumericRange" kindref="compound" tooltip="NumericRanges are used select a subset in a (multidimensional) variant array. NumericRange has no off...">UA_NumericRange</ref><sp/>range);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="comment">/****************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Structured<sp/>Type<sp/>Handling<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="comment">/****************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482" refid="ua__types_8h_1abf07f23cfc9cb99023ab368334bf7cbc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UA_MAX_TYPE_MEMBERS<sp/>13<sp/>//<sp/>Maximum<sp/>number<sp/>of<sp/>members<sp/>per<sp/>complex<sp/>type</highlight></codeline>
<codeline lineno="483"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_WIN32</highlight></codeline>
<codeline lineno="485" refid="ua__types_8h_1a0ee43f8337d256e0c0d972e805f564dc" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>define<sp/>UA_BITFIELD(SIZE)<sp/>:<sp/>SIZE</highlight></codeline>
<codeline lineno="486"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="487"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>define<sp/>UA_BITFIELD(SIZE)</highlight></codeline>
<codeline lineno="488"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="489"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490" refid="ua__types_8h_1a1b1a27924e028ac4d94160187deadd4b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UA_IS_BUILTIN(ID)<sp/>(ID<sp/>&lt;=<sp/>UA_TYPES_DIAGNOSTICINFO)</highlight></codeline>
<codeline lineno="491"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492" refid="structUA__DataTypeMember" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="493" refid="structUA__DataTypeMember_1ae0bccb0a9d491c727095cbbd6c521f30" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_UInt16<sp/>memberTypeIndex<sp/><ref refid="ua__types_8h_1a0ee43f8337d256e0c0d972e805f564dc" kindref="member">UA_BITFIELD</ref>(9);<sp/></highlight></codeline>
<codeline lineno="494" refid="structUA__DataTypeMember_1a7758e2322974c1b4be61d54f333348f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_Boolean<sp/>namespaceZero<sp/><ref refid="ua__types_8h_1a0ee43f8337d256e0c0d972e805f564dc" kindref="member">UA_BITFIELD</ref>(1);<sp/></highlight></codeline>
<codeline lineno="498" refid="structUA__DataTypeMember_1ae4d8a90252a84c9fc3cad424c46a29b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_Byte<sp/>padding<sp/><ref refid="ua__types_8h_1a0ee43f8337d256e0c0d972e805f564dc" kindref="member">UA_BITFIELD</ref>(5);<sp/></highlight></codeline>
<codeline lineno="502" refid="structUA__DataTypeMember_1a9bef4a4ae1cf183038246ab0af09c470" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_Boolean<sp/>isArray<sp/><ref refid="ua__types_8h_1a0ee43f8337d256e0c0d972e805f564dc" kindref="member">UA_BITFIELD</ref>(1);<sp/></highlight></codeline>
<codeline lineno="503"><highlight class="normal">}<sp/><ref refid="structUA__DataTypeMember" kindref="compound">UA_DataTypeMember</ref>;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="505" refid="structUA__DataType" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structUA__DataType" kindref="compound">UA_DataType</ref><sp/>{</highlight></codeline>
<codeline lineno="506" refid="structUA__DataType_1a600c88a57a9e371cfe1da19f273f441b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structUA__NodeId" kindref="compound" tooltip="An identifier for a node in the address space of an OPC UA Server.">UA_NodeId</ref><sp/><ref refid="structUA__DataType_1a600c88a57a9e371cfe1da19f273f441b" kindref="member" tooltip="The nodeid of the type.">typeId</ref>;<sp/></highlight></codeline>
<codeline lineno="507" refid="structUA__DataType_1a561989105a8435ca18f953e88c309caf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ptrdiff_t<sp/><ref refid="structUA__DataType_1a561989105a8435ca18f953e88c309caf" kindref="member" tooltip="Size of the struct in memory.">memSize</ref><sp/><ref refid="ua__types_8h_1a0ee43f8337d256e0c0d972e805f564dc" kindref="member">UA_BITFIELD</ref>(16);<sp/></highlight></codeline>
<codeline lineno="508" refid="structUA__DataType_1aa8c55e9c2f92f0130e8fb98a61ce437e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_UInt16<sp/><ref refid="structUA__DataType_1aa8c55e9c2f92f0130e8fb98a61ce437e" kindref="member" tooltip="Index of the type in the datatypetable.">typeIndex</ref><sp/><ref refid="ua__types_8h_1a0ee43f8337d256e0c0d972e805f564dc" kindref="member">UA_BITFIELD</ref>(13);<sp/></highlight></codeline>
<codeline lineno="509" refid="structUA__DataType_1a01e58b0bf4d6a67e586dd920f6130d0f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_Boolean<sp/><ref refid="structUA__DataType_1a01e58b0bf4d6a67e586dd920f6130d0f" kindref="member" tooltip="The type is defined in namespace zero.">namespaceZero</ref><sp/><ref refid="ua__types_8h_1a0ee43f8337d256e0c0d972e805f564dc" kindref="member">UA_BITFIELD</ref>(1);<sp/></highlight></codeline>
<codeline lineno="510" refid="structUA__DataType_1a7561cdedee2c6358a3c6b42a2f5b3a47" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_Boolean<sp/><ref refid="structUA__DataType_1a7561cdedee2c6358a3c6b42a2f5b3a47" kindref="member" tooltip="The type (and its members) contains no pointers.">fixedSize</ref><sp/><ref refid="ua__types_8h_1a0ee43f8337d256e0c0d972e805f564dc" kindref="member">UA_BITFIELD</ref>(1);<sp/></highlight></codeline>
<codeline lineno="511" refid="structUA__DataType_1a45510571d1b1befd0f54184334fe9fb1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_Boolean<sp/><ref refid="structUA__DataType_1a45510571d1b1befd0f54184334fe9fb1" kindref="member" tooltip="Can the type be copied directly off the stream?">zeroCopyable</ref><sp/><ref refid="ua__types_8h_1a0ee43f8337d256e0c0d972e805f564dc" kindref="member">UA_BITFIELD</ref>(1);<sp/></highlight></codeline>
<codeline lineno="512" refid="structUA__DataType_1a35f66b2677f876dfe572975ad3ed388a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>UA_Byte<sp/><ref refid="structUA__DataType_1a35f66b2677f876dfe572975ad3ed388a" kindref="member" tooltip="How many members does the type have?">membersSize</ref>;<sp/></highlight></codeline>
<codeline lineno="513" refid="structUA__DataType_1acbfa042ab1b57ddc2bd9548d6d859bfa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structUA__DataTypeMember" kindref="compound">UA_DataTypeMember</ref><sp/><ref refid="structUA__DataType_1acbfa042ab1b57ddc2bd9548d6d859bfa" kindref="member">members</ref>[<ref refid="ua__types_8h_1abf07f23cfc9cb99023ab368334bf7cbc" kindref="member">UA_MAX_TYPE_MEMBERS</ref>];</highlight></codeline>
<codeline lineno="514"><highlight class="normal">};</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ua__config_8h_1aba46d236acc7541d0ee0a96f8c7f7907" kindref="member">UA_EXPORT</ref><sp/>*<sp/><ref refid="ua__types_8h_1a114cbec9be7be24fd20db9e81e8469d6" kindref="member">UA_new</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structUA__DataType" kindref="compound">UA_DataType</ref><sp/>*<ref refid="group__encoding__binary_1ga41f31d27491773df976949fa436e4457" kindref="member">dataType</ref>);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ua__config_8h_1aba46d236acc7541d0ee0a96f8c7f7907" kindref="member">UA_EXPORT</ref><sp/><ref refid="ua__types_8h_1a32edef428c3e485215422554b537e07d" kindref="member">UA_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structUA__DataType" kindref="compound">UA_DataType</ref><sp/>*<ref refid="group__encoding__binary_1ga41f31d27491773df976949fa436e4457" kindref="member">dataType</ref>);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal">UA_StatusCode<sp/><ref refid="ua__config_8h_1aba46d236acc7541d0ee0a96f8c7f7907" kindref="member">UA_EXPORT</ref><sp/><ref refid="ua__types_8h_1a2f381a17969d7d573ae0e747d024bd94" kindref="member">UA_copy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="ua__nodes_8h_1af9c9a31dac911f494e549232de33f59f" kindref="member">dst</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structUA__DataType" kindref="compound">UA_DataType</ref><sp/>*<ref refid="group__encoding__binary_1ga41f31d27491773df976949fa436e4457" kindref="member">dataType</ref>);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ua__config_8h_1aba46d236acc7541d0ee0a96f8c7f7907" kindref="member">UA_EXPORT</ref><sp/><ref refid="ua__types_8h_1a05749c825b162f334194b814e881da0e" kindref="member">UA_deleteMembers</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structUA__DataType" kindref="compound">UA_DataType</ref><sp/>*<ref refid="group__encoding__binary_1ga41f31d27491773df976949fa436e4457" kindref="member">dataType</ref>);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ua__config_8h_1aba46d236acc7541d0ee0a96f8c7f7907" kindref="member">UA_EXPORT</ref><sp/><ref refid="ua__types_8h_1a4ac9864c5dc0736155367a2e93dbec9a" kindref="member">UA_deleteMembersUntil</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structUA__DataType" kindref="compound">UA_DataType</ref><sp/>*<ref refid="group__encoding__binary_1ga41f31d27491773df976949fa436e4457" kindref="member">dataType</ref>,<sp/>UA_Int32<sp/>lastMember);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ua__config_8h_1aba46d236acc7541d0ee0a96f8c7f7907" kindref="member">UA_EXPORT</ref><sp/><ref refid="ua__types_8h_1af8bc59702423892c96ddb163dfafef11" kindref="member">UA_delete</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structUA__DataType" kindref="compound">UA_DataType</ref><sp/>*<ref refid="group__encoding__binary_1ga41f31d27491773df976949fa436e4457" kindref="member">dataType</ref>);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="comment">/********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Array<sp/>operations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="comment">/********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567" refid="ua__types_8h_1a40af4217190d59d7145e58a278f9f87d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_ARRAY_SIZE<sp/>104857600<sp/>//<sp/>arrays<sp/>must<sp/>be<sp/>smaller<sp/>than<sp/>100MB</highlight></codeline>
<codeline lineno="568"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="576"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ua__config_8h_1aba46d236acc7541d0ee0a96f8c7f7907" kindref="member">UA_EXPORT</ref><sp/>*<sp/><ref refid="ua__types_8h_1a146200bf9ce7202a7f22c24cb3198d27" kindref="member">UA_Array_new</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structUA__DataType" kindref="compound">UA_DataType</ref><sp/>*<ref refid="group__encoding__binary_1ga41f31d27491773df976949fa436e4457" kindref="member">dataType</ref>,<sp/>UA_Int32<sp/>elements);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal">UA_StatusCode<sp/><ref refid="ua__config_8h_1aba46d236acc7541d0ee0a96f8c7f7907" kindref="member">UA_EXPORT</ref><sp/><ref refid="ua__types_8h_1a35f016f4ee2f2788f23895123b77cc5f" kindref="member">UA_Array_copy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**<ref refid="ua__nodes_8h_1af9c9a31dac911f494e549232de33f59f" kindref="member">dst</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structUA__DataType" kindref="compound">UA_DataType</ref><sp/>*<ref refid="group__encoding__binary_1ga41f31d27491773df976949fa436e4457" kindref="member">dataType</ref>,<sp/>UA_Int32<sp/>elements);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ua__config_8h_1aba46d236acc7541d0ee0a96f8c7f7907" kindref="member">UA_EXPORT</ref><sp/><ref refid="ua__types_8h_1a7f8680dd39dfa03e13c02d580115c267" kindref="member">UA_Array_delete</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structUA__DataType" kindref="compound">UA_DataType</ref><sp/>*<ref refid="group__encoding__binary_1ga41f31d27491773df976949fa436e4457" kindref="member">dataType</ref>,<sp/>UA_Int32<sp/>elements);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>These<sp/>are<sp/>not<sp/>generated<sp/>from<sp/>XML.<sp/>Server<sp/>*and*<sp/>client<sp/>need<sp/>them.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599" refid="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="600" refid="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a010f97a4da8e68bf96818c00b26efd49" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a010f97a4da8e68bf96818c00b26efd49" kindref="member">UA_ATTRIBUTEID_NODEID</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="601" refid="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2af235d5bd1b6c5e3525ab99f355d0b7c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2af235d5bd1b6c5e3525ab99f355d0b7c2" kindref="member">UA_ATTRIBUTEID_NODECLASS</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="602" refid="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a7c350a488cbda39a1cebfa0800aa5cde" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a7c350a488cbda39a1cebfa0800aa5cde" kindref="member">UA_ATTRIBUTEID_BROWSENAME</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="603" refid="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2ac82fa4c8a2d2069937551433e20b82b7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2ac82fa4c8a2d2069937551433e20b82b7" kindref="member">UA_ATTRIBUTEID_DISPLAYNAME</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="604" refid="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a3c9c7e4a817b780cf31eef5435f74393" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a3c9c7e4a817b780cf31eef5435f74393" kindref="member">UA_ATTRIBUTEID_DESCRIPTION</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>5,</highlight></codeline>
<codeline lineno="605" refid="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a63d9968c1c1d30e4d3ec22c9a3f40cf2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a63d9968c1c1d30e4d3ec22c9a3f40cf2" kindref="member">UA_ATTRIBUTEID_WRITEMASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>6,</highlight></codeline>
<codeline lineno="606" refid="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a3a70213d133879a9bad0e61bad772c10" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a3a70213d133879a9bad0e61bad772c10" kindref="member">UA_ATTRIBUTEID_USERWRITEMASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>7,</highlight></codeline>
<codeline lineno="607" refid="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a20e07e43746725d089cd14178a79c854" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a20e07e43746725d089cd14178a79c854" kindref="member">UA_ATTRIBUTEID_ISABSTRACT</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>8,</highlight></codeline>
<codeline lineno="608" refid="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a211799bb708d215b4da0e85690111f0a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a211799bb708d215b4da0e85690111f0a" kindref="member">UA_ATTRIBUTEID_SYMMETRIC</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>9,</highlight></codeline>
<codeline lineno="609" refid="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a8673a4e8dc5748249120d439676d7c0b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a8673a4e8dc5748249120d439676d7c0b" kindref="member">UA_ATTRIBUTEID_INVERSENAME</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>10,</highlight></codeline>
<codeline lineno="610" refid="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a2ed187c989c9cbc7e9c8ca08cf827afc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a2ed187c989c9cbc7e9c8ca08cf827afc" kindref="member">UA_ATTRIBUTEID_CONTAINSNOLOOPS</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>11,</highlight></codeline>
<codeline lineno="611" refid="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2abe1ccbc339ee1befa6f4dd3ca77cefea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2abe1ccbc339ee1befa6f4dd3ca77cefea" kindref="member">UA_ATTRIBUTEID_EVENTNOTIFIER</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>12,</highlight></codeline>
<codeline lineno="612" refid="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a659151d5abe28a5c38051214698aac70" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a659151d5abe28a5c38051214698aac70" kindref="member">UA_ATTRIBUTEID_VALUE</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>13,</highlight></codeline>
<codeline lineno="613" refid="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a849c5cad2807f039a50f36644327326f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a849c5cad2807f039a50f36644327326f" kindref="member">UA_ATTRIBUTEID_DATATYPE</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>14,</highlight></codeline>
<codeline lineno="614" refid="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a039ca1669304b63bbc81214ef69e9d8a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a039ca1669304b63bbc81214ef69e9d8a" kindref="member">UA_ATTRIBUTEID_VALUERANK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>15,</highlight></codeline>
<codeline lineno="615" refid="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a6a14c4a2fd8f530469674af905379333" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a6a14c4a2fd8f530469674af905379333" kindref="member">UA_ATTRIBUTEID_ARRAYDIMENSIONS</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>16,</highlight></codeline>
<codeline lineno="616" refid="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a1bb098ba70c2d038733dd0a4c7a26b7d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a1bb098ba70c2d038733dd0a4c7a26b7d" kindref="member">UA_ATTRIBUTEID_ACCESSLEVEL</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>17,</highlight></codeline>
<codeline lineno="617" refid="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a8ab5259bdbd89082bb8f4737cb758732" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a8ab5259bdbd89082bb8f4737cb758732" kindref="member">UA_ATTRIBUTEID_USERACCESSLEVEL</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>18,</highlight></codeline>
<codeline lineno="618" refid="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a7f82c0c712946d59b409fcb9ae62858c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a7f82c0c712946d59b409fcb9ae62858c" kindref="member">UA_ATTRIBUTEID_MINIMUMSAMPLINGINTERVAL</ref><sp/>=<sp/>19,</highlight></codeline>
<codeline lineno="619" refid="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a2192861c89869139ba6bc50763e17c95" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a2192861c89869139ba6bc50763e17c95" kindref="member">UA_ATTRIBUTEID_HISTORIZING</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>20,</highlight></codeline>
<codeline lineno="620" refid="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a116dabcd654aa3a2665a6cf8b5b24838" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a116dabcd654aa3a2665a6cf8b5b24838" kindref="member">UA_ATTRIBUTEID_EXECUTABLE</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>21,</highlight></codeline>
<codeline lineno="621" refid="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a302544357ae8af7b96daf5cd984058d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2a302544357ae8af7b96daf5cd984058d3" kindref="member">UA_ATTRIBUTEID_USEREXECUTABLE</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>22</highlight></codeline>
<codeline lineno="622"><highlight class="normal">}<sp/><ref refid="ua__types_8h_1a4dc96c31672814d54f24409617bdbbe2" kindref="member">UA_AttributeId</ref>;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="625"><highlight class="preprocessor"></highlight><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>extern<sp/>&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="627"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>UA_TYPES_H_<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/acplt/open62541/include/ua_types.h"/>
  </compounddef>
</doxygen>
