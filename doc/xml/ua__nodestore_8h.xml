<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="ua__nodestore_8h" kind="file">
    <compoundname>ua_nodestore.h</compoundname>
    <includes local="yes">ua_types_generated.h</includes>
    <includes refid="ua__nodes_8h" local="yes">ua_nodes.h</includes>
    <includedby refid="ua__server__internal_8h" local="yes">/home/travis/build/acplt/open62541/src/server/ua_server_internal.h</includedby>
    <includedby refid="ua__subscription__manager_8h" local="yes">/home/travis/build/acplt/open62541/src/server/ua_subscription_manager.h</includedby>
    <incdepgraph>
      <node id="604">
        <label>stdbool.h</label>
      </node>
      <node id="616">
        <label>stdarg.h</label>
      </node>
      <node id="608">
        <label>ua_nodeids.h</label>
      </node>
      <node id="614">
        <label>assert.h</label>
      </node>
      <node id="611">
        <label>ua_types_encoding_binary.h</label>
        <link refid="ua__types__encoding__binary_8h"/>
        <childnode refid="602" relation="include">
        </childnode>
        <childnode refid="612" relation="include">
        </childnode>
      </node>
      <node id="599">
        <label>ua_nodes.h</label>
        <link refid="ua__nodes_8h"/>
        <childnode refid="600" relation="include">
        </childnode>
        <childnode refid="598" relation="include">
        </childnode>
        <childnode refid="611" relation="include">
        </childnode>
      </node>
      <node id="600">
        <label>ua_server.h</label>
        <link refid="ua__server_8h"/>
        <childnode refid="601" relation="include">
        </childnode>
        <childnode refid="602" relation="include">
        </childnode>
        <childnode refid="598" relation="include">
        </childnode>
        <childnode refid="608" relation="include">
        </childnode>
        <childnode refid="609" relation="include">
        </childnode>
        <childnode refid="610" relation="include">
        </childnode>
      </node>
      <node id="601">
        <label>ua_config.h</label>
        <link refid="ua__config_8h"/>
      </node>
      <node id="621">
        <label>queue.h</label>
      </node>
      <node id="603">
        <label>stdint.h</label>
      </node>
      <node id="613">
        <label>stdlib.h</label>
      </node>
      <node id="605">
        <label>stddef.h</label>
      </node>
      <node id="615">
        <label>alloca.h</label>
      </node>
      <node id="610">
        <label>ua_log.h</label>
        <link refid="ua__log_8h"/>
        <childnode refid="601" relation="include">
        </childnode>
      </node>
      <node id="606">
        <label>string.h</label>
      </node>
      <node id="612">
        <label>ua_util.h</label>
        <link refid="ua__util_8h"/>
        <childnode refid="601" relation="include">
        </childnode>
        <childnode refid="613" relation="include">
        </childnode>
        <childnode refid="606" relation="include">
        </childnode>
        <childnode refid="614" relation="include">
        </childnode>
        <childnode refid="615" relation="include">
        </childnode>
        <childnode refid="616" relation="include">
        </childnode>
        <childnode refid="617" relation="include">
        </childnode>
        <childnode refid="618" relation="include">
        </childnode>
        <childnode refid="619" relation="include">
        </childnode>
        <childnode refid="620" relation="include">
        </childnode>
        <childnode refid="621" relation="include">
        </childnode>
      </node>
      <node id="607">
        <label>ua_statuscodes.h</label>
        <link refid="ua__statuscodes_8h"/>
      </node>
      <node id="617">
        <label>time.h</label>
      </node>
      <node id="620">
        <label>sys/time.h</label>
      </node>
      <node id="609">
        <label>ua_connection.h</label>
        <link refid="ua__connection_8h"/>
        <childnode refid="602" relation="include">
        </childnode>
      </node>
      <node id="598">
        <label>ua_types_generated.h</label>
      </node>
      <node id="597">
        <label>/home/travis/build/acplt/open62541/src/server/ua_nodestore.h</label>
        <link refid="ua_nodestore.h"/>
        <childnode refid="598" relation="include">
        </childnode>
        <childnode refid="599" relation="include">
        </childnode>
      </node>
      <node id="618">
        <label>stdio.h</label>
      </node>
      <node id="619">
        <label>inttypes.h</label>
      </node>
      <node id="602">
        <label>ua_types.h</label>
        <link refid="ua__types_8h"/>
        <childnode refid="603" relation="include">
        </childnode>
        <childnode refid="604" relation="include">
        </childnode>
        <childnode refid="605" relation="include">
        </childnode>
        <childnode refid="606" relation="include">
        </childnode>
        <childnode refid="601" relation="include">
        </childnode>
        <childnode refid="607" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="624">
        <label>/home/travis/build/acplt/open62541/src/server/ua_subscription_manager.h</label>
        <link refid="ua__subscription__manager_8h"/>
      </node>
      <node id="623">
        <label>/home/travis/build/acplt/open62541/src/server/ua_server_internal.h</label>
        <link refid="ua__server__internal_8h"/>
      </node>
      <node id="622">
        <label>/home/travis/build/acplt/open62541/src/server/ua_nodestore.h</label>
        <link refid="ua_nodestore.h"/>
        <childnode refid="623" relation="include">
        </childnode>
        <childnode refid="624" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__nodestore_1ga6a58ef1e1f4671734067273d69a4dec6" prot="public" static="no">
        <type>struct <ref refid="group__nodestore_1ga6a58ef1e1f4671734067273d69a4dec6" kindref="member">UA_NodeStore</ref></type>
        <definition>typedef struct UA_NodeStore UA_NodeStore</definition>
        <argsstring></argsstring>
        <name>UA_NodeStore</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/src/server/ua_nodestore.h" line="29" bodyfile="/home/travis/build/acplt/open62541/src/server/ua_nodestore.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__nodestore_1gaf4a4a284506499e2a78e9a8814a88161" prot="public" static="no">
        <type><ref refid="ua__eventloop_8h_1a67fafbd431d0a0ffa81515664c2144e2" kindref="member">void</ref>(*</type>
        <definition>typedef void(* UA_NodeStore_nodeVisitor)(const UA_Node *node)</definition>
        <argsstring>)(const UA_Node *node)</argsstring>
        <name>UA_NodeStore_nodeVisitor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A function that can be evaluated on all entries in a nodestore via UA_NodeStore_iterate. Note that the visitor is read-only on the nodes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/src/server/ua_nodestore.h" line="77" bodyfile="/home/travis/build/acplt/open62541/src/server/ua_nodestore.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nodestore_1ga24dbca297c72477ab2144076ec807307" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__nodestore_1ga6a58ef1e1f4671734067273d69a4dec6" kindref="member">UA_NodeStore</ref> *</type>
        <definition>UA_NodeStore* UA_NodeStore_new</definition>
        <argsstring>(void)</argsstring>
        <name>UA_NodeStore_new</name>
        <param>
          <type><ref refid="ua__eventloop_8h_1a67fafbd431d0a0ffa81515664c2144e2" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new nodestore </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/src/server/ua_nodestore.h" line="32"/>
      </memberdef>
      <memberdef kind="function" id="group__nodestore_1ga754d4517ad53cb4286592713d9981152" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ua__eventloop_8h_1a67fafbd431d0a0ffa81515664c2144e2" kindref="member">void</ref></type>
        <definition>void UA_NodeStore_delete</definition>
        <argsstring>(UA_NodeStore *ns)</argsstring>
        <name>UA_NodeStore_delete</name>
        <param>
          <type><ref refid="group__nodestore_1ga6a58ef1e1f4671734067273d69a4dec6" kindref="member">UA_NodeStore</ref> *</type>
          <declname>ns</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delete the nodestore and all nodes in it </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/src/server/ua_nodestore.h" line="35"/>
      </memberdef>
      <memberdef kind="function" id="group__nodestore_1gae5ecf7898b113ff25997346ede4a0ca9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ua__statuscodes_8h_1a82f92964aaa5dd1c5a1c5d7e9099883c" kindref="member">UA_StatusCode</ref></type>
        <definition>UA_StatusCode UA_NodeStore_insert</definition>
        <argsstring>(UA_NodeStore *ns, UA_Node *node, const UA_Node **inserted)</argsstring>
        <name>UA_NodeStore_insert</name>
        <param>
          <type><ref refid="group__nodestore_1ga6a58ef1e1f4671734067273d69a4dec6" kindref="member">UA_NodeStore</ref> *</type>
          <declname>ns</declname>
        </param>
        <param>
          <type><ref refid="structUA__Node" kindref="compound">UA_Node</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const <ref refid="structUA__Node" kindref="compound">UA_Node</ref> **</type>
          <declname>inserted</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Inserts a new node into the nodestore. If the nodeid is zero, then a fresh numeric nodeid from nodestore 1 is assigned. The memory of the original node is freed and the content is moved to a managed (immutable) node. If inserted is not NULL, then a pointer to the managed node is returned (and must be released). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/src/server/ua_nodestore.h" line="44"/>
      </memberdef>
      <memberdef kind="function" id="group__nodestore_1gac45871330d61a5cf82c53c93d9ce953e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ua__statuscodes_8h_1a82f92964aaa5dd1c5a1c5d7e9099883c" kindref="member">UA_StatusCode</ref></type>
        <definition>UA_StatusCode UA_NodeStore_replace</definition>
        <argsstring>(UA_NodeStore *ns, const UA_Node *oldNode, UA_Node *node, const UA_Node **inserted)</argsstring>
        <name>UA_NodeStore_replace</name>
        <param>
          <type><ref refid="group__nodestore_1ga6a58ef1e1f4671734067273d69a4dec6" kindref="member">UA_NodeStore</ref> *</type>
          <declname>ns</declname>
        </param>
        <param>
          <type>const <ref refid="structUA__Node" kindref="compound">UA_Node</ref> *</type>
          <declname>oldNode</declname>
        </param>
        <param>
          <type><ref refid="structUA__Node" kindref="compound">UA_Node</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const <ref refid="structUA__Node" kindref="compound">UA_Node</ref> **</type>
          <declname>inserted</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Replace an existing node in the nodestore. If the node was already replaced, UA_STATUSCODE_BADINTERNALERROR is returned. If inserted is not NULL, a pointer to the managed (immutable) node is returned. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/src/server/ua_nodestore.h" line="51"/>
      </memberdef>
      <memberdef kind="function" id="group__nodestore_1ga6f17e438ced10fd4c1f035a930acd23a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ua__statuscodes_8h_1a82f92964aaa5dd1c5a1c5d7e9099883c" kindref="member">UA_StatusCode</ref></type>
        <definition>UA_StatusCode UA_NodeStore_remove</definition>
        <argsstring>(UA_NodeStore *ns, const UA_NodeId *nodeid)</argsstring>
        <name>UA_NodeStore_remove</name>
        <param>
          <type><ref refid="group__nodestore_1ga6a58ef1e1f4671734067273d69a4dec6" kindref="member">UA_NodeStore</ref> *</type>
          <declname>ns</declname>
        </param>
        <param>
          <type>const <ref refid="structUA__NodeId" kindref="compound">UA_NodeId</ref> *</type>
          <declname>nodeid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove a node from the nodestore. Always succeeds, even if the node was not found. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/src/server/ua_nodestore.h" line="57"/>
      </memberdef>
      <memberdef kind="function" id="group__nodestore_1ga095dd91bcde9da3fe6738beae5dc60ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structUA__Node" kindref="compound">UA_Node</ref> *</type>
        <definition>const UA_Node* UA_NodeStore_get</definition>
        <argsstring>(const UA_NodeStore *ns, const UA_NodeId *nodeid)</argsstring>
        <name>UA_NodeStore_get</name>
        <param>
          <type>const <ref refid="group__nodestore_1ga6a58ef1e1f4671734067273d69a4dec6" kindref="member">UA_NodeStore</ref> *</type>
          <declname>ns</declname>
        </param>
        <param>
          <type>const <ref refid="structUA__NodeId" kindref="compound">UA_NodeId</ref> *</type>
          <declname>nodeid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieve a managed node (read-only) from the nodestore. Nodes are reference- counted (for garbage collection) and immutable. They can only be replaced entirely. After the node is no longer used, it needs to be released to decrease the reference count. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/src/server/ua_nodestore.h" line="65"/>
      </memberdef>
      <memberdef kind="function" id="group__nodestore_1gaafd9cf3d444706dffe43d38ae76fe2b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ua__eventloop_8h_1a67fafbd431d0a0ffa81515664c2144e2" kindref="member">void</ref></type>
        <definition>void UA_NodeStore_release</definition>
        <argsstring>(const UA_Node *managed)</argsstring>
        <name>UA_NodeStore_release</name>
        <param>
          <type>const <ref refid="structUA__Node" kindref="compound">UA_Node</ref> *</type>
          <declname>managed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Release a managed node. Do never call this with a node that isn&apos;t managed by a nodestore. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/src/server/ua_nodestore.h" line="71"/>
      </memberdef>
      <memberdef kind="function" id="group__nodestore_1ga3bf247b62795b6a53bb551124a41e4f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ua__eventloop_8h_1a67fafbd431d0a0ffa81515664c2144e2" kindref="member">void</ref></type>
        <definition>void UA_NodeStore_iterate</definition>
        <argsstring>(const UA_NodeStore *ns, UA_NodeStore_nodeVisitor visitor)</argsstring>
        <name>UA_NodeStore_iterate</name>
        <param>
          <type>const <ref refid="group__nodestore_1ga6a58ef1e1f4671734067273d69a4dec6" kindref="member">UA_NodeStore</ref> *</type>
          <declname>ns</declname>
        </param>
        <param>
          <type><ref refid="group__nodestore_1gaf4a4a284506499e2a78e9a8814a88161" kindref="member">UA_NodeStore_nodeVisitor</ref></type>
          <declname>visitor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Iterate over all nodes in a nodestore. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/acplt/open62541/src/server/ua_nodestore.h" line="80"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>UA_NODESTORE_H_</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>UA_NODESTORE_H_</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ua_types_generated.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ua__nodes_8h" kindref="compound">ua_nodes.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="group__nodestore_1ga6a58ef1e1f4671734067273d69a4dec6" kindref="member">UA_NodeStore</ref>;</highlight></codeline>
<codeline lineno="29" refid="group__nodestore_1ga6a58ef1e1f4671734067273d69a4dec6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="group__nodestore_1ga6a58ef1e1f4671734067273d69a4dec6" kindref="member">UA_NodeStore</ref><sp/><ref refid="group__nodestore_1ga6a58ef1e1f4671734067273d69a4dec6" kindref="member">UA_NodeStore</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><ref refid="group__nodestore_1ga6a58ef1e1f4671734067273d69a4dec6" kindref="member">UA_NodeStore</ref><sp/>*<sp/><ref refid="group__nodestore_1ga24dbca297c72477ab2144076ec807307" kindref="member">UA_NodeStore_new</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nodestore_1ga754d4517ad53cb4286592713d9981152" kindref="member">UA_NodeStore_delete</ref>(<ref refid="group__nodestore_1ga6a58ef1e1f4671734067273d69a4dec6" kindref="member">UA_NodeStore</ref><sp/>*ns);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><ref refid="ua__statuscodes_8h_1a82f92964aaa5dd1c5a1c5d7e9099883c" kindref="member">UA_StatusCode</ref><sp/><ref refid="group__nodestore_1gae5ecf7898b113ff25997346ede4a0ca9" kindref="member">UA_NodeStore_insert</ref>(<ref refid="group__nodestore_1ga6a58ef1e1f4671734067273d69a4dec6" kindref="member">UA_NodeStore</ref><sp/>*ns,<sp/><ref refid="structUA__Node" kindref="compound">UA_Node</ref><sp/>*node,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structUA__Node" kindref="compound">UA_Node</ref><sp/>**inserted);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><ref refid="ua__statuscodes_8h_1a82f92964aaa5dd1c5a1c5d7e9099883c" kindref="member">UA_StatusCode</ref><sp/><ref refid="group__nodestore_1gac45871330d61a5cf82c53c93d9ce953e" kindref="member">UA_NodeStore_replace</ref>(<ref refid="group__nodestore_1ga6a58ef1e1f4671734067273d69a4dec6" kindref="member">UA_NodeStore</ref><sp/>*ns,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structUA__Node" kindref="compound">UA_Node</ref><sp/>*oldNode,<sp/><ref refid="structUA__Node" kindref="compound">UA_Node</ref><sp/>*node,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structUA__Node" kindref="compound">UA_Node</ref><sp/>**inserted);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><ref refid="ua__statuscodes_8h_1a82f92964aaa5dd1c5a1c5d7e9099883c" kindref="member">UA_StatusCode</ref><sp/><ref refid="group__nodestore_1ga6f17e438ced10fd4c1f035a930acd23a" kindref="member">UA_NodeStore_remove</ref>(<ref refid="group__nodestore_1ga6a58ef1e1f4671734067273d69a4dec6" kindref="member">UA_NodeStore</ref><sp/>*ns,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structUA__NodeId" kindref="compound" tooltip="An identifier for a node in the address space of an OPC UA Server.">UA_NodeId</ref><sp/>*nodeid);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structUA__Node" kindref="compound">UA_Node</ref><sp/>*<sp/><ref refid="group__nodestore_1ga095dd91bcde9da3fe6738beae5dc60ed" kindref="member">UA_NodeStore_get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__nodestore_1ga6a58ef1e1f4671734067273d69a4dec6" kindref="member">UA_NodeStore</ref><sp/>*ns,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structUA__NodeId" kindref="compound" tooltip="An identifier for a node in the address space of an OPC UA Server.">UA_NodeId</ref><sp/>*nodeid);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nodestore_1gaafd9cf3d444706dffe43d38ae76fe2b8" kindref="member">UA_NodeStore_release</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structUA__Node" kindref="compound">UA_Node</ref><sp/>*managed);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="group__nodestore_1gaf4a4a284506499e2a78e9a8814a88161" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="ua__eventloop_8h_1a67fafbd431d0a0ffa81515664c2144e2" kindref="member">void</ref><sp/>(*<ref refid="group__nodestore_1gaf4a4a284506499e2a78e9a8814a88161" kindref="member">UA_NodeStore_nodeVisitor</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structUA__Node" kindref="compound">UA_Node</ref><sp/>*node);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nodestore_1ga3bf247b62795b6a53bb551124a41e4f1" kindref="member">UA_NodeStore_iterate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__nodestore_1ga6a58ef1e1f4671734067273d69a4dec6" kindref="member">UA_NodeStore</ref><sp/>*ns,<sp/><ref refid="group__nodestore_1gaf4a4a284506499e2a78e9a8814a88161" kindref="member">UA_NodeStore_nodeVisitor</ref><sp/>visitor);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>UA_NODESTORE_H_<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/acplt/open62541/src/server/ua_nodestore.h"/>
  </compounddef>
</doxygen>
